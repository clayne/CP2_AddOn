-- -*- mode: lua; encoding: windows-1251 -*-
local nagrad = {
  
  level_buusty = {
  "outfit_lethalspeed_exo_m1",
  "seva_scient_outfit",
  "exo_military_outfit"  
 },
  level_1 = {
  "ammo_5.45x39_ap",
  "ammo_5.56x45_ap",
  "ammo_5.56x45_ss190"
 },
  level_2 = {
  "af_babka_1",
  "af_cry_1",
  "af_dik_1",
  "af_kol_1",
  "af_pudd_1",
  "af_spirit_1",
  "af_night_star",
  "af_gold_fish",
  "af_electra_moonlight",
  "af_rusty_sea-urchin",
  "af_dummy_glassbeads"
 },
  level_3 = {
  "af_babka_2",
  "af_cry_2",
  "af_dik_2",
  "af_kol_2",
  "af_pudd_2",
  "af_spirit_2",
  "af_simbion"
 },
  level_4 = {
  "wpn_k98",
  "wpn_awm",
  "wpn_g3",
  "wpn_rpk74_sk1",
  "wpn_g41",
  "wpn_l85_m2",
  "wpn_sr25_mk11_mod0_sk1",
--  "wpn_ak9",
  "wpn_xm8_para_sk2",
  "wpn_mp5_m3",
  "wpn_zastava_m76",
  "wpn_vint14",
--  "wpn_val_m1",
--  "wpn_ak107",
--  "wpn_aek973",
--  "wpn_ak74_m2",
 },
  level_5 = {
  "af_cry_3",
  "af_babka_4",
  "af_dik_4",
  "af_spirit_4",
  "af_armor_4",
  "af_pudd_4",
  "af_kol_4"
 },
  level_6 = {
  "ammo_7.62x54_7h14",
  "ammo_7.62x54_7h1",
  "ammo_7.62x54_ap",
  "ammo_7.62x39_k",
  "ammo_minigun",
  "ammo_gauss"
 },
level_7 = {
  "ammo_9x39_ap",
  "ammo_7.62x51_fmj",
  "ammo_7.62x51_ap",
  "ammo_7.62x54_7h14",
  "ammo_7.62x54_7h1",
  "ammo_7.62x54_ap",
  "ammo_7.62x39_k",
  "ammo_9x39_pab9",
  "antirad",
  "medkit",
  "medkit_army",
  "medkit_scientic",
  "ammo_9x19_pbp",
  "ammo_9x19_fmj",
  "ammo_5.45x39_ap",
  "ammo_5.45x39_fmj",
  "ammo_5.56x45_ap",
  "ammo_5.56x45_ss190",
  "ammo_11.43x23_fmj",
  "ammo_11.43x23_hydro",
  "wpn_addon_silencer",
  "mutant_flesh_eye",
  "mutant_boar_leg",
  "mutant_dog_tail",
  "mutant_psevdodog_tail",
  "af_medusa",
  "af_blood",
  "af_drops",
  "grenade_f1",
  "grenade_rgd5",
  "ammo_og-7b",
  "ammo_vog-25p",
  "ammo_vog-25",
  "ammo_m209"
 }
}
local min_part_cond = 0.8

function prines_kopyto(first_speaker, second_speaker)
	return inventory.has_by_condition("mutant_boar_leg", 10, min_part_cond, 1)
end
function otdal_kopyto(first_speaker, second_speaker)
	local item = table.random(nagrad.level_2)
	inventory.out_by_condition("mutant_boar_leg", 10, min_part_cond, 1)
	inventory.give_items(item, 1)
end


function prines_hvost(first_speaker, second_speaker)
	return inventory.has_by_condition("mutant_dog_tail", 4, min_part_cond, 1)
end
function otdal_hvost(first_speaker, second_speaker)
	inventory.out_by_condition("mutant_dog_tail", 4, min_part_cond, 1)
	inventory.give_items("ammo_5.56x45_ap", 2)
end

function metka_man()
	level_tasks.add_location(story_ids.bar_dolg_general_voronin,"green_location","Раненый")
end


function voronin_flesh_have(task, objective)
	return inventory.search("crazy_flash", 1)
end


function voronin_flesh_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker:id()==0 and second_speaker or first_speaker, "crazy_flash", "out")
    inventory.give_items(table.random(nagrad.level_3), 1)
end	



function prapor_jaw_have(task, objective)
	return inventory.search("wpn_addon_shtyk_nozh", 1)
end


function prapor_jaw_done(first_speaker, second_speaker) 
	dialogs.relocate_item_section(first_speaker, "wpn_addon_shtyk_nozh", "out")
	dialogs.relocate_item_section(second_speaker, "wpn_spas12", "in")
end	

function informator_pda_have(task, objective)
	return inventory.search("bar_tiran_pda", 1)
end


function informator_pda_done(first_speaker, second_speaker) 
	dialogs.relocate_item_section(second_speaker, "bar_tiran_pda", "out")
	dialogs.relocate_item_section(second_speaker, "af_medusa", "in")
end

function pda_take(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(Actor, "bar_tiran_pda", "in")
	npc:set_relation(game_object.friend, Actor)
	start_small_timer(2000, function()
		news_manager.send_tip("bar_tiran_pda_take_sms1", nil, nil, 25000)
		news_manager.send_tip("bar_tiran_pda_take_sms2", 15, nil, 15000)
	end)
end

function gavr_pda_have(task, objective)
	return inventory.search("mil_bolt_pda", 1)
end

function gavr_pda_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "mil_bolt_pda", "out")
    inventory.give_items(table.random(nagrad.level_3), 1)
end	


function saharov_pda_have(task, objective) 
	return inventory.search("pda_priz", 1)
end


function saharov_pda_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "pda_priz", "out", 1)
    inventory.give_items(table.random(nagrad.level_2), 1)
end	

function freeman_eagle_have(task, objective)
	return inventory.search("wpn_eagle_m1", 1)
end

function freeman_eagle_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "wpn_eagle_m1", "out", 1)
    inventory.give_items(table.random(nagrad.level_3), 1)
end

function ghange_set(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	start_small_timer(math.random(500,1000), function()
		npc:set_character_community("killer", 0, 0)
	end)
end

function freeman_case_have(task, objective) 
	return inventory.search("case_freeman", 1)
end

function freeman_case_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "case_freeman", "out")
    inventory.give_items(table.random(nagrad.level_4), 1)
end

function gavr_doc_have(task, objective)
	return inventory.search("lab_x10_documents", 1)
end

function gavr_doc_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "lab_x10_documents", "out")
    inventory.give_items(table.random(nagrad.level_3), 1)
end

function bland_flash_have(task, objective)
	return inventory.search("bland_flash", 1)
end

function bland_flash_done(first_speaker, second_speaker)
	local npc = first_speaker:id()==0 and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "bland_flash", "out")
    inventory.give_items(table.random(nagrad.level_3), 1)
end	

-- Akill begin
function krov_kamen()
	return inventory.has_by_condition("mutant_flesh_eye", 3, min_part_cond, 1)
end
function otdal_kamen()
	inventory.out_by_condition("mutant_flesh_eye", 3, min_part_cond, 1)
	inventory.give_items("ammo_9x19_pbp",2)
end

function prines_face_tushkano()
	return inventory.has_by_condition("mutant_face_tushkano", 5, min_part_cond, 1)
end
function otdal_face_tushkano()
	inventory.out_by_condition("mutant_face_tushkano", 5, min_part_cond, 1)
	inventory.give_items("ammo_11.43x23_hydro",2)
end

function prines_ruki()
	return inventory.has_by_condition("mutant_hand_kontroler", 2, min_part_cond, 1)
end
function otdal_ruki()
	inventory.out_by_condition("mutant_hand_kontroler", 2, min_part_cond, 1)
	inventory.give_items("ammo_5.45x39_ap",3)
	inventory.give_items("vodka",1)
end

-- Лимит диалогов. Дэн 12 раз
function trade_dan_not_enough()
	return not dialogs.dialog_is_enough("trade_dan_enough",12)
end
function trade_dan_enough()
	return dialogs.dialog_is_enough("trade_dan_enough",12)
end
function trade_dan_count()
	return dialogs.dialog_count("trade_dan_enough",12)
end

local foto_arts = {
	"af_cry_1",
	"af_babka_2",
	"af_dik_2",
	"af_spirit_2",
	"af_armor_2",
	"af_pudd_2",
	"af_kol_2"
}
function give_foto_arts()
	inventory.give_items(table.random(foto_arts),1)
	
	if	has_alife_info("monster_stealth_done_boar_s") and
		has_alife_info("monster_stealth_done_bloodsucker_s") and
		has_alife_info("monster_stealth_done_dog_s") and
		has_alife_info("monster_stealth_done_flesh_s") and
		has_alife_info("monster_stealth_done_pseudodog_s") and
		has_alife_info("monster_stealth_done_burer_s") and
		has_alife_info("monster_stealth_done_cat_s") and
		has_alife_info("monster_stealth_done_chimera_s") and
		has_alife_info("monster_stealth_done_controller_s") and
		has_alife_info("monster_stealth_done_fracture_s") and
		has_alife_info("monster_stealth_done_gigant_s") and
		has_alife_info("monster_stealth_done_tushkano_s") and
		has_alife_info("monster_stealth_done_snork_s")
	then
		Actor:give_info_portion("silent_hunt_done")
	end
end
-- Akill end

function dan_grab_have(task, objective) 
if Actor ~= nil then
return Actor:object("bad_psy_helmet") ~= nil
end
return false
end


function dan_grab_done(first_speaker, second_speaker)
	local trader
	if Actor:id() == first_speaker:id() then
		trader = second_speaker
	else
		trader = first_speaker
	end
	local item = table.random(nagrad.level_3)
	dialogs.relocate_item_section(trader, "bad_psy_helmet", "out", 1)
    dialogs.relocate_item_section(Actor, item , "in", count)
end	

function yakut_help_have(task, objective) 
if Actor ~= nil then
return Actor:object("new_book") ~= nil
end
return false
end


function yakut_help_done(first_speaker, second_speaker)
	local trader
	if Actor:id() == first_speaker:id() then
		trader = second_speaker
	else
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "new_book", "out", 1)
	local count = math.random(4,5)
	for i = 1, count do
		inventory.give_items(table.random(nagrad.level_1))
	end
end

function yakut_treasure_have(task, objective) 
if Actor ~= nil then
return Actor:object("notebook_new") ~= nil
end
return false
end

function yakut_treasure_done(first_speaker, second_speaker) 
    dialogs.relocate_item_section(first_speaker, "notebook_new", "out")
	second_speaker:set_relation(game_object.friend, second_speaker)
end

function dan_flash_have(task, objective) 
if Actor ~= nil then
return Actor:object("nauch_flash") ~= nil
end
return false
end

function dan_flash_done(first_speaker, second_speaker) 
    dialogs.relocate_item_section(first_speaker, "nauch_flash", "out")
	dialogs.relocate_item_section(first_speaker, "good_psy_helmet", "in")
end	

function treasure_ecolog_have(task, objective) 
	return Actor:object("new_book_prizrak") ~= nil
end

function treasure_ecolog_spawn(fs, ss)
	local obj = AI:object( "prizrak_treasure_box" )
	if obj then AI:release( obj, true ) end

	local spawn_items = {
		['ammo_7.62x54_ap'] = 1,
		['new_book_prizrak'] = 1,
		['vodka'] = 2,
		['medkit_scientic'] = 2,
		['af_armor_3'] = 1
	}
	naxac.create_treasure( vector():set(33.1627655029297,19.6950244903564,197.9560546875),
		272017, 694, spawn_items, "crlc_big", "Дневник Призрака" )
end

function treasure_ecolog_done(first_speaker, second_speaker)
	local trader
	if Actor:id() == first_speaker:id() then
		trader = second_speaker
	else
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "new_book_prizrak", "out", 1)
	local count = math.random(2,3)
	for i = 1, count do
		inventory.give_items(table.random(nagrad.level_6))
	end
end					

function barmen_simbion_have(task, objective)
	return inventory.search("af_simbion")
end

function barmen_simbion_done(first_speaker, second_speaker) 
    dialogs.relocate_item_section(second_speaker, "af_simbion", "out")
end	

function system_ecolog_have(task, objective)
	return inventory.search("computer_new",1) ~= false
end

function system_ecolog_done(first_speaker, second_speaker)
	local trader
	if Actor:id() == first_speaker:id() then
		trader = second_speaker
	else
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "computer_new", "out", 1)
	local count = math.random(2,3)
	for i = 1, count do
		inventory.give_items(table.random(nagrad.level_6))
	end
end	

function prizrak_zver_have(task, objective)
	return inventory.search("sniper_flash")
end

function prizrak_zver_done(first_speaker, second_speaker) 
    dialogs.relocate_item_section(first_speaker, "sniper_flash", "out")
	dialogs.relocate_item_section(second_speaker, "wpn_dark_gauss", "in")
end	

function prizrak_finalzver_have(task, objective)
	return inventory.search("new_document_sniper")
end

function prizrak_finalzver_done(first_speaker, second_speaker)
	local trader
	if Actor:id() == first_speaker:id() then
		trader = second_speaker
	else
		trader = first_speaker
	end
	dialogs.relocate_item_section(trader, "new_document_sniper", "out")
	local count = math.random(2,3)
	for i = 1, count do
		inventory.give_items(table.random(nagrad.level_6))
	end
end

function yakut_ograblen_have(task, objective)
	return inventory.search("inventory_new_box")
end

function yakut_ograblen_done(first_speaker, second_speaker) 
    dialogs.relocate_item_section(second_speaker, "inventory_new_box", "out")
	inventory.give_items("ammo_5.56x45_ss190",5)
	inventory.give_items("antirad",3)
	inventory.give_items("medkit_army",4)
end	
-- Akill begin
function helmet_est()
	return inventory.search("good_psy_helmet",2)
end
function helmet_otdal()
	inventory.out_items("good_psy_helmet",1)
	inventory.give_items("ammo_super_gauss",5)
end
-- Akill end
function left_arhara(first_speaker, second_speaker) 
    dialogs.relocate_item_section(second_speaker, "device_torch", "in")
end

function atak_larger_done(first_speaker, second_speaker)
	local item = table.random(nagrad.level_2)
	dialogs.relocate_item_section(Actor, item , "in")
end

function tri_kristal()
	return inventory.search_af("af_cristall",5) ~= false
end
   
function otdal_kristal(first_speaker, second_speaker)
	inventory.out_items("af_cristall", 5)
    inventory.give_items(table.random(nagrad.level_5))
end

function prines_lomot()
	return inventory.search_af("af_mincer_meat",10) ~= false
end
   
function otdal_lomot(first_speaker, second_speaker)
	inventory.out_items("af_mincer_meat", 10)
    inventory.give_items(table.random(nagrad.level_4))
end

function prines_odingrav()
	return inventory.search_af("af_gravi",1) ~= false
end
   
function otdal_odingrav(first_speaker, second_speaker)
	inventory.out_items("af_gravi",1) 
end

function nagrada_odingrav(first_speaker, second_speaker)
	inventory.give_items("antirad",3)
end

function zahar_naemnik_done(first_speaker, second_speaker)
	local count = math.random(3,4)
	local item
	for i = 1, count do
		item = table.random(nagrad.level_1)
		inventory.give_items(item)
	end
end

function prapor_apt_have()
	return inventory.search("medkit_scientic",10) ~= false
end
   
   
function prapor_apt_done(first_speaker, second_speaker)
	inventory.out_items("medkit_scientic",10) 
end

function barrem_talk_have()
	return inventory.search_af("af_cry_2",1) ~= false
end

function vzal_pda_voen(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "voen_pda", "in")
end

function otdal_pda_voen(first_speaker, second_speaker)
    dialogs.relocate_item_section(second_speaker, "voen_pda", "out")
end

function add_spot_tamaz()
	local obj = AI:story_object(story_ids.tamaz_garbage)
	if obj then
		level.map_add_object_spot_ser(obj.id, "crlc_big", "Тамаз")
	end
end

function prizrak_tainiy_have(first_speaker, second_speaker)
    return inventory.search("plan_document",1) ~= false
end

function prizrak_tainiy_done(first_speaker, second_speaker)
    dialogs.relocate_item_section(first_speaker, "plan_document", "out")
	local obj = AI:story_object(story_ids.tamaz_garbage)
	if obj then
		level.map_remove_object_spot(obj.id, "crlc_big")
	end
end

function gold_art_have()
	return inventory.search_af("gold_art",10) ~= false
end

function gold_art_done()
inventory.out_items("gold_art",10)
end

function tri_tainik_spawn()
	local items

	if not has_alife_info("tri_tainik_first") then
		items = {
			["ammo_gauss"] = 1,
			["new_prizrak_document1"] = 1,
			["antirad"] = 4,
			["medkit_scientic"] = 2,
			["af_soul"] = 1,
			["af_gold_fish"] = 1,
			["af_night_star"] = 1
		}
		naxac.create_treasure(
			vector():set(567.438354492188,-0.0634143352508545,445.629730224609),
			136487, 2586, items,
			"crlc_big", "Дневник №1"
		)
	end
	if not has_alife_info("tri_tainik_second") then
		items = {
			["ammo_9x39_ap"] = 1,
			["new_prizrak_document2"] = 1,
			["antirad"] = 1,
			["medkit_scientic"] = 3,
			["af_kol_4"] = 1
		}
		naxac.create_treasure(
			vector():set(495.156707763672,11.8163270950317,301.252563476563),
			136476, 2586, items,
			"crlc_big", "Дневник №2"
		)
	end
	if not has_alife_info("tri_tainik_third") then
		items = {
			["ammo_5.56x45_ss190"] = 2,
			["new_prizrak_document3"] = 1,
			["antirad"] = 4,
			["medkit_scientic"] = 2,
			["af_buliz"] = 1
		}
		naxac.create_treasure(
			vector():set(410.928497314453,-0.0010150671005249,123.403663635254),
			139454, 2596, items,
			"crlc_big", "Дневник №3"
		)
	end
end

function tri_tainik_first()
	return inventory.search("new_prizrak_document1",1) ~= false
end

function tri_tainik_second()
	return inventory.search("new_prizrak_document2",1) ~= false
end

function tri_tainik_third()
	return inventory.search("new_prizrak_document3",1) ~= false
end

function tri_tainik_have()
     return inventory.search("new_prizrak_document1",1) ~= false and                                           inventory.search("new_prizrak_document2",1) ~= false  and 
inventory.search("new_prizrak_document3",1) ~= false
end

function tri_tainik_done()
inventory.out_items("new_prizrak_document1",1)
inventory.out_items("new_prizrak_document2",1)
inventory.out_items("new_prizrak_document3",1)
end


function inform_20_pda_have()
     return inventory.search("device_pda_npc",20) ~= false 
end

function inform_40_pda_have()
     return inventory.search("device_pda_npc",40) ~= false 
end

function inform_20_pda(first_speaker, second_speaker)
	inventory.out_items("device_pda_npc", 20)
	inventory.give_items( table.random(nagrad.level_7), math.random(2,3) )
end

function inform_40_pda(first_speaker, second_speaker)
	inventory.out_items("device_pda_npc", 40)
	treasure_manager.give_random_treasure(true)
end

function dyak_dal(first_speaker, second_speaker)
	inventory.give_items("medkit", 2)   
	inventory.give_items("ammo_5.45x39_ap", 3)
end

function dyak_nagrad(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_7), math.random(4,5) )
end

function kalmyak_need_done(first_speaker, second_speaker)
	local text = "Код от замка: "..amk.load_variable("kalmyk_code", "я забыл, так что открывай как хочешь.")
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	Actor:give_talk_message(text, task_texture, task_rect, "simple_answer_item")
	news_manager.send_tip(text, 0, "kalmyk", 15000)
	amk.del_variable("kalmyk_code")
	
	inventory.out_items("box_kalmyak", 1)
	inventory.give_items( table.random(nagrad.level_2), 1 )
	Actor:give_info_portion("kalmyak_need_done")
end

function kalmyak_dal(first_speaker, second_speaker)
	inventory.give_items( "medkit", 2 )
end

function kalmyak_need_have()
	return inventory.search("box_kalmyak",1) ~= false
end

function kalmyak_3_vodka()
     return inventory.search("vodka",3) ~= false 
end

function kalmyak_3_sigaret()
     return inventory.search("sigaret",3) ~= false 
end

function kalmyak_3_vodka_otdal(first_speaker, second_speaker)
	inventory.out_items("vodka",3)
	inventory.give_items( "maz", 1 )
end

function kalmyak_3_sigaret_otdal(first_speaker, second_speaker)
	inventory.out_items("sigaret",3)
	inventory.give_items( "maz", 1 )
end

function marsh_remont_have()
     return inventory.search("maz",3) ~= false 
end

function marsh_remont_done()
	inventory.out_items("maz", 3)
end

function dyak_maz_have()
	return inventory.search_af("af_soul",1) ~= false 
end

function dyak_maz_done(first_speaker, second_speaker)
	inventory.out_items("af_soul",1)
	inventory.give_items( "maz", 3 )
end


function controller_hutor_have()
     return inventory.search("red_mozg",1) ~= false 
end

function controller_hutor_done(first_speaker, second_speaker)
   inventory.give_items( table.random(nagrad.level_2), 1 ) 
   inventory.out_items("red_mozg", 1)
end

function burer_red_hand_est()
	return inventory.search("mutant_burer_red_hand",1) ~= false 
end

function burer_red_hand_otdal(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_2), 1 ) 
	inventory.out_items("mutant_burer_red_hand",1)
end

function krovosos_red_jaw_est()
	return inventory.search("mutant_krovosos_red_jaw",1) ~= false 
end

function krovosos_red_jaw_otdal(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_4), 1 ) 
	inventory.out_items("mutant_krovosos_red_jaw",1)
end

function sveeblov_ferma_have()
	return has_alife_info("sveeblov_ferma_begin") and inventory.search("wpn_pkm",1,true)
end

function sveeblov_ferma_done(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_4), 1 ) 
	inventory.out_items("wpn_pkm", 1)
end


function kot_need_doc_have()
	return inventory.search("mono_dead_doc",1) ~= false 
end

function kot_need_doc_done()
	inventory.out_items("mono_dead_doc",1)
end

function kot_need_next_have()
	return inventory.search("mono_note",1) ~= false 
end

function kot_need_next_done()
	inventory.out_items("mono_note",1)
end

function need_televizor_have()
	return inventory.search("televizor",1) ~= false 
end

function need_televizor_done()
	inventory.out_items("televizor",1)
end

function marsh_barman_dal(first_speaker, second_speaker)
	inventory.give_items("wpn_awm_new", 1) 
	inventory.give_items("ammo_igl_new", 1)
end

function marsh_barman_have()
	return inventory.search("wpn_awm_new",1) ~= false 
end

function marsh_barman_zabral(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_3), 1 ) 	
	inventory.out_items("wpn_awm_new", 1)  
end


function borman_sniper_done(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_ss190", 3)
	inventory.give_items("ammo_7.62x51box", 3)   
end

function borman_glushitel_begin()
	return inventory.search("glushitel",1) ~= false 
end

function borman_glushitel_next(first_speaker, second_speaker)
	inventory.give_items("glushitel", 1) 
end

function borman_glushitel_done(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_ap", 3)
	inventory.give_items("ammo_7.62x51_ap", 1) 
	inventory.give_items("ammo_7.62x54_ap", 1) 
	inventory.give_items("ammo_7.62x25_ps", 1) 
	inventory.give_items("ammo_7.62x51box", 1)    
end

function kot_kalmyak_lekar_next()
	return inventory.search_af("af_night_star",1) ~= false
		and inventory.search("mutant_snork_leg",10) ~= false  
end

function kot_kalmyak_lekar_est()
	inventory.out_items("af_night_star",1)
	inventory.out_items("mutant_snork_leg",10)
end

function kot_kalmyak_lekar_have(first_speaker, second_speaker)
	inventory.give_items("lekar_kalmyak", 1) 
end

function kot_kalmyak_lekar_done(first_speaker, second_speaker)
	inventory.give_items("monolit_black_outfit_plus", 1)
	inventory.give_items("wpn_akm_m3", 1) 
	inventory.out_items("lekar_kalmyak",1)
end

function lekar_kalmyak_actor()
	return inventory.search("lekar_kalmyak",1) ~= false 
end

function kot_holod_lekar_next()
	return inventory.search_af("af_simbion",1) ~= false 
end

function kot_holod_lekar_est(first_speaker, second_speaker)
	inventory.give_items("lekar_kalmyak", 1) 
	inventory.out_items("af_simbion",1)
end

function kot_holod_lekar_done(first_speaker, second_speaker)
	inventory.give_items("monolit_black_outfit_plus", 1) 
	inventory.out_items("lekar_kalmyak",1)
end


function holod_af_gravi_have()
	return inventory.search_af("af_gravi",1) ~= false 
end

function holod_af_gravi_dal(first_speaker, second_speaker)
	inventory.give_items("grenade_f1", 3) 
	inventory.out_items("af_gravi",1)
end

function holod_af_mincer_meat_have()
	return inventory.search_af("af_mincer_meat",1) ~= false 
end

function holod_af_mincer_meat_dal(first_speaker, second_speaker)
	inventory.give_items("grenade_f1", 3) 
	inventory.out_items("af_mincer_meat",1)
end

function holod_two_af_vyvert_have()
	return inventory.search_af("af_vyvert",2) ~= false 
end

function holod_two_af_vyvert_dal(first_speaker, second_speaker)
	inventory.give_items("grenade_f1", 3) 
	inventory.out_items("af_vyvert",2)
end


function holod_af_ameba_slug_have()
	return inventory.search_af("af_ameba_slug",1) ~= false 
end

function holod_af_ameba_slug_dal(first_speaker, second_speaker)
	inventory.give_items("medkit", 4) 
	inventory.out_items("af_ameba_slug",1)
end

function holod_two_af_electra_sparkler_have()
	return inventory.search_af("af_electra_sparkler",2) ~= false 
end

function holod_two_af_electra_sparkler_dal(first_speaker, second_speaker)
	inventory.give_items("medkit", 4) 
	inventory.out_items("af_electra_sparkler",2)
end

function holod_two_af_blood_have()
	return inventory.search_af("af_blood",2) ~= false 
end

function holod_two_af_blood_dal(first_speaker, second_speaker)
	inventory.give_items("medkit", 4) 
	inventory.out_items("af_blood",2)
end

function xalyava_nebo_have(task, info)
	if (Actor:has_info("xalyava_naem1_dead")
		and Actor:has_info("xalyava_naem2_dead")
		and Actor:has_info("xalyava_naem3_dead")
		and Actor:has_info("xalyava_naem4_dead")
		and Actor:has_info("xalyava_naem5_dead")
		and Actor:has_info("xalyava_naem6_dead")
		and Actor:has_info("xalyava_naem7_dead")
		and Actor:has_info("xalyava_naem8_dead"))
	then
		return Actor:give_info_portion("xalyava_nebo_have") 
	end
	return false
end

function xalyava_nebo_done(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_buusty), 1 ) 
end

function francuz_have()
	return inventory.search("pda_francuz",1) ~= false 
end

function francuz_done()
	inventory.out_items("pda_francuz",1)
	inventory.give_items("wpn_glock21",1)
	inventory.give_items("ammo_357_hp_mag",2)
end

function actor_have_tri_vo()
	return inventory.search("vodka",3) ~= false 
end

function nebo_clear_dal(first_speaker, second_speaker)
	inventory.give_items("case_nebo", 1) 
end

function nebo_clear_have()
	return inventory.search("case_nebo",1) ~= false 
end

function nebo_clear_done()
	inventory.out_items("case_nebo",1)
end

function nebo_kurier_doc_est(first_speaker, second_speaker)
	inventory.give_items( table.random(nagrad.level_2), 1 )
end

function nebo_kurier_done(first_speaker, second_speaker)
	inventory.give_items("nebo_clear", 1) 
end

function shadowman_zver_have(task, info)
	for i = 1, 30 do
		if not Actor:has_info("shadowman_zver"..i.."_dead") then
			return false
		end
	end
	Actor:give_info_portion("shadowman_zver_have")
	return true
end

function shadowman_zver_done(first_speaker, second_speaker)
	inventory.give_items("ammo_12x70_buck", 5)
end

function shadowman_forest_done(first_speaker, second_speaker)
	inventory.give_items("medkit_army", 6)
end

function act_have_tri_grib()
	return inventory.search("mushroom",3) ~= false 
end

function grib_five_762x25_ps(first_speaker, second_speaker)
    inventory.give_items("ammo_7.62x25_ps", 5)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_tri_762x51box(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x51box", 3)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_tri_medkit_army(first_speaker, second_speaker)
	inventory.give_items("medkit_army", 3)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_tri_antirad(first_speaker, second_speaker)
	inventory.give_items("antirad", 3)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_four_545x39_fmj(first_speaker, second_speaker)
	inventory.give_items("ammo_5.45x39_fmj", 4)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_four_556x45_ss190(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_ss190", 4)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function grib_tri_9x39_pab9(first_speaker, second_speaker)
	inventory.give_items("ammo_9x39_pab9", 3)
	inventory.out_items("mushroom",3)	
	archievements.acv_count_event("acv_grib", 40, "Грибник", 3) 
end

function klyak_forest_doc_next(first_speaker, second_speaker)
	inventory.give_items("rukzak_green", 1) 
end

function actor_has_rukzak_green()
	return inventory.search("rukzak_green",1) ~= false 
end

function klyak_forest_doc_green()
	inventory.out_items("rukzak_green",1)	
end

function klyak_forest_doc_have()
	return inventory.search("klyak_forest_doc",1) ~= false 
end

function klyak_forest_doc_done()
	inventory.out_items("klyak_forest_doc",1)	
end

--' Проверим наличие бритвы для Волка
function kvest_britva_have(task, objective)
	return inventory.search("britva", 1)
end

