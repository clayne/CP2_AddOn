-- -*- mode: lua; encoding: windows-1251 -*-
local current_fix = 63

function fix_63()
	local obj = AI:object( "mil_freedom_barier_respawn_1" )
	if obj then
		AI:release( obj, true )
		AI:create ( spawn_ids.mil_freedom_barier_respawn_1 )
	end
	obj = AI:story_object( story_ids.gen_solvador1 )
	if obj then
		AI:release( obj, true )
		AI:create( AI:spawn_id( story_ids.gen_solvador1 ) )
	end
	obj = AI:story_object( story_ids.gen_andersen1 )
	if obj then
		AI:release( obj, true )
		AI:create( AI:spawn_id( story_ids.gen_andersen1 ) )
	end
end
function fix_62()
	level_changers.create_allspawn_lc("lc_radar_to_warlab","to_warlab","info_way_arhara_radar_warlab",2, true)
end
function fix_61()
	local obj
	local t = {
		"chaes2_kran_zad_rukzak",
		"chaes2_kran_verh_rukzak",
		"chaes2_truba_art_rukzak"
	}
	for i, v in ipairs(t) do
		obj = AI:object(v)
		if obj then AI:release(obj, true) end
	end
end
function fix_60()
	local obj = AI:object("padar_spawn_zombi_kukla_restrictor")
	if obj then
		AI:release(obj, true)
	end
	if not has_alife_info("muha_kukla_have") then
		AI:create( spawn_ids.padar_spawn_zombi_kukla_restrictor )
	end
end
function fix_59()
	local t = {
		"esc_zombie_weak_0000",
		"esc_zombie_1",
		"esc_zombie_weak_0001",
		"esc_zombie_weak_0002",
		"esc_zombie_weak_0003",
		"esc_zombie_2"
	}
	for i, v in ipairs(t) do
		if AI:object(v) == nil then
			AI:create( spawn_ids[v] )
		end
	end
end
function fix_58()
	if not has_alife_info("vkluchit_generator_done") then
		if not AI:story_object( story_ids.new_kluk_nz ) then
			AI:create( AI:spawn_id( story_ids.new_kluk_nz ) )
		end
	end
end
function fix_57()
	level_changers.create_allspawn_lc("lc_generators_to_warlab", "to_warlab", nil, 3, true)
	AI:create( spawn_ids.generators_door_0001 )
end
function fix_56()
	local obj = AI:story_object( story_ids.marsh_udav )
	if obj then
		AI:release( obj, true )
		AI:create( AI:spawn_id( story_ids.marsh_udav ) )
	end
end
function fix_55()
	local obj = AI:story_object( story_ids.lc_atp_to_pripyat )
	if obj then
		netpk:modify( obj, {
			dest_direction = vector():set(0,-0.050400383770466,0)
		}, netpk.fState )
	end
	local npcs = {
		"generators_prizrak",
		"generators_black_dok",
		"frits"
	}
	for i, name in ipairs(npcs) do
		obj = AI:object(name)
		if obj then
			local data = netpk:get(obj, netpk.fState)
			local cd = netpk:parse_custom_data(data.custom_data)
			cd.logic = {
				cfg = "scripts\\generators\\"..name..".ltx"
			}
			data.custom_data = netpk:gen_custom_data(cd)
			netpk:set(obj, data, netpk.fState + netpk.fConvert)
		end
	end

	local del = {
		"gen_hit_heli_hit_sms_restrictor",
		"gen_hit1_heli1_hit1_sms_restrictor",
		"sms_doc_letit_restrictor"
	}
	for i, v in ipairs(del) do
		obj = AI:object(v)
		if obj then AI:release(obj, true) end
	end

	AI:create(spawn_ids.frits_zone_restrictor)

	obj = AI:story_object( story_ids.lc_aes_to_generators )
	if obj then
		netpk:modify( obj, {
			dest_game_vertex_id = 3147,
			dest_level_vertex_id = 603299,
			dest_position = vector():set(231.33750915527,20.032674789429,-99.971549987793),
			dest_direction = vector():set(0,2.5367867946625,0),
		}, netpk.fState )
	end
end
function fix_54()
	local obj = AI:story_object( story_ids.lc_x18_to_warlab )
	if obj then
		netpk:modify( obj, {
			dest_position = vector():set(-8.9587984085083,-13.860092163086,13.769829750061),
			dest_direction = vector():set(0,3.0887975692749,0)
		}, netpk.fState )
	end
	obj = AI:story_object( story_ids.lc_warlab_to_military )
	if obj then
		netpk:modify( obj, {
			dest_position = vector():set(113.47244262695,-9.3721179962158,53.680458068848),
			dest_direction = vector():set(0,1.6103852987289,0)
		}, netpk.fState )
	end
	obj = AI:story_object( story_ids.lc_bar_to_pripyat )
	if obj then
		netpk:modify( obj, {
			dest_position = vector():set(-106.85562133789,-0.58082216978073,268.09664916992),
			dest_direction = vector():set(0,3.4439854621887,0)
		}, netpk.fState )
	end
end
function fix_53()
	local obj = AI:story_object( story_ids.kolmogor )
	if obj then
		AI:release(obj, true)
		AI:create( AI:spawn_id( story_ids.kolmogor ) )
	end

	local del = {
		"kolm_stroy_sms_restrictor",
		"kolmo_say_pobeda_sms_restrictor",
		"kap_tele_restrictor",
		"privyzka_generatorov_restrictor"
	}
	for i, v in ipairs(del) do
		obj = AI:object( v )
		if obj then
			AI:release( obj, true )
		end
	end

	obj = AI:object( "spawn_dialog_foto_restrictor" )
	if obj then
		AI:release( obj, true )
		if Actor:dont_has_info( "dialog_foto_pili" ) then
			AI:create ( spawn_ids["spawn_dialog_foto_restrictor"] )
		end
	end
end
function fix_52()
	local obj = AI:story_object( story_ids.lc_lost_village_to_limansk )
	if obj then
		netpk:modify( obj, { dest_direction = vector():set(0,2.9826085567474,0) }, netpk.fState )
	end
end
function fix_51()
	local obj = AI:story_object( story_ids.generators_udav )
	if obj then
		AI:release(obj, true)
		AI:create( AI:spawn_id( story_ids.generators_udav ) )
	end
end
function fix_50()
	level_changers.create_allspawn_lc("lc_hospital_to_limansk", "to_limansk", nil, 1, true)

	obj = AI:story_object( story_ids.lc_limansk_to_hospital )
	if obj then
		netpk:modify( obj, { dest_direction = vector():set(0,2.9923055171967,0) }, netpk.fState )
	end

	obj = AI:story_object( story_ids.klenov )
	if obj then
		AI:release( obj, true )
		AI:create( AI:spawn_id( story_ids.klenov ) )
	end

	local t = {
		"warlab_trupak_sekret",
		"warlab_sekret_mozg",
		"warlab_arhara_sekret_stol1",
		"warlab_sekret_nout1",
		"warlab_sekret_nout2",
		"warlab_radio",
		"pantera_space_restrictor_timer"
	}
	for i, v in ipairs(t) do
		obj = AI:object( v )
		if obj then
			AI:release( obj, true )
		end
		AI:create ( spawn_ids[v] )
	end
end
function fix_49()
	local t = {
		"pri_helicopters2_start_zone",
		"pri_helicopter_21",
		"pri_helicopter_22"
	}
	local obj
	for i, v in ipairs(t) do
		obj = AI:object( v )
		if obj then
			AI:release( obj, true )
		end
		AI:create ( spawn_ids[v] )
	end

	obj = AI:object( "pri_boar_strong" )
	if obj then
		AI:release( obj, true )
	end
	AI:create( AI:spawn_id( story_ids.pri_gigant1 ) )

	obj = AI:object( "pri_boar_strong_0001" )
	if obj then
		AI:release( obj, true )
	end
	AI:create( AI:spawn_id( story_ids.pri_gigant2 ) )
end
function fix_48()
	local obj = AI:story_object( story_ids.borman )
	if obj then
		AI:release( obj, true )
		AI:create( AI:spawn_id( story_ids.borman ) )
	end
end
function fix_47()
	local obj
	local obj2info = {
		["mono_netu_restrictor"] = "vkluchit_generator_start",
		["u_shlagbauma_space_restrictor"] = "idu_k_generatoru",
		["u_tretego_generatora_restrictor"] = "vkluchit_generator_done",
		["vertuhi_poshli_restrictor"] = "gener_boy_heli_go",
		["predesant_black_heli_restrictor"] = "predesant_black_heli"
	}
	for k, v in pairs(obj2info) do
		obj = AI:object( k )
		if obj then
			AI:release( obj, true )
			if Actor:dont_has_info( v ) then
				AI:create ( spawn_ids[k] )
			end
		end
	end

	local del = {
		"vitamin_posrednik_restrictor",
		"sv_chern_peregovor_restrictor",
		"chaes2_kluk_sms_restrictor",
		"iz_moskvy_sms_restrictor",
		"ona_mehy_dostala_restrictor",
		"aver_muha_pilot_vzlet_sms_restrictor",
		"vzruv_aver_vert_restrictor",
		"after_die_muha_restrictor",
		"podgotovka_zahvata_restrictor",
		"plan_zahvata_restrictor",
		"mu_opozdaly_restrictor"
	}
	for i, v in ipairs(del) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
	end

	obj = AI:story_object( story_ids.devchonka )
	if obj and obj:alive() then
		local pos, lv, gv = obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id
		AI:release( obj, true )
		obj = AI:create( AI:spawn_id( story_ids.devchonka ) )
		AI:teleport_object( "", pos, lv, gv, obj.id )
	end

	obj = AI:story_object( story_ids.stalker_rost_sysh )
	if obj and obj:alive() then
		local pos, lv, gv = obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id
		AI:release( obj, true )
		obj = AI:create( AI:spawn_id( story_ids.stalker_rost_sysh ) )
		AI:teleport_object( "", pos, lv, gv, obj.id )
	end

	local resp = {
		"marsh_sych_stalk1",
		"marsh_sych_stalk2",
		"marsh_sych_stalk3",
		"marsh_sych_stalk4"
	}
	for i, v in ipairs(resp) do
		obj = AI:object( v )
		if obj and obj:alive() then
			AI:release( obj, true )
			AI:create ( spawn_ids[v] )
		end
	end
end
function fix_46()
	this.fix_7()
	this.fix_33()

	local rem = {
		"voronin_voen_sms_restrictor",
		"aver_muha_bazar_sms_restrictor",
		"posadka_pantera_restrictor",
		"kluk_shuher_restrictor",
		"idu_na_nz_restrictor",
		"dok_podvox_restrictor",
		"spasibo_frits_restrictor",
		"esc_klenov_posulka_restrictor",
		"klenov_posulku_poluchil_restrictor"
	}
	local obj
	for i, v in ipairs(rem) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
	end

	obj = AI:story_object( story_ids.new_kluk_nz )
	if obj then
		local pos, lv, gv = obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id
		AI:release( obj, true )
		obj = AI:create ( AI:spawn_id( story_ids.new_kluk_nz ) )
		AI:teleport_object( "", pos, lv, gv, obj.id )
	end

	local obj2info = {
		["aver_sekret_nashel_restrictor"] = "peshera_nz_poisk_ok",
		["sms_otez_poreshil_ubiysu_restrictor"] = "as_ubiysa_done",
		["perehov_na_yantar_restrictor"] = "control_monol_svalka",
		["spawn_svalka_plot_stalk_restrictor"] = "svalka_plot_stalk_spawn",
		["marsh_otl_dok_vert_restrictor"] = "dok_heli_vusadil",
		["esc_pantera_dead_restrictor"] = "remark_otez"
	}
	for k, v in pairs(obj2info) do
		obj = AI:object( k )
		if obj then
			AI:release( obj, true )
			if Actor:dont_has_info( v ) then
				AI:create ( spawn_ids[k] )
			end
		end
	end
end
function fix_45() end
function fix_44()
	local obj, name
	for i = 1, 8 do
		name = "bar_dolg_attackers_stop" .. tostring( i )
		obj = AI:object( name )
		if obj and obj:alive() then
			AI:release( obj, true )
			AI:create ( spawn_ids[name] )
		end
	end

	obj = AI:story_object(story_ids.lc_atp_to_garbage)
	if obj then
		netpk:modify(obj, {
			dest_position = vector():set(-37.915710449219,7.1127805709839,247.47064208984),
			dest_direction = vector():set(0,-1.3996797800064,0)
		}, netpk.fState)
	end
end
function fix_43()
	local anoms = {
		"marsh_zone_ameba1_mex_dvor",
		"marsh_zone_ameba1_vushka",
		"marsh_zone_ameba1_tele_baza",
		"marsh_zone_ameba1_vagonu",
		"marsh_ameba1",
		"marsh_ameba2",
		"marsh_ameba3"
	}
	local obj
	for i, v in ipairs(anoms) do
		obj = AI:object(v)
		if obj then
			netpk:modify(obj, {restrictor_type = 2}, netpk.fState)
		end
	end
end
function fix_42()
	if not AI:object("rebyta_smertniki_koster_rest") then
		AI:create(spawn_ids.rebyta_smertniki_koster_rest)
	end
end
function fix_41()
	local sids = {
		"wolffrend_talk_zaton2",
		"wolffrend_talk_zaton",
		"bibliofrend_talk_zaton",
		"bibliofrend_talk_black_zaton"
	}
	for i, v in ipairs(sids) do
		obj = AI:story_object( story_ids[v] )
		if obj then
			netpk:modify(
				obj,
				{ visual_name = "new\\nevidimka_talk" },
				netpk.fState + netpk.fConvert
			)
		end
	end

	local t = {
		"gener_stalky_koster2_rest",
		"gener_stalky_koster1_rest"
	}
	for i, v in ipairs(t) do
		if not AI:object(v) then
			AI:create(spawn_ids[v])
		end
	end
end
function fix_40()
	if has_alife_info("pechatka_taken") and Actor:character_name() == "Стрелок" then
		local new_name = amk_names_lists.get_strings(false)
		naxac.hero_rename_start(new_name)
	end

	local obj = AI:object("warlab_boss")
	if obj and obj:alive() then
		AI:release(obj, true)
		AI:create(spawn_ids.warlab_boss)
	end

	local sids = {
		"Mil_patrol_kamikadze1",
		"Mil_patrol_kamikadze2",
		"Mil_patrol_kamikadze3"
	}
	for i, v in ipairs(sids) do
		obj = AI:story_object( story_ids[v] )
		if obj and obj:alive() then
			AI:release(obj, true)
			AI:create( AI:spawn_id( story_ids[v] ) )
		end
	end
end
function fix_39()
	local obj = AI:object("warlab_radio")
	if obj then
		AI:release(obj, true)
	end
	AI:create(spawn_ids.warlab_radio)
	obj = AI:object("pantera_space_restrictor_timer")
	if obj then
		AI:release(obj, true)
	end
	AI:create(spawn_ids.pantera_space_restrictor_timer)
end
function fix_38()
	local lamps = {
		"aver_lazaret_lamp_2",
		"aver_lazaret_lamp_3",
		"aver_lazaret_lamp_5",
		"aver_sekret_lamp_1"
	}
	local obj
	for i, v in ipairs(lamps) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
	end

	obj = AI:object("land_arhara_koster_1")
	if obj then AI:release(obj, true) end
	AI:create(spawn_ids.land_arhara_koster_1)
	obj = AI:object("land_arhara_koster_1_rest")
	if not obj then AI:create(spawn_ids.land_arhara_koster_1_rest) end
	obj = AI:object("land_arhara_koster_2_rest")
	if not obj then AI:create(spawn_ids.land_arhara_koster_2_rest) end

	obj = AI:story_object(story_ids.lc_agroprom_to_marsh)
	if obj then
		netpk:modify(obj, {
			dest_direction = vector():set(0,3.3004789352417,0)
		}, netpk.fState)
	end

	obj = AI:story_object(story_ids.lc_radar_to_warlab)
	if obj then
		if level.map_has_object_spot(obj.id, "level_changer4") ~= 0 then
			level.map_remove_object_spot(obj.id, "level_changer4")
			level.map_add_object_spot_ser(obj.id, "level_changer2", "to_warlab")
		end
		netpk:modify(obj, {
			dest_level_vertex_id = 4507,
			dest_position = vector():set(-0.24238891899586,11.090615272522,22.223293304443),
			dest_direction = vector():set(0,4.5623860359192,0)
		}, netpk.fState)
	end
end
function fix_37()
	local obj = AI:story_object(story_ids.lc_darkvalley_to_aver)
	if obj then
		netpk:modify(obj, {
			dest_game_vertex_id = 2908,
			dest_level_vertex_id = 1673008,
			dest_position = vector():set(442.62689208984,-5.3303380012512,-319.21130371094),
			dest_direction = vector():set(0,1.5768010616302,0),
			dest_graph_point = "start_actor_99"
		}, netpk.fState)
	end
end
function fix_36()
	local obj

	if not has_alife_info("val_prisoner_scene_end") then
		obj = AI:story_object(story_ids.val_prisoner)
		if obj then
			AI:release(obj, true)
			AI:create( AI:spawn_id(story_ids.val_prisoner) )
		end
		local obj = AI:object("val_prisoner_cage_zone")
		if obj then
			AI:release(obj, true)
			AI:create(spawn_ids.val_prisoner_cage_zone)
		end
		if (not has_alife_info("val_prisoner_door_unlocked")) and has_alife_info("val_prisoner_free") then
			Actor:disable_info_portion("val_prisoner_free")
		end
	end

	local t = {
		lc_aver_to_svalka		= "info_way_arhara_svalka_earth",
		lc_aver_to_darkvalley	= "info_way_arhara_td_earth",
		lc_aver_to_military		= "info_way_arhara_military_earth"
	}
	for k, v in pairs(t) do
		if not has_alife_info(v) then
			obj = AI:story_object( story_ids[k] )
			if obj then
				AI:release(obj, true)
			end
		end
	end
	if has_alife_info("info_way_arhara_svalka_earth") then
		level_changers.create_allspawn_lc("lc_aver_to_svalka","to_garbage","info_way_arhara_svalka_earth",3, true)
	end
end
function fix_35()
	local obj = AI:story_object(story_ids.viking_npc)
	if obj then
		AI:release(obj, true)
		akill.viking_npc_spawn()
	end
	obj = AI:object("dead_mono_labirint")
	if obj then
		AI:release(obj, true)
		AI:create(spawn_ids.dead_mono_labirint)
	end
	obj = AI:story_object(story_ids.lc_military_to_aver)
	if obj then
		AI:release(obj, true)
		level_changers.create_allspawn_lc("lc_military_to_aver","to_aver","info_way_arhara_military_earth",3, true)
	end
end
function fix_34()
	local obj = AI:object("esc_wpn_pm")
	if obj then
		AI:release(obj, true)
	end
	AI:create(spawn_ids.esc_wpn_pm)

	local lc = {
		"lc_escape_to_bar",
		"lc_pripyat_to_bar"
	}
	for i, v in ipairs(lc) do
		obj = AI:story_object( story_ids[v] )
		if obj then
			AI:release(obj, true)
			level_changers.create_level_changer(v)
		end
	end
end
function fix_33()
	if has_alife_info("vitamin_reyd_zadan_done") then
		arhara_dialog.delete_svoboda_radars()
	end

	local obj

	local respawn_sid = {
		story_ids.ziclop,
		story_ids.jora_anomaly,
		story_ids.lazaret_golograma,
		story_ids.tehnik_golograma
	}
	for i, sid in ipairs( respawn_sid ) do
		obj = AI:story_object( sid )
		if obj then
			AI:release( obj, true )
			AI:create( AI:spawn_id( sid ) )
		end
	end

	local respawn_names = {
		"vert_zimovie_stalker_1",
		"vert_zimovie_stalker_2"
	}
	for i, v in ipairs( respawn_names ) do
		obj = AI:object( v )
		if obj then
			AI:release( obj, true )
			AI:create( spawn_ids[v] )
		end
	end

	obj = AI:story_object( story_ids.fotograf_npc )
	if obj then
		AI:release( obj, true )
		akill.fotograf_npc_spawn()
	end
end
function fix_32()
	if has_alife_info("sar2_monolith_miracle") then
		this.lc_mono_aes2_silent_off()
	end

	local obj
	local doors = {
		"mon_door_from_monolith_control",
		"mon_door_from_monolith_control_0000"
	}
	for i, v in ipairs( doors ) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
		AI:create( spawn_ids[v] )
	end
	obj = AI:object("control_dver_open_restrictor")
	if obj then
		AI:release(obj, true)
	end
end
function fix_31()
	local obj = AI:story_object( story_ids.kot )
	if obj == nil and has_alife_info("bkot_spawn") then
		AI:create( AI:spawn_id( story_ids.kot ) )
	end

	fly_island.fix()
end
function fix_30()
	local obj = AI:story_object( story_ids.lc_yantar_to_aes )
	if obj then
		AI:release( obj, true )
		level_changers.create_level_changer( "lc_yantar_to_aes" )
	end
end
function fix_29()
	local obj
	for i = 1, 3 do
		obj = AI:object("new_prizrak_treasure"..i)
		if obj then
			AI:release(obj, true)
		end
	end
	if has_alife_info("tri_tainik_start") and not has_alife_info("tri_tainik_done") then
		new_dialog.tri_tainik_spawn()
	end
end
function fix_28()
	local obj = AI:object("rostok_space_restrictor_0001")
	if obj then
		AI:release(obj, true)
		AI:create(spawn_ids.rostok_space_restrictor_0001)
	end

	obj = AI:story_object(story_ids.lc_jupiter_to_east_pripyat)
	if obj then
		AI:release(obj, true)
		level_changers.create_level_changer("lc_jupiter_to_east_pripyat")
	end
end
function fix_27()
	local npc = {
		"esc_banderos",
		"esc_dimorin",
		"esc_n6260",
		"esc_vergas",
		"esc_tirex",
		"esc_wawka"
	}
	local obj
	for i, v in ipairs(npc) do
		obj = AI:object(v)
		if obj and obj:alive() then
			AI:release(obj, true)
			AI:create( spawn_ids[v] )
		end
	end
end
function fix_26()
	local doors = {"door_trader_0000","door_trader"}
	for i, v in ipairs(doors) do
		local obj = AI:object( v )
		if obj then
			AI:release( obj, true )
			AI:create( spawn_ids[v] )
		end
	end

	if has_alife_info("raritet_saharov") then
		local obj = AI:story_object( story_ids.grom_npc )
		if not obj then return end

		AI:release( obj, true )

		obj = AI:create( "grom_npc",vector():set(27.641338348389,-10.942045211792,-280.30341186523), 54978, 1480 )
		if not has_alife_info("taynik_bandit_x18_start") then
			local tbl = {
				health = 0.1,
				upd = { health = 0.1 }
			}
			netpk:modify( obj, tbl )
		end
		set_story_id( obj, story_ids.grom_npc )
	end
end
function fix_25()
	local obj = AI:story_object( story_ids.bkot )
	if obj then
		AI:release( obj, true )
	end
	obj = AI:story_object( story_ids.kot_hos )
	if obj then
		AI:release( obj, true )
	end
	obj = AI:story_object( story_ids.kot )
	if obj then
		AI:release( obj, true )
	end
	obj = AI:create( AI:spawn_id( story_ids.kot ) )

	if has_alife_info("kostya_pripyat_taynik_done") then
		Actor:give_info_portion("kostya_pripyat_kamp")
		news_manager.send_tip(
			"%c[gray2]КОСТЯ:\\n%c[red_sms]$actor, привет! Если буду нужен - ищи меня в Центральной Припяти. Надоело мне на Складах, скучно...",
			7, "kostya", 10000
		)
	end
end
function fix_24()
	local obj = AI:object("dcity_dok_bolot")
	if obj then
		set_story_id(obj, story_ids.Doktor_dcity)
	end
	obj = AI:object("dcity2_dok2_bolot2_vid")
	if obj then
		set_story_id(obj, story_ids.Doktor_dcity2)
	end
end
function fix_23()
	local restr = {
		"aes2_space_restrictor_particle_0000",
		"aes2_space_restrictor_particle_0001",
		"aes2_space_restrictor_particle_0003",
		"aes2_space_restrictor_particle_0004",
		"aes2_space_restrictor_particle_0005",
		"aes2_space_restrictor_particle_0002",
		"aes2_space_restrictor_particle_final",
		"aes2_space_restrictor_particle_final_0000"
	}
	local obj
	for i, v in ipairs(restr) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
			AI:create( spawn_ids[v] )
		end
	end
end
function fix_22()
	local obj = AI:story_object(story_ids.pri_dimak)
	if obj then
		AI:release(obj, true)
		obj = AI:create("pri_dimak",vector():set(135.55590820313,4.9057364463806,-202.5612487793),363721,3765)
		set_story_id(obj, story_ids.pri_dimak)
	end
	local obj = AI:story_object(story_ids.aaz_upi)
	if obj then
		AI:release(obj, true)
		local obj = AI:create("aaz_upi_torg",vector():set(-12.37338924408,23.103647232056,245.67727661133),695048,3725)
		set_story_id(obj, story_ids.aaz_upi)
	end
end
function fix_21()
	local obj, obj_sect
	for i = 1, 65534 do
		obj = AI:object(i)
		if obj then
			obj_sect = obj:section_name()
			if obj_sect == "marsh_ariadna2" then
				AI:release(obj, true)
				AI:create("marsh_ariadna2",vector():set(-143.60943603516,0.63742542266846,-293.34475708008),73908,3376)
			elseif obj_sect == "marsh_ariadna" then
				AI:release(obj, true)
				AI:create("marsh_ariadna",vector():set(111.07360839844,0.80768406391144,335.32708740234),201895,3461)
			elseif obj_sect == "zone_teleport_new" then
				AI:release(obj, true)
			elseif obj_sect == "zone_teleport_new_out" then
				AI:release(obj, true)
			end
		end
	end
end
function fix_20()
	-- переспавн зон, которые постоянно выдают никому не нужный поршень pri_monolith_snipers_free
	local obj = AI:story_object(story_ids.pri_hotel_zone)
	if obj then
		AI:release(obj, true)
		AI:create( AI:spawn_id(story_ids.pri_hotel_zone) )
	end
	obj = AI:story_object(story_ids.pri_monolith_base_zone)
	if obj then
		AI:release(obj, true)
		AI:create( AI:spawn_id(story_ids.pri_monolith_base_zone) )
	end
end
function fix_19()
	local obj = AI:story_object(story_ids.dragunof_npc)
	if obj then
		AI:release(obj, true)
		obj = AI:create("dragunof_npc",vector():set(191.67535400391,2.8055994510651,212.01971435547),260495,2219)
		set_story_id(obj, story_ids.dragunof_npc)
	end
end
function fix_18()
	-- Правка некорретных story_id у переходов
	-- функция alife():assign_story_id(), окзывается, принимает только uint16, т.е. целые числа до 65535
	-- а story_id - это uint32.
	local t = {
		"lc_warlab_to_control_monolith",
		"lc_sarkofag_to_x10",
		"lc_x10_to_sarkofag",
		"lc_sarkofag_to_aes2",
		"lc_aes2_to_sarkofag",
		"lc_military_to_limansk",
		"lc_generators_to_marsh_vert",
		"lc_marsh_to_generators_vert",
		"lc_sarkofag_to_lost_village_foto",
		"lc_yantar_to_brainlab_saharov",
		"lc_brainlab_to_yantar_mozg",
		"lc_control_monolith_to_garbage",
		"lc_dead_city_to_atp_timing",
		"lc_aver_to_east_pripyat",
		"lc_yantar_to_east_pripyat",
		"lc_east_pripyat_to_aver",
		"lc_east_pripyat_to_labx8",
		"lc_labx8_to_jup_underground",
		"lc_jup_underground_to_east_pripyat",
		"lc_east_pripyat_to_jupiter",
		"lc_jupiter_to_jup_underground",
		"lc_east_pripyat_to_zaton",
		"lc_garbage_to_east_pripyat",
		"lc_zaton_to_east_pripyat",
		"lc_labx8_to_east_pripyat",
		"lc_east_pripyat_to_pripyat",
		"lc_pripyat_to_east_pripyat",
		"lc_zaton_to_jupiter",
		"lc_jupiter_to_zaton",
		"lc_jupiter_to_east_pripyat",
		"lc_labrint_to_sarkofag",
		"lc_yantar_to_aes",
		"lc_escape_to_bar",
		"lc_bar_to_escape",
		"lc_bar_to_pripyat",
		"lc_pripyat_to_bar",
		"lc_east_pripyat_to_jup_underground"
	}
	local lc_ini = ini_file("misc\\level_changers.ltx")
	local obj
	for i = 1, 65535 do
		obj = AI:object(i)
		if obj and obj:clsid() == clsid.level_changer
			and obj:name() == obj:section_name()..obj.id
		then
			log("~ attempt to correct story_id for object %s", obj:name())
			local data = netpk:get(obj)
			local repair = false
			for j, s in ipairs(t) do
				if lc_ini:r_u32(s, "game_vertex") == obj.m_game_vertex_id
					and lc_ini:r_u32(s, "dest_game_vertex") == data.dest_game_vertex_id
				then
					if obj.m_story_id ~= story_ids[s] then
						data.story_id = story_ids[s] or abort("story id not exist: %s", s)
						netpk:set(obj, data)
						log("- successfully: set story_id %s [%s]", s, story_ids[s])
					else
						log("# not needed: story_id is correspond")
					end
					table.remove(t, j)
					repair = true
					break
				end
			end
			if not repair then
				log("! faied: story_id %s", obj.m_story_id)
				AI:release(obj, true)
			end
		end
	end
end
function fix_17()
	-- Установим логику дверям в подземке Юпитера
	local obj
	local doors = {
		"jund_pas_b400_physic_door",
		"jund_pas_b400_door_track",
		"jund_pas_b400_door_downstairs",
		"jund_pas_b400_physic_door_0000",
		"jund_pas_b400_door_hall",
		"jund_pas_b400_door_control_down",
		"jund_pas_b400_door_control_up",
		"jund_pas_b400_door_way"
	}
	for i, v in ipairs(doors) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
		AI:create( spawn_ids[v] )
	end
	-- Наспавним аномалий - для атмосферности
	for i = spawn_ids.jup_underground_anoms_start, spawn_ids.jup_underground_anoms_end, 1 do
		AI:create(i)
	end
end
function fix_16()
	-- Переделаем немного двери в Х-10 и на Радаре
	local obj
	local doors = {
		"rad_code_door_keylock",
		"rad_code_door",
		"codedoor_door_0001",
		"codedoor_door_0002",
		"codedoor_door_0003",
		"codedoor_door_0004",
		"codedoor_door_0006",
		"codedoor_door_0007",
		"codedoor_key_0004"
	}
	for i, v in ipairs(doors) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
		AI:create( spawn_ids[v] )
	end
	-- Объекты, имеющие одинаковые имена с другими объектами в спавне
	local double_names = {
		["codedoor_key_0000"] = spawn_ids.bun_codedoor_key_0000,
		["codedoor_key_0001"] = spawn_ids.bun_codedoor_key_0001,
		["codedoor_key_0002"] = spawn_ids.bun_codedoor_key_0002,
		["codedoor_key_0003"] = spawn_ids.bun_codedoor_key_0003
	}
	for i = 1, 65535 do
		obj = AI:object(i)
		if obj and double_names[ obj:name() ] then
			if object_level_name(obj) == "l10u_bunker" then
				local name = obj:name()
				AI:release(obj, true)
				AI:create( double_names[ name ] )
				double_names[ name ] = nil
				if table.size( double_names ) == 0 then
					break
				end
			end
		end
	end
	-- Неписи с кодом от двери
	local npcs = {
		"rad_antenna_camper1",
		"rad_antenna_camper2",
		"rad_antenna_camper3"
	}
	local respawn = false
	for i, v in ipairs(npcs) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
			AI:create( spawn_ids[v] )
			respawn = true
		end
	end
	-- никого не переспавнили, значит уже некого - выдадим статью просто так
	if (respawn == false) and not has_alife_info("bun_door_3_code") then
		Actor:give_info_portion("bun_door_3_code")
	end
end
function fix_15()
	local rem = {
		"amk_zone_ogon_average_11",
		"amk_zone_ogon_average_48",
		"amk_zone_ogon_average_83",
		"amk_zone_ogon_average_162",
		"amk_zone_ogon_average_261",
		"amk_zone_ogon_average_201",
		"amk_zone_ogon_average_299",
		"amk_zone_ogon_average_353",
		"amk_zone_ogon_average_402",
		"stancia2_ogon1_truba_niz",
		"stancia2_ogon2_truba_verh"
	}
	local obj
	for i, name in ipairs(rem) do
		obj = AI:object(name)
		if obj then
			amk_anoms.release_anomaly(obj)
		end
	end
	obj = AI:object("darkscape_fireshit_ogon_strong")
	if not obj then
		AI:create(spawn_ids.darkscape_fireshit_ogon_strong)
	end

	local doors = {
		"pri_b303_one_side_door",
		"pri_b303_door_01",	
		"pri_b304_physic_door_0005",	
		"pri_b304_physic_door_0006",	
		"pri_b304_physic_door_0007",	
		"pri_b304_physic_door_0008",	
		"pri_b304_physic_door_0009",	
		"pri_b304_physic_door_0010",	
		"pri_b304_physic_door_0011",	
		"pri_b304_physic_door_0012",	
		"pri_b304_physic_door_0013",	
		"pri_b304_physic_door_0014",	
		"pri_a16_ph_door",			
		"pri_a16_ph_door_0000",		
		"pri_a16_ph_door_0001",		
		"pri_a16_ph_door_0002",		
		"pri_a16_ph_door_0003",		
		"pri_a16_ph_door_0006",		
		"pri_a28_physic_door_end_surge_room",
		"pri_a28_physic_door_end_surge_room_0000"
	}
	for i, v in ipairs(doors) do
		obj = AI:object(v)
		if obj then
			AI:release(obj, true)
		end
		AI:create(spawn_ids[v])
	end
end
function fix_14()
	local obj = AI:story_object(story_ids.Mil_Kap)
	if obj then
		local t = {
			custom_data = "[smart_terrains]\n"..
						  "mil_fblockpost = true"
		}
		netpk:modify(obj, t, netpk.fState)
	end
end
function fix_13()
	local obj_sect
	Actor:iterate_inventory( function(dummy, item)
		obj_sect = item:section()
		if sys_ini:r_bool_ex(obj_sect, "energy_consuming", false) == true
			and sys_ini:line_exist(obj_sect, "condition")
		then
			local v = sys_ini:r_float(obj_sect, "condition")
			item:set_condition(v)
			netpk:modify( AI:object( item:id() ), {condition = v} )
		end
	end,
	Actor)
end
function fix_12()
	if level.name() == "l04_darkvalley" then
		start_real_timer("run", 10, "naxac.fix_12()")
		return
	end

	local obj = AI:story_object(story_ids.val_bandit_trader)
	if obj then
		AI:release(obj, true)
		AI:create( AI:spawn_id(story_ids.val_bandit_trader) )
	end
end
function fix_11()
	local obj = AI:object("darkscape_military_respawn")
	if obj == nil then
		AI:create(spawn_ids.darkscape_military_respawn)
	end
end
function fix_10()
	local obj
	for i = 1, 65535 do
		obj = AI:object(i)
		if obj and obj:section_name() == "wpn_awm" then
			local pid = obj.parent_id
			if pid and pid ~= 65535 then
				local par = AI:object(pid)
				if par and par:section_name() == "inventory_box"
					and (not is_story_object(par))
					and object_level_name(par) == "l05_bar"
				then
					AI:release(par, true)
				--	log("~ release wmgr box with some 'wpn_awm'")
					break
				end
			end
		end
	end
end
function fix_9()
	local obj = AI:story_object(story_ids.lc_radar_to_military)
	if obj then
		netpk:modify(obj, {
			dest_direction = vector():set(0, 1.7905013561249, 0)
		}, netpk.fState)
	end
	obj = AI:story_object(story_ids.lc_military_to_darkvalley)
	if obj then
		netpk:modify(obj, {
			dest_game_vertex_id = 998,
			dest_level_vertex_id = 140394,
			dest_position = vector():set(-42.56294631958,-1.8161754608154,-21.93950843811),
			dest_direction = vector():set(0, -0.94331800937653, 0)
		}, netpk.fState)
	end
	obj = AI:story_object(story_ids.lc_military_to_rostok)
	if obj then
		netpk:modify(obj, {
			dest_game_vertex_id = 1360,
			dest_level_vertex_id = 715,
			dest_position = vector():set(-285.29742431641,-0.00052946805953979,103.03450775146),
			dest_direction = vector():set(0, 4.0257377624512, 0)
		}, netpk.fState)
	end
end
function fix_8()
	start_small_timer(3000, function()
		amk_anoms.pre_blow_off()
		amk_anoms.after_blow_on()
	end)
end
function fix_7()
	-- Зададим story_id некоторым квестовым нпс
	-- Циклоп
	local obj = AI:object("land_lazaret_stalker1")
	if obj and AI:story_object(story_ids.ziclop) == nil then
		set_story_id(obj, story_ids.ziclop)
	end
	-- прозрачный Витя Голограмма
	obj = AI:object("land_lazaret_stalker2")
	if obj and AI:story_object(story_ids.lazaret_golograma) == nil then
		set_story_id(obj, story_ids.lazaret_golograma)
	end
	-- Жора Аномалия
	obj =  AI:object("land_lazaret_stalker3")
	if obj and AI:story_object(story_ids.jora_anomaly) == nil then
		set_story_id(obj, story_ids.jora_anomaly)
	end
	-- бородатый Пилигрим
	obj =  AI:object("piligrim")
	if obj and AI:story_object(story_ids.piligrim) == nil then
		set_story_id(obj, story_ids.piligrim)
	end
	-- Хог (сталкер, у которого плоть на Свалке сожрала рюкзак)
	obj =  AI:object("svalka_plot_stalk")
	if obj and AI:story_object(story_ids.svalka_plot_stalk) == nil then
		set_story_id(obj, story_ids.svalka_plot_stalk)
	end
	-- Клёнов
	obj =  AI:object("warlab_stalker_oso")
	if obj and AI:story_object(story_ids.klenov) == nil then
		set_story_id(obj, story_ids.klenov)
	end
	-- Знаток Болот
	obj =  AI:object("boloto_provodnik")
	if obj and AI:story_object(story_ids.boloto_provodnik) == nil then
		set_story_id(obj, story_ids.boloto_provodnik)
	end
	-- Санёк Разбойник (кидала на Кордоне)
	obj =  AI:object("esc_kidalo")
	if obj and AI:story_object(story_ids.esc_kidalo) == nil then
		set_story_id(obj, story_ids.esc_kidalo)
	end
end
function fix_6()
	-- переспавним награду от Лукаша за мозги контролёра в рюкзак
	if not has_alife_info("svoboda_lukash_done") then return end
	local sect, obj
	local need_spawn = false
	for i = 1, 65535 do
		obj = AI:object(i)
		if obj then
			sect = obj:section_name()
			if (sect == "arhara_tele" or sect == "meceniy_outfit_new" or sect == "wpn_aa12")
				and obj.parent_id == 65535 and object_level_name(obj) == "l12u_sarcofag"
			then
				AI:release(obj, true)
				need_spawn = true
			end
		end
	end
	if need_spawn then
		arhara_dialog.arhara_teleport()
	end
end
function fix_5()
	-- Уберём ненужный рестриктор и исправим радио Василию на болотах
	local obj = AI:object("marsh_moroz_restrictor")
	if obj then
		AI:release(obj, true)
		if AI:object("marsh_vasilij_radio") == nil then
			netpk:create_restrictor(
				vector():set(-136.51177978516,4.1848711967468,-305.32223510742),
				77674, 3374, 
				"[logic]\ncfg = scripts\\marsh\\vasilij_radio.ltx",
				1.0
			)
		end
	end
end
function fix_4()
	-- поправим переход Кордон - Болота
	local obj = AI:object("escape_to_marsh")
	if obj then
		local data = {
			dest_direction = vector():set(0,1.1001601219177,0),
			shapes = {
				{ shtype = 0, center = vector():set(0,0,0), radius = 1.2 }
			}
		}
		netpk:modify(obj, data, netpk.fState)
	end
	-- поправим переход Болота - Кордон
	obj = AI:object("mar_level_changer_to_escape_1")
	if obj then
		local data = {
			dest_game_vertex_id = 41,
			dest_level_vertex_id = 8615,
			dest_position = vector():set(-253.77577209473,-14.679865837097,-194.29989624023)
		}
		netpk:modify(obj, data, netpk.fState)
	end
end
function fix_3()
	-- исправим рестриктор в Х-16 - стобы при отключенной установке не пищало в голове
	naxac.rewrite_restr_logic( "yantar_psi_radiotion_sound", "scripts\\yan\\yantar_psi_radiotion_sound.ltx" )
	-- уберём сделавшую своё дело мину на Янтаре
	local obj = AI:object("yantar_arhara_mine1")
	if obj and has_alife_info("sms_barmen_otvet") then
		AI:release(obj, true)
	end
end
function fix_2()
	--Если переходов в Тёмную Лощину нет, значит локацию только добавили - нужно заспавнить её содержимое
	if AI:story_object(story_ids.lc_darkscape_to_escape) == nil
		and AI:story_object(story_ids.lc_darkscape_to_darkvalley) == nil
	then
		-- спавним по номеру секции в спавне: придётся обновлять каждый раз при редактировании спавна.
		for i = spawn_ids.darkscape_spawn_start, spawn_ids.darkscape_spawn_end, 1 do
			AI:create(i)
		end
		-- отметим переходы
		local obj = AI:story_object(story_ids.lc_darkscape_to_escape)
		if obj then
			level.map_add_object_spot_ser(obj.id, "level_changer4", "to_escape")
		end
		obj = AI:story_object(story_ids.lc_darkscape_to_darkvalley)
		if obj then
			level.map_add_object_spot_ser(obj.id, "level_changer1", "to_darkvalley")
		end
		-- переспавним переходы ТД-Кордон и Кордон-ТД: теперь это ТД-ТЛ и Кордон-ТЛ
		obj = AI:story_object(story_ids.lc_escape_to_darkscape)
		if obj then
			AI:release(obj, true)
			obj = AI:create( AI:spawn_id(story_ids.lc_escape_to_darkscape) )
			level.map_add_object_spot_ser(obj.id, "level_changer2", "to_darkscape")
		end
		obj = AI:story_object(story_ids.lc_darkvalley_to_darkscape)
		if obj then
			AI:release(obj, true)
			obj = AI:create( AI:spawn_id(story_ids.lc_darkvalley_to_darkscape) )
			level.map_add_object_spot_ser(obj.id, "level_changer3", "to_darkscape")
		end
		-- телепорт к дому
		AI:create("darkscape_teleport_01",vector():set(-248.57592773438,12.540954589844,-329.14068603516),139494,3997)
	end
end
function fix_1()
	local obj
	if not has_alife_info( "naxac_test_repair5" ) then
		Actor:give_info_portion( "naxac_test_repair5" )
		-- удаляем ставший не нужным балласт от контеёнеров с артефактами
		Actor:iterate_inventory(function(dummy, item)
			if item:section() == "wpn_ballast" then
				obj = AI:object(item:id())
				if obj then AI:release(obj, true) end
			end
		end,
		Actor)
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair4" ) then
		Actor:give_info_portion( "naxac_test_repair4" )

		obj = AI:object("radar_kukla")
		if obj then
			AI:create("kukla_1",vector():set(-10.734,0.198,-54.009),7084,1960)
			AI:release(obj, true)
		end

		obj = snp.object_by_section_offline("good_psy_helmet1")
		if obj then
			if obj.parent_id == 65535 then
				AI:create("good_psy_helmet", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id)
			else
				AI:create("good_psy_helmet", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.parent_id)
			end
			AI:release(obj, true)
		end
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair3" ) then
		Actor:give_info_portion( "naxac_test_repair3" )
		-- правим замену артов в Госпитале
		obj = AI:object( "podlovim_chiterov_restrictor" )
		if obj then AI:release( obj, true ) end
		obj = AI:object( "podlovim_chiterov1_restrictor" )
		if obj then AI:release( obj, true ) end
		start_small_timer( 2000, naxac.rewrite_restr_logic, "hos_zamena_art_restrictor", "scripts\\hospital\\hos_zamena_art_restrictor.ltx" )
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair2" ) then
		Actor:give_info_portion( "naxac_test_repair2" )
		-- меняем имя ГГ, если встреча с Доктором уже была
		if has_alife_info( "cit_fail_first_task" ) then
			naxac.hero_rename_agrund()
		end
	end
-------------------------------------------------------------------------------------------------------------------
	if not has_alife_info( "naxac_test_repair1" ) then
		Actor:give_info_portion( "naxac_test_repair1" )

		if AI:object( "subway_scaner_doc_0001" ) == nil then
			AI:create( "subway_scaner_doc", vector():set(-28.548599243164,-10.811845779419,-25.668081283569),517,1152 )
		end
	end
end

function repair()
	local fix = amk.load_variable( "nfx", 0 )
	if fix == current_fix then return end

	amk.save_variable( "nfx", current_fix )

	if fix == 0 then return end

	local fn = ""
	for i = fix+1, current_fix, 1 do
		fn = "fix_"..tostring( i )
		if this[ fn ] then
			log("~ [naxac.repair] work fix#%s", tostring( i ))
			this[ fn ]()
		end
	end
end

---------------------------------------------------------------------------------------
function treasure_ss_1()
	local items = {
		['subway_scaner_doc2'] = 1
	}
	naxac.create_treasure( vector():set( -394.92098999023,0.49698415398598,52.124488830566 ), 146089, 3664, items )
end
function treasure_ss_2()
	local obj = AI:create_no_ai( "inventory_box", vector():set(447.53710449219,31.134944915771,-455.5447265625),1427937,3745)
	local code = ""
	for i = 1,10 do
		code = code..tostring( math.random( 0, 9 ) )
	end
	local t = {}
	t.visual_name = "physics\\equipment_cache\\equipment_seif_01_case"
	t.custom_data = "[logic]\n"..
					"cfg = scripts\\code_inventory_box.ltx\n"..
					"[password]\n"..
					"code = "..code
	netpk:modify( obj, t, netpk.fState )
	zamok.restore(obj, 1, code)

	AI:create( "zamok", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
	AI:create( "device_scaner", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
end
function ss_teleports()
	AI:create( "ss_tele_1", vector():set(-427.43768310547,35.865772247314,-323.46566772461),137286,3664)
	AI:create( "ss_tele_2", vector():set(-418.9528503418,0.43205073475838,17.969646453857),146089,3664)
	AI:create( "ss_tele_3", vector():set(-394.98583984375,0.49851682782173,56.047332763672),146089,3664)
end
function del_ss_teleports()
	bind_mteleport.del_teleport( "ss_tele_1" )
	bind_mteleport.del_teleport( "ss_tele_2" )
	bind_mteleport.del_teleport( "ss_tele_3" )
end

-- Чтобы после первого посещения ЧАЭС переход"Припять - ЧАЭС" задавал вопрос о смене уровня
function lc_pri_aes_silent_off()
	-- Припять - ЧАЭС
	local obj = AI:story_object(story_ids.lc_pripyat_to_aes)
	if obj then
		netpk:modify(obj, { silent_mode = 0 }, netpk.fState)
	end
end
function lc_mono_aes2_silent_off()
	local obj = AI:object( "exit_to_stancia2_01" )
	if obj then
		netpk:modify(obj, { silent_mode = 0 }, netpk.fState)
	end
end

-- Спавним тайник Сыча в Х-10
function treasure_sysh_spawn()
	local items = {
		['ammo_gauss'] = 1,
		['sysh_document'] = 1,
		['antirad'] = 4,
		['medkit_scientic'] = 2,
		['af_kol_4'] = 1
	}
	local hint = "%c[255,238,155,23]Тайник Сыча\\n%c[default]На флешке Сыча была информация о схроне в лаборатории X-10, надо бы его проверить."
	naxac.create_treasure( vector():set(-1.9939445257187,-34.253723144531,27.17742729187),
		4256, 2777, items, "treasure", hint)
end

-- Делаем Боцмана непереводимым в оффлайн...
function set_udav_online()
	local obj = AI:story_object( story_ids.generators_udav )
	if obj then
		obj.job_online = true
		obj.job_online_condlist = nil
	end
end
-- ...а теперь обратно
function set_udav_default()
	local obj = AI:story_object( story_ids.generators_udav )
	if obj then
		obj.job_online = nil
		obj.job_online_condlist = nil
	end
end
-- Запускаем фриплей
function after_credits()
	-- не знаю, зачем это, но пусть будет
	if not db.gameover_credits_started then return end
	db.gameover_credits_started = nil

	if not has_alife_info("snp_rings_done") then
		get_console():execute("main_menu on")
		get_console():execute("disconnect")
		return
	end

	if not has_alife_info("naxac_freeplay_start") then
		Actor:give_info_portion("naxac_freeplay_start")
		
		local not_del = {
			["bolt"] = true,
			["wpn_binoc"] = true,
			["device_pda"] = true,
			['netpacket_pda'] = true,
			["device_torch"] = true
		}
		local obj
		Actor:iterate_inventory(function(actor, item)
			obj = AI:object(item:id())
			if obj and not_del[item:section()] == nil then
				AI:release(obj, true)
			end
		end,
		Actor)
		
		Actor:give_money(1000-Actor:money())
		
		level.disable_input()
		start_small_timer(2000, this.tele_to_escape)
	end
end
function tele_to_escape()
	u3_utils.savegame("Финал")
	start_small_timer(3000, function () teleport_manager.jumpTo("exit_ao2") end)
end
------------------------------------------------------------------------------------------
-- Перезаписываем логику рестриктора, если он в онлайне - переинициализируем
function rewrite_restr_logic( obj_name, logic )
	local obj = AI:object( obj_name )
	if obj then
		local cd = logic and "[logic]\ncfg = "..logic or ""
		netpk:modify( obj, {custom_data =	cd}, netpk.fState )
		local rest = level.object_by_id( obj.id )
		if rest then
			local st = db.storage[rest:id()]
			st = {}
			xr_logic.initialize_obj( rest, st, false, Actor, modules.stype_restrictor, (logic or "scripts\\dummy.ltx") )
		end
	end
end

-- Закрываем тайник на замок
function close_lock_box(box_id, code)
	local se_box = AI:object(box_id)
	if se_box == nil then
		log("! [naxac.close_lock_box]: box [%s] not found!", box_id)
		return
	end

	-- если пароль не задан, то сгенерируем случайный из семи цифр
	if code == nil then
		code = ""
		for i = 1,7 do
			code = code..tostring( math.random(0,9) )
		end
	end

	local data = netpk:get(se_box, netpk.fState)
	local cd = netpk:parse_custom_data(data.custom_data)
	cd.password = { code = code }
	cd.logic = { cfg = "scripts\\code_inventory_box.ltx" }
	data.custom_data = netpk:gen_custom_data(cd)
	netpk:set(se_box, data)
	zamok.restore(se_box, 1, code)

	local box = level.object_by_id(box_id)
	if box then
		local zz = AI:create( "zamok", Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id(), Actor:id() )
		start_small_timer(500, function()
			local obj = level.object_by_id(zz.id)
			if obj then
				Actor:transfer_item(obj, box)
			end
		end)
		local st = db.storage[box_id]
		st = {}
		xr_logic.initialize_obj(box, st, false, Actor, modules.stype_item, "scripts\\code_inventory_box.ltx")
	else
		AI:create( "zamok", se_box.position, se_box.m_level_vertex_id, se_box.m_game_vertex_id, box_id )
	end

	return code
end

-- Спавним тайник по заданным координатам
function create_treasure( pos, lv, gv, items, mapspot, hint )
	local ruck = AI:create_no_ai( "m_inventory_box", pos, lv, gv )

	local id = ruck.id
	for sect, n in pairs(items) do
		for i = 1, n do
			AI:create(sect, pos, lv, gv, id)
		end
	end

	local t = netpk:get( ruck, netpk.fState )
	t.custom_data  = "[logic]\n".."cfg = scripts\\new_inventory_box.ltx"
	t.object_flags = bit_and( t.object_flags, bit_not(197) )
	netpk:set( ruck, t )

	if mapspot then
		level.map_add_object_spot_ser( id, mapspot, (hint or "Тайник") )
	end
	return ruck
end
-----------------------------------------------------------------------------------------------
local pi = math.pi
local pi2 = pi*2
local chk_sec = pi2/16
function angle_clamp(angle)
	if angle < 0 then
		return angle + pi2
	elseif angle > pi2 then
		return angle - pi2
	else
		return angle
	end
end
-- проверка для логики: с той ли стороны мы приближаемся к объекту,
-- проверяется сектор 45 градусов по заданному углу поворота
-- 0 - с востока, 1/2*pi - с севера, pi - с запада, 3/2*pi - с юга
-- on_info = {=naxac.check_direction(2.89)}
function check_direction(actor, npc, p)
	local check_angle = tonumber( p[1] )
	local angle = actor:position():sub(npc:position()):getH() + pi/2
	local chk_max = angle_clamp(check_angle + chk_sec)
	local chk_min = angle_clamp(check_angle - chk_sec)
--	log("[naxac.check_direction]: check_angle = %s, angle = %s, min = %s, max = %s", check_angle, angle, chk_min, chk_max)
	if chk_max < chk_min then
		return not (chk_max < angle and chk_min > angle)
	end
	return chk_max > angle and chk_min < angle
end
-----------------------------------------------------------------------------------------------
-- Изменение имени ГГ
local new_name = nil
function hero_rename_start(name)
	new_name = name
	-- запишем новое имя в серверный объект актёра
	netpk:modify( AI:actor(), {
		character_name = name
	}, netpk.fState )
end
function hero_rename( pk )
	if not new_name then return end
	-- запишем новое имя в клиентский объект актёра, смещение [39]
	local t = {}
	pk:r_seek(0)
	table.insert( t, pk:r_u16() )		-- 2 байта
	for i = 1,37 do
		table.insert( t, pk:r_u8() )	-- + ещё 37 раз по 1
	end
	local n = pk:r_stringZ()			-- читаем имя
--	log( "old name of hero: [%s]", n )
	table.insert( t, new_name )			-- сохраняем вместо старого новое
	while not pk:r_eof() do				-- вычитываем остаток пакета побайтово
		table.insert( t, pk:r_u8() )
	end

	pk:w_begin(t[1])					-- теперь записываем всё обратно
	for i = 2, #t, 1 do
		n = t[i]
		if type( n ) == "string" then
			pk:w_stringZ( n )
		else
			pk:w_u8( n )
		end
	end

	log( "- New name of hero successfully saved" )
end

function hero_rename_agrund()
	this.hero_rename_start("Стрелок")
end
----------------------------------------------------------------------------------
-- by Shadows aka Ray Twitty
function camera_rotate_on_position(pos, speed, action, ...)
	if pos and speed >= 1 and speed <= 20 then
		local args = {...}
		local dev = device()
		local current_dir = dev.cam_dir:mul(level.get_target_dist())
		local end_dir = pos:sub(dev.cam_pos)
		local current_angle = -current_dir:getH()
		local end_angle = -end_dir:getH()
		if vector():crossproduct(end_dir, dev.cam_dir).y > 0 then
			speed = -speed
		end
		level.add_call(
			function()
				if current_angle > 1.57 then
					current_angle = -4.71
				elseif current_angle < -4.71 then
					current_angle = 1.57
				end
				current_angle = current_angle + speed / 1000
				Actor:set_camera_direction(vector():set(current_angle, 0, 0))
				return math.abs(current_angle - end_angle) < 0.01
			end,
			function()
				if action then
					loadstring("return function(args) "..action.."(unpack(args)) end")()(args)
				end
			end
		)
	end
end
----------------------------------------------------------------------------------
-- Расстояние между точками на глобальной карте.
-- Используется для рассчёта траты заряда телепортаторов при перемещении.
--[[local max_dist = false
function get_map_dist_from_actor( vertex_id )
	local actor_gv = Actor:game_vertex_id()
	if not GGraph:valid_vertex_id( actor_gv ) then
		actor_gv = n_vertexes.get_nearest_gv( Actor:position() )
	end

	local pos1 = GGraph:vertex( vertex_id ):game_point()
	local pos2 = GGraph:vertex( actor_gv ):game_point()
	local dist = pos1:distance_to(pos2)
	
	if not max_dist then
		max_dist = 0
		local i, j, m_dist = 0, 0, 0
		while GGraph:valid_vertex_id( i ) do
			pos1 = GGraph:vertex( i ):game_point()
			while GGraph:valid_vertex_id( j ) do
				m_dist =  GGraph:vertex( j ):game_point():distance_to( pos1 )
				if m_dist > max_dist then
					max_dist = m_dist
				end
				j = j + 1
			end
			i = i + 1
		end
		max_dist = max_dist * 0.8
	end

--	log("[get_map_dist_from_actor]: dist = %s, max_dist = %s", dist, max_dist)
	return dist, max_dist
end
]]
local max_dist = false
function get_map_dist( start_level, start_pos, to_level, to_pos )
	local ini = game_ini()

	local function GetGlobalPos( level_name, pos )
		local global_rect = ini:r_rect(level_name, "global_rect") or Frect():set(-10, -10, 0, 0)
		local bound_rect = ini:r_rect(level_name, "bound_rect") or Frect():set(-10, -10, 0, 0)
		local zoom = global_rect:width() / bound_rect:width()
		local res = vector2()
		res.x = ( pos.x - bound_rect.x1 ) * zoom + global_rect.x1
		res.y = ( bound_rect:height() - ( pos.z - bound_rect.y1 ) ) * zoom + global_rect.y1
		return res
	end

	local pos1 = GetGlobalPos( start_level, start_pos )
	local pos2 = GetGlobalPos( to_level, to_pos )
	local dist = pos1:distance_to(pos2)

	if not max_dist then
		max_dist = ini:r_rect("global_map", "bound_rect"):height() *0.8
	end

--	log("[get_map_dist_from_actor]: dist = %s, max_dist = %s", dist, max_dist)

	return dist, max_dist
end
----------------------------------------------------------------------------------
function get_actor_pursuit()
	log("[naxac.get_actor_pursuit]")
	local pos = Actor:position()
	local be
	local enemies = {}
	for id, obj in pairs(db.creatures) do
		if id~=0 and obj and AI:object(id) and obj:is_alive() and obj:see(Actor) then
			be = obj:best_enemy()
			if be and be:id() == 0
				and obj:position():distance_to(pos) < math.random(20, 70)
			then
				-- if IsStalker(obj) then
					xr_wounded.custom_change(id)
				-- end
				table.insert(enemies, id)
			end
		end
	end
	amk.save_variable("pursuit", enemies)
	table.print(enemies)
end
function set_actor_pursuit()
	local enemies = amk.load_table("pursuit")
	if #enemies > 0 then
		local lv, gv = Actor:level_vertex_id(), Actor:game_vertex_id()
		local obj
		for i, v in ipairs(enemies) do
			obj = AI:object(v)
			if obj then
				-- if not IsStalker(obj) then
					-- xr_wounded.custom_change(v)
				-- end
				AI:teleport_object("", 
					Actor:position():add( vector_rotate_y( Actor:direction(), math.random(40, 320) ):mul( math.random( 15, 20 ) ) ),
					lv, gv, v)
			end
		end
	end
	amk.del_variable("pursuit")
end
----------------------------------------------------------------------------------
local rnd_tbl = {}

function get_precondition_rnd(count, name, reset)
	local t = rnd_tbl[name]
	if t == nil then
		t = {}
		rnd_tbl[name] = t
		t.num = nil
	end

	local ret = t.num
	if ret == nil then
		ret = math.random( 1, count )
		t.num = ret
	end

	if reset then
		t.count = (t.count or 0) + 1
		if t.count == count then
			t.num = nil
			t.count = 0
		end
	end

	return ret
end
-- Гарик, смена фраз
function bar_guard_precond_1(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 1
end
function bar_guard_precond_2(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 2
end
function bar_guard_precond_3(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 3
end
