-- -*- mode: lua; encoding: windows-1251 -*-
-- AMK Поддержка функциональности диалогов
-- Initial release by Red75

function get_npc(t1, t2)
	return ( t1:id() == 0 ) and t2 or t1
end

function make_kill_task_failed(actor,npc,p1,p2) 
	npc = get_npc(actor,npc)
	local nid = npc:id()
	local targets = task_manager.amk_kill_targets()
	for n,v in pairs(targets) do
		if v.id == nid then
			task_manager.make_task_failed(v.task_id)
		end
	end  
end

rndval=nil

function act_rnd_init(actor,npc) -- инициализирует значение переменной случайным числом и создаёт функции проверки
	setfenv(1,amk_dialogs)
	if pre_rnd_0_100==nil then
		for a=0,90,10 do
			for b=10,100,10 do
				if a<b then
					if a==0 then
						amk_dialogs["pre_rnd_"..a.."_"..b]=function()
							return rndval<b
						end
					elseif b==100 then
						amk_dialogs["pre_rnd_"..a.."_"..b]=function()
							return rndval>=a
						end
					elseif a==0 and b==100 then
						amk_dialogs["pre_rnd_"..a.."_"..b]=function()
							return true
						end
					else
						amk_dialogs["pre_rnd_"..a.."_"..b]=function()
							return rndval>=a and rndval<b
						end
					end
				end
				setfenv(amk_dialogs["pre_rnd_"..a.."_"..b],amk_dialogs)            
			end
		end
	end
	rndval=math.random(1,100)
end



function frenzy_humanoid(talker,listener) -- можно вызывать как из фразы ГГ, так и NPC
	local tgt = get_npc(talker,listener)
	start_small_timer(300, function(npc)
		npc:set_relation(game_object.enemy, Actor)
		local h = hit()
		h.power = 0
		h.direction = npc:direction()
		h.bone = "bip01_spine"
		h.draftsman = Actor
		h.impulse = 0
		h.type = hit.wound
		npc:hit(h)
	end,
	tgt)
end

function scare_humanoid(talker,listener) -- можно вызывать как из фразы ГГ, так и NPC
	local tgt = get_npc(talker,listener)
	tgt:set_custom_panic_threshold(1.0)
	local h = hit()
	h.power = 0.5
	h.direction = tgt:direction()
	h.bone = "bip01_spine"
	h.draftsman = Actor
	h.impulse = 0
	h.type = hit.wound
	tgt:hit(h)
	tgt.morale=0
	--  local hc=tgt:get_holder_class()
	--  amk.mylog("morale ".. tgt.morale .. " hclass " .. type(hc) .. " mor " .. type(hc.SetMorale))
end


function info_received()
	amk.send_tip("",game.translate_string("st_found_new_pda"),0,10,"gen_info")
end

function actor_has_money_30000()
	return Actor:money() >= 30000
end

function give_money_30000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 30000, "out" )
end
--------------------
function actor_has_money_100000()
	return Actor:money() >= 100000
end

function give_money_100000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 100000, "out" )
end
-------------------
function actor_has_money_50000()
	return Actor:money() >= 50000
end

function give_money_50000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 50000, "out" )
end
-------------------
function actor_has_money_150000()
	return Actor:money() >= 150000
end

function give_money_150000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 150000, "out" )
end
------------------
function actor_has_money_200000()
	return Actor:money() >= 200000
end

function give_money_200000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 200000, "out" )
end
------------------
function actor_has_money_500000()
	return Actor:money() >= 500000
end

function give_money_500000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 500000, "out" )
end

function actor_has_money_700000()
	return Actor:money() >= 700000
end

function give_money_700000(t1,t2)
	dialogs.relocate_money( get_npc(t1,t2), 700000, "out" )
end

function tm_kill_stalker_6_reward(t1,t2)
	local npc = get_npc(t1,t2)
	npc:set_relation( game_object.friend, Actor )
	treasure_manager.give_random_treasure( math.random() > 0.7, level.name() )
	dialogs.relocate_money( npc, math.random(15, 70)*100, "in")
end
