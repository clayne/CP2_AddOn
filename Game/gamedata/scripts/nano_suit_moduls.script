-- -*- mode: lua; encoding: windows-1251 -*-
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Intellectual System Suit (ISS) <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- Итак, что есть:
-- Проверяем, находится ли нужный модуль в слоте и одет ли на ГГ костюм. Если костюм и модуль в своих слотах - то придет сообщение, что все норм и вызовется функция, активирующая модуль. Если модуль в слоте, а костюм нет - то:
-- 1) Активации модуля не будет.
-- 2) На экран придет сообщение с ошибкой.
-- Модуль можно носить только с нанокостюмом. Носить просто так или с другим костюмом - не получится. Активация модуля возможна только при наличии соответствующей капсулы в инвентаре. Одновременно можно использовать только один любой модуль.

--Объявим все локальные переменные, используемые в файле

local txt = volazar_tbl_text["text"]() -- массив со всеми юзаемыми текстами

local vt = volazar_tbl_text.tips

local fl = false
local fl_1 = false
local iSend = 0  -- переменная, хранящач факт выдачи того или иного сообщения
local nanobot_condition_dec = 0.001 -- тысяча использований, думаю, достаточно

local nano_modules = {
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #1. Скорость.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- При активации модуля, нанокостюм автоматически, при понижении порога сил до 40%, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
	nano_speed = {
		indx = 1,
		nanobot = "nanobot_pow",
		msg_work = "msg_sp",
		check_need_work = function() return Actor.power < 0.4 end,
		work = function() Actor.power = 1.0 end
	},
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #2. Здоровье.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- При активации модуля, нанокостюм автоматически, при понижении порога здоровья до 40%, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
	nano_med = {
		indx = 2,
		nanobot = "nanobot_med",
		msg_work = "msg_med",
		check_need_work = function() return Actor.health < 0.4 end,
		work = function() Actor.health = 1.0 end
	},
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #3. Радиация.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- При активации модуля, нанокостюм автоматически, при накоплении смертельной дозы радиации, вводит в кровь наноботы. Наличие капсулы с наноботами в инвентаре - обязательно.
	nano_rad = {
		indx = 3,
		nanobot = "nanobot_rad",
		msg_work = "msg_rad",
		check_need_work = function() return arc_radiation.RAD_DOSE >= arc_radiation.DOSE_HARMFUL end,
		work = function() arc_radiation.mod_rad_dose( -3000 ) end
	},
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Modul #4. Излучение.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- При активации модуля, нанокостюм автоматически, при повышении уровня пси излучения в 50%, вводит наноботы в кровь. Наличие капсулы с наноботами в инвентаре - обязательно.
	nano_psi = {
		indx = 4,
		nanobot = "nanobot_psi",
		msg_work = "msg_psi",
		check_need_work = function() return Actor.psy_health < 0.5 end,
		work = function() Actor.psy_health = 1.0 end
	}
}

-- апдейт раз в секунду
function nano_update()
	local nano = Actor:item_in_slot( inventory_slots.PISTOL )
	if not ( nano and nano_modules[ nano:section() ] ) then
		return
	end

	if not ( actor_outfit and actor_outfit:section() == "nano_suit" ) then  -- Надет ли на ГГ костюм.
		vt( txt.a.msg_vse_ne_ok_1, "nano", 20000 ) -- А костюм где? Дубина!
		iSend = 0
		Actor:move_to_ruck( nano )
		return
	end

	local t = nano_modules[ nano:section() ]

	if iSend ~= t.indx then
		vt(txt.a[ "msg_vse_ok_"..t.indx ], "nano", 7000)
		iSend = t.indx
	end

	if not t.check_need_work() then
		fl = false; fl_1 = false
		return
	end

	if not fl then
		vt(txt.a[ t.msg_work ], "nano", 7000)
		fl = true
	end	

	local obj = Actor:object( t.nanobot )
	if obj then
		t.work()
		fl = false; fl_1 = false

		local se_obj = AI:object( obj:id() )
		if se_obj == nil then return end

		local cond = obj:condition() - nanobot_condition_dec
		if cond <= 0 then
			AI:release( se_obj, true )
		else
			obj:set_condition( cond )
			netpk:modify( se_obj, { condition = cond }, netpk.fState )
		end

	elseif not fl_1 then
		vt(txt.a.msg_vse_ne_ok_2, "nano", 7000)
		fl_1 = true
	end
end


-- Остальное...

-- Спавним НПС
function spawn_volazar()        
local obj = volazar_spawn_other.spawn_other(20)
	set_story_id(obj, story_ids.volazar)
    if obj then
      vt(txt.c.vol_1, "err", 20000)
	end
end

-- Удаляем и спавним нового
function spawn_volazar_new()
	local obj = snp.object_by_section_offline("volazar")
    if obj then
	  AI:release(obj, true)
	end
	
	obj = volazar_spawn_other.spawn_other(21)
	set_story_id(obj, story_ids.volazar_new)
end

-- Подсказки

-- Варлаб
function pod_war_1()
    vt(txt.b.war_1, "vol", 20000)
end

function pod_war_2()
    vt(txt.b.war_2, "vol", 20000)
end

function pod_war_3()
    vt(txt.b.war_3, "vol", 20000)
end

function pod_war_4()
    vt(txt.b.war_4, "vol", 20000)
end

function pod_war_5()
    vt(txt.b.war_5, "vol", 20000)
end

function pod_war_6()
    vt(txt.b.war_6, "vol", 20000)
end

function pod_war_7()
    vt(txt.b.war_7, "vol", 20000)
end

function pod_war_8()
    vt(txt.b.war_8, "vol", 20000)
end

function pod_war_9()
    vt(txt.b.war_9, "vol", 20000)
end

function pod_war_10()
    vt(txt.b.war_10, "vol", 20000)
end

function pod_war_11()
    vt(txt.b.war_11, "vol", 20000)
end

function pod_war_12()
    vt(txt.b.war_12, "vol", 20000)
end

function pod_war_13()
    vt(txt.b.war_13, "vol", 20000)
end

function pod_war_14()
    vt(txt.b.war_14, "vol", 20000)
end

function pod_war_15()
    vt(txt.b.war_15, "vol", 20000)
end

-- Х-16
function pod_x16_1()
    vt(txt.e.x16_1, "vol", 20000)
end

function pod_x16_2()
    vt(txt.e.x16_2, "vol", 20000)
end

function pod_x16_3()
    vt(txt.e.x16_3, "vol", 20000)
end

function pod_x16_4()
    vt(txt.e.x16_4, "vol", 20000)
end

function pod_x16_5()
    vt(txt.e.x16_5, "vol", 20000)
end

function pod_x16_6()
    vt(txt.e.x16_6, "vol", 20000)
end

function pod_x16_7()
    vt(txt.e.x16_7, "vol", 20000)
end

-- ЧАЭС 2
function pod_chs_1()
    vt(txt.f.chs_1, nil, 20000)
end

function pod_chs_2()
    vt(txt.f.chs_2, nil, 20000)
end

function pod_chs_3()
    vt(txt.f.chs_3, nil, 20000)
end

function pod_chs_4()
    vt(txt.f.chs_4, nil, 20000)
end

function pod_chs_5()
    vt(txt.f.chs_5, nil, 20000)
end

function pod_chs_6()
    vt(txt.f.chs_6, nil, 20000)
end

function pod_chs_7()
    vt(txt.f.chs_7, nil, 20000)
end

function pod_chs_8()
    vt(txt.f.chs_8, nil, 20000)
end

function pod_chs_9()
    vt(txt.f.chs_9, nil, 20000)
end

function pod_chs_10()
    vt(txt.f.chs_10, nil, 20000)
end

function pod_chs_11()
    vt(txt.f.chs_11, nil, 20000)
end

function pod_chs_12()
    vt(txt.f.chs_12, nil, 20000)
end

function pod_chs_13()
    vt(txt.f.chs_13, nil, 20000)
end

function pod_chs_14()
    vt(txt.f.chs_14, nil, 20000)
end

function pod_chs_15()
    vt(txt.f.chs_15, nil, 20000)
end

function pod_chs_16()
    vt(txt.f.chs_16, nil, 20000)
end

function pod_chs_17()
    vt(txt.f.chs_17, nil, 20000)
end

function pod_chs_18()
    vt(txt.f.chs_18, nil, 20000)
end

function pod_chs_19()
    vt(txt.f.chs_19, nil, 20000)
end

function pod_chs_20()
    vt(txt.f.chs_20, nil, 20000)
end

function pod_chs_21()
    vt(txt.f.chs_21, nil, 20000)
end

function pod_chs_22()
    vt(txt.f.chs_22, nil, 20000)
end

function pod_chs_23()
    vt(txt.f.chs_23, nil, 20000)
end

function pod_chs_24()
    vt(txt.f.chs_24, nil, 20000)
end

function pod_chs_25()
    vt(txt.f.chs_25, nil, 20000)
end

function pod_chs_26()
    vt(txt.f.chs_26, nil, 20000)
end

-- ЧАЭС
function pod_chs1_1()
    vt(txt.g.chs1_1, nil, 20000)
end

function pod_chs1_2()
    vt(txt.g.chs1_2, nil, 20000)
end

function pod_chs1_3()
    vt(txt.g.chs1_3, nil, 20000)
end

function pod_chs1_4()
    vt(txt.g.chs1_4, nil, 20000)
end

function pod_chs1_5()
    vt(txt.g.chs1_5, nil, 20000)
end

function pod_chs1_6()
    vt(txt.g.chs1_6, nil, 20000)
end

function pod_chs1_7()
    vt(txt.g.chs1_7, nil, 20000)
end

function pod_chs1_8()
    vt(txt.g.chs1_8, nil, 20000)
end

function pod_chs1_9()
    vt(txt.g.chs1_9, nil, 20000)
end

function pod_chs1_10()
    vt(txt.g.chs1_10, nil, 20000)
end

function pod_chs1_11()
    vt(txt.g.chs1_11, nil, 20000)
end

function pod_chs1_12()
    vt(txt.g.chs1_12, nil, 20000)
end

-- Лиманск
function pod_lim_1()
    vt(txt.h.lim_1, nil, 20000)
end

function pod_lim_2()
    vt(txt.h.lim_2, nil, 20000)
end

function pod_lim_3()
    vt(txt.h.lim_3, nil, 20000)
end

function pod_lim_4()
    vt(txt.h.lim_4, nil, 20000)
end

function pod_lim_5()
    vt(txt.h.lim_5, nil, 20000)
end

function pod_lim_6()
    vt(txt.h.lim_6, nil, 20000)
end

function pod_lim_7()
    vt(txt.h.lim_7, nil, 20000)
end

function pod_lim_8()
    vt(txt.h.lim_8, nil, 20000)
end

function pod_lim_9()
    vt(txt.h.lim_9, nil, 20000)
end

function pod_lim_10()
    vt(txt.h.lim_10, nil, 20000)
end

function pod_lim_11()
    vt(txt.h.lim_11, nil, 20000)
end

function pod_lim_12()
    vt(txt.h.lim_12, nil, 20000)
end

function pod_lim_13()
    vt(txt.h.lim_13, nil, 20000)
end

function pod_lim_14()
    vt(txt.h.lim_14, nil, 20000)
end

function pod_lim_15()
    vt(txt.h.lim_15, nil, 20000)
end

function pod_lim_16()
    vt(txt.h.lim_16, nil, 20000)
end

function pod_lim_17()
    vt(txt.h.lim_17, nil, 20000)
end

function pod_lim_18()
    vt(txt.h.lim_18, nil, 20000)
end

function pod_lim_19()
    vt(txt.h.lim_19, nil, 20000)
end

function pod_lim_20()
    vt(txt.h.lim_20, nil, 20000)
end

function pod_lim_21()
    vt(txt.h.lim_21, nil, 20000)
end

function pod_lim_22()
    vt(txt.h.lim_22, nil, 20000)
end

function pod_lim_23()
    vt(txt.h.lim_23, nil, 20000)
end

function pod_lim_24()
    vt(txt.h.lim_24, nil, 20000)
end

function pod_lim_25()
    vt(txt.h.lim_25, nil, 20000)
end

function pod_lim_26()
    vt(txt.h.lim_26, nil, 20000)
end

function pod_lim_27()
    vt(txt.h.lim_27, nil, 20000)
end

-- Путепровод
function pod_put_1()
    vt(txt.i.put_1, nil, 20000)
end

function pod_put_2()
    vt(txt.i.put_2, nil, 20000)
end

function pod_put_3()
    vt(txt.i.put_3, nil, 20000)
end

function pod_put_4()
    vt(txt.i.put_4, nil, 20000)
end

function pod_put_5()
    vt(txt.i.put_5, nil, 20000)
end

function pod_put_6()
    vt(txt.i.put_6, nil, 20000)
end

function pod_put_7()
    vt(txt.i.put_7, nil, 20000)
end

function pod_put_8()
    vt(txt.i.put_8, nil, 20000)
end

function pod_put_9()
    vt(txt.i.put_9, nil, 20000)
end

function pod_put_10()
    vt(txt.i.put_10, nil, 20000)
end

function pod_put_11()
    vt(txt.i.put_11, nil, 20000)
end

function pod_put_12()
    vt(txt.i.put_12, nil, 20000)
end

function pod_put_13()
    vt(txt.i.put_13, nil, 20000)
end

function pod_put_14()
    vt(txt.i.put_14, nil, 20000)
end

function pod_put_15()
    vt(txt.i.put_15, nil, 20000)
end

function pod_put_16()
    vt(txt.i.put_16, nil, 20000)
end

function pod_put_17()
    vt(txt.i.put_17, nil, 20000)
end

function pod_put_18()
    vt(txt.i.put_18, nil, 20000)
end

-- Вост. Припять
function pod_pri_1()
    vt(txt.j.pri_1, nil, 20000)
end

function pod_pri_2()
    vt(txt.j.pri_2, nil, 20000)
end

function pod_pri_3()
    vt(txt.j.pri_3, nil, 20000)
end

function pod_pri_4()
    vt(txt.j.pri_4, nil, 20000)
end

function pod_pri_5()
    vt(txt.j.pri_5, nil, 20000)
end

function pod_pri_6()
    vt(txt.j.pri_6, nil, 20000)
end

function pod_pri_7()
    vt(txt.j.pri_7, nil, 20000)
end

function pod_pri_8()
    vt(txt.j.pri_8, nil, 20000)
end

function pod_pri_9()
    vt(txt.j.pri_9, nil, 20000)
end

function pod_pri_10()
    vt(txt.j.pri_10, nil, 20000)
end

function pod_pri_11()
    vt(txt.j.pri_11, nil, 20000)
end

function pod_pri_12()
    vt(txt.j.pri_12, nil, 20000)
end

function pod_pri_13()
    vt(txt.j.pri_13, nil, 20000)
end

-- Х-8
function pod_x8_1()
    vt(txt.k.x8_1, nil, 20000)
end

function pod_x8_2()
    vt(txt.k.x8_2, nil, 20000)
end

function pod_x8_3()
    vt(txt.k.x8_3, nil, 20000)
end

function pod_x8_4()
    vt(txt.k.x8_4, nil, 20000)
end

function pod_x8_5()
    vt(txt.k.x8_5, nil, 20000)
end

-- МГ
function pod_mg_1()
    vt(txt.l.mg_1, nil, 20000)
end

function pod_mg_2()
    vt(txt.l.mg_2, nil, 20000)
end

function pod_mg_3()
    vt(txt.l.mg_3, nil, 20000)
end

function pod_mg_4()
    vt(txt.l.mg_4, nil, 20000)
end

function pod_mg_5()
    vt(txt.l.mg_5, nil, 20000)
end

-- Затон
function pod_zat_1()
    vt(txt.m.zat_1, nil, 20000)
end

function pod_zat_2()
    vt(txt.m.zat_2, nil, 20000)
end

function pod_zat_3()
    vt(txt.m.zat_3, nil, 20000)
end

function pod_zat_4()
    vt(txt.m.zat_4, nil, 20000)
end

function pod_zat_5()
    vt(txt.m.zat_5, nil, 20000)
end

function pod_zat_6()
    vt(txt.m.zat_6, nil, 20000)
end

function pod_zat_7()
    vt(txt.m.zat_7, nil, 20000)
end

function pod_zat_8()
    vt(txt.m.zat_8, nil, 20000)
end

function pod_zat_9()
    vt(txt.m.zat_9, nil, 20000)
end

-- Юпитер
function pod_jup_1()
    vt(txt.o.jup_1, 3, 20000)
end

function pod_jup_2()
    vt(txt.o.jup_2, nil, 20000)
end

function pod_jup_3()
    vt(txt.o.jup_3, nil, 20000)
end

function pod_jup_4()
    vt(txt.o.jup_4, nil, 20000)
end

function pod_jup_5()
    vt(txt.o.jup_5, nil, 20000)
end

function pod_jup_6()
    vt(txt.o.jup_6, nil, 20000)
end

function pod_jup_7()
    vt(txt.o.jup_7, nil, 20000)
end

function pod_jup_8()
    vt(txt.o.jup_8, nil, 20000)
end

function pod_jup_9()
    vt(txt.o.jup_9, nil, 20000)
end

function pod_jup_10()
    vt(txt.o.jup_10, nil, 20000)
end

function pod_jup_11()
    vt(txt.o.jup_11, nil, 20000)
end

function pod_jup_12()
    vt(txt.o.jup_12, nil, 20000)
end

function pod_jup_13()
    vt(txt.o.jup_13, nil, 20000)
end

function pod_jup_14()
    vt(txt.o.jup_14, nil, 20000)
end

function pod_jup_15()
    vt(txt.o.jup_15, nil, 20000)
end

function pod_jup_16()
    vt(txt.o.jup_16, nil, 20000)
end

function pod_jup_17()
    vt(txt.o.jup_17, nil, 20000)
end

function pod_jup_18()
    vt(txt.o.jup_18, nil, 20000)
end

--Квест с Сидором
local txt_str = { txt.n.esc_3, txt.n.esc_24, txt.n.esc_25, txt.n.esc_26 }
local txt_sid = { txt.n.esc_2, txt.n.esc_22, txt.n.esc_23, txt.n.esc_27 }

function sidor_ammo()
    if has_alife_info("actor_fly")
		and Actor:object("ammo_vog-25_fly") == nil
	then
		local str = table.random( txt_str )
		local sid = table.random( txt_sid )
		news_manager.send_tip(str, nil, "str", 15000)
		news_manager.send_tip(sid, math.random(4,6), "sid", 15000)

		local pos, lv, gv, id = Actor:position(), Actor:level_vertex_id (),Actor:game_vertex_id (), Actor:id()
        for i=1, 18 do
          AI:create ("ammo_vog-25_fly", pos, lv, gv, id)
        end
	end
end

function sidor_sms()
    vt(txt.n.esc_1, "sid", 20000)
end

function sidor_start()
	xr_sound.get_safe_sound_object([[characters_voice\volazar\vse_vyshe_vyshe]]):play(Actor, 15, sound_object.s2d)
	news_manager.send_tip("sidor_esc_fly_start", 5, nil, 15000, nil, "nano_suit_moduls.sidor_start1()")
	Actor:give_info_portion("no_landing")
	Actor:give_info_portion("vol_info_temp")
	xr_s.subscribe( "update", this.sidor_ammo, { timeout = 1000 } )
end
function sidor_start1()
	news_manager.send_tip("sidor_esc_fly_start1", 5, nil, 20000)
	amk.save_variable("blowout",2)
end

function sidor_stop()
	xr_sound.get_safe_sound_object([[characters_voice\volazar\vse_vyshe_vyshe]]):stop()
	invul_4_seconds()
	Actor:disable_info_portion("no_autosave")
	Actor:disable_info_portion("no_landing")
	Actor:disable_info_portion("vol_info_temp")
	xr_s.unsubscribe( "update", this.sidor_ammo )
end

function item_from_sidor() 
	inventory.give_items("anom_egg",1)
	inventory.give_items("wpn_rg-6",1)
	inventory.give_items("ammo_vog-25_fly",12)
	Actor:give_info_portion("no_autosave")
	Actor:give_info_portion("vol_fly")
	xr_s.subscribe( "pre_save", esc_fly.sidor_delo_fail )
end

function sidor_reward() 
	inventory.out_items("wpn_rg-6",1)
	inventory.out_items_all("ammo_vog-25_fly")
	aem_manager.manage_money(200000, "in")	
	amk.del_variable("blowout")
	Actor:disable_info_portion("vol_fly")
end

-- Other

function disable_tel()
    Actor:disable_info_portion("vol_info")
end

function vol_pridurok()
    vt(txt.c.vol_2, "vol", 20000)
end

function vol_eeeehhaa()
    vt(txt.c.vol_3, "vol", 15000)
end

function vol_sms()
    vt(txt.c.vol_4, "err", 20000)
end

function vol_sms_2()
    vt(txt.c.vol_5, nil, 15000)
end

function vol_sms_3()
    vt(txt.c.vol_6, "str", 15000)
end

function vol_sms_4()
    vt(txt.c.vol_7, "str", 15000)
end

function vol_sms_5()
    vt(txt.c.vol_8, nil, 15000)
end

function vol_sms_6()
    vt(txt.c.vol_9, "str", 15000)
end

function vol_sms_7()
    vt(txt.c.vol_10, nil, 20000)
end

function vol_sms_8()
    vt(txt.c.vol_11, "str", 15000)
end

function vol_sms_9()
    vt(txt.c.vol_12, nil, 20000)
end

function vol_sms_10()
    vt(txt.c.vol_13, "str", 15000)
end

function vol_sms_11()
    vt(txt.c.vol_14, "oz", 20000)
end

function vol_sms_12()
    vt(txt.c.vol_15, "oz", 20000)
end

function vol_sms_13()
    vt(txt.c.vol_16, "oz", 20000)
end

function vol_sms_14()
    vt(txt.c.vol_17, "oz", 20000)
end

function vol_sms_15()
    vt(txt.c.vol_18, "str", 20000)
end

function vol_sms_16()
    vt(txt.c.vol_19, "oz", 20000)
end

function vol_sms_17()
    vt(txt.c.vol_20, "str", 20000)
end

function vol_sms_18()
    vt(txt.c.vol_21, "oz", 20000)
end

function vol_sms_19()
    vt(txt.c.vol_22, "oz", 20000)
end

function vol_sms_20()
    vt(txt.c.vol_23, "str", 20000)
end

function vol_sms_21()
    vt(txt.c.vol_24, "oz", 20000)
end

-- Спавним уродцев
function spawn_bloodsucker()
	local spawn = {
		{vector():set(-91.472,-0.390,-154.582),567519,3722},
		{vector():set(-95.983,-0.389,-152.531),560799,3715},
		{vector():set(-97.633,-0.389,-147.813),558483,3722},
		{vector():set(-96.003,-0.389,-143.610),560812,3722},
		{vector():set(-91.893,-0.389,-141.447),567538,3722},
		{vector():set(-86.648,-0.390,-143.053),575907,3722},
		{vector():set(-84.511,-0.390,-148.139),579365,3722},
		{vector():set(-86.612,-0.390,-152.751),575893,3722}
	}
	for i, v in ipairs(spawn) do
		local obj = AI:create( "vol_bloodsucker_"..tostring(i), v[1], v[2], v[3] )
		obj:force_online()
	end
end

function spawn_snork()
	local se_obj = AI:create("vol_snork_1",vector():set(-173.388,0.251,-148.941),422788,3715)
	netpk:modify(se_obj, {object_flags = -5}, netpk.fState)
	se_obj:force_online()
end

function oz_music_good()
local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\volazar\ostanovite_ego]])
snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
end

function oz_music_bad()
local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\volazar\unichtozhte_ego]])
snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
end

function invul_4_seconds()
	snp.invul_on()
	start_real_timer("run",4,"snp.invul_off()")
end

function remove_ozersky()
	Actor:disable_info_portion("ozersky_spawn")
	remove_obj("vol_snork_1")
end

function vol0()
	if has_alife_info("snp_vesker1_done") and has_alife_info("info_chess_dictofon_done") then
		news_manager.send_tip("vol_surprice_sms", 5, nil, 60000)
		AI:create_free("v_inventory_box0",vector():set(157.90061950684,36.504898071289,107.2147064209),59831,2566)
	end
end

-- Удаление любого онлайнового/оффлайнового обьекта
function remove_obj(name)
local obj
    for a=1,65535 do
	  obj = AI:object(a)
		if obj and string.find(obj:name(),name) then
          AI:release(obj, true)
		  return
	  	end
    end
end
