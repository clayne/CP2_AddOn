-- -*- mode: lua; encoding: windows-1251 -*-
-- дополнительные функци для Главного Меню

-- чтение текста опций
function GetUserText(handler, option)
	local flist = getFS():file_list_open_ex("$game_stats$", bit_or(FS.FS_ListFiles, FS.FS_RootOnly), "*."..option)
	
	if flist:Size() > 0 then
		handler:SetText( string.sub( flist:GetAt(0):NameFull(), 1, -( #option + 2 ) ) )
	else
		handler:SetText("")
	end
	
	return handler:GetText()
end

-- сохранение текста опций
function SetUserText(previous, new, option)
	local f = getFS()
--	local f1 = f:update_path("$fs_root$", "fsgame.ltx")
	local f2

	if previous ~= "" then
		f2 = f:update_path("$game_stats$", previous.."."..option)
		if f:exist(f2) then
			f:file_delete(f2)
		end
	end
	
	-- чистим все лишнее
	if new ~= "" then
		local str = ""
		for s in string.gfind(new, "[%w%-%._]+") do
			str = str..s.." "
		end
		if #str == 0 then return end
		str = str:sub(1, -2)
		local f1 = f:update_path("$fs_root$", "fsgame.ltx")
		f2 = f:update_path("$game_stats$", str.."."..option)
		f:file_copy(f1, f2)
	end
end

-- покупка квестовых предметов
function buy_quest_item()
	local f = getFS()
	local flist = f:file_list_open_ex("$game_stats$", bit_or(FS.FS_ListFiles, FS.FS_RootOnly), "*.buy")
	if flist:Size() == 0 then return end

	fname = flist:GetAt(0):NameFull()
  for buy_item in string.gmatch(fname:sub(1, -5), "[%w%-%._]+") do
--	local buy_item = string.sub(fname, 1, -5)
	
	if not sys_ini:section_exist(buy_item) then
		news_manager.send_tip("Предмет \""..buy_item.."\" не найден.", nil, "nano", 10000)
	elseif Actor:money() < 200000 then
		news_manager.send_tip("Для покупки недостаточно денег.", nil, "nano", 10000)
	elseif is_excluded_item(buy_item) then
		news_manager.send_tip("Через меню игры можно покупать только квестовые предметы.", nil, "nano", 10000)
	else
		Actor:disable_info_portion("mm_opt")
		aem_manager.manage_money(200000, "out")
		inventory.give_items(buy_item, 1)
		
		local info
		for i =1,3 do
			info = "acv_halavshic"..tostring(i)
			if not has_alife_info(info) then 
				Actor:give_info_portion(info)
				break
			end
		end
	end
  end
  
	local f1 = f:update_path("$game_stats$", fname)
	f:file_delete(f1)
end

function is_excluded_item(item)
	local unique_items = {"wpn_fot", "fake_wpn_kuvalda"}
	for i, se_name in ipairs(unique_items) do
		if se_name == item then
			return false
		end
	end
	
	local excluded_items = {"amk_transmutator", "teleportator", "anom_egg", "arhara_obman", "bioradar", "amulet", "detector_", "^nv_", "af_", "wpn_", "ammo_", "grenade_", "_tele", "zone_", "zone_docs", "zonedocs"}

	for i, se_name in ipairs(excluded_items) do
		if string.find(item, se_name) then
			return true
		end
	end

	local cls = sys_ini:r_clsid_ex(item, "class", -1)
	return
		sys_ini:line_exist(item, "teleport") or
		cls == clsid.inventory_box or
		cls == clsid.equ_stalker_s or
		IAmAMonster[cls] or IAmAStalker[cls]
end

local not_found_name = ""
local found_name = ""

-- удаление проблемных объектов
function del_bad_objects()
	local f = getFS()
	local flist = f:file_list_open_ex("$game_stats$", bit_or(FS.FS_ListFiles, FS.FS_RootOnly), "*.del")
	if flist:Size() == 0 then return end
	local fname = flist:GetAt(0):NameFull()
	local bad_objects = string.explode(fname:sub(1, -5), "%s", true)
	local se_obj

	-- удаляем
	for i, se_name in ipairs(bad_objects) do
		se_obj = AI:object(se_name)
		if se_obj == nil then
			not_found_name = not_found_name..se_name..", "
		else
			AI:release(se_obj, true)
			found_name = found_name..se_name..", "
		end
	end
	if #found_name>0 then found_name = found_name:sub(1,-3) end
	if #not_found_name>0 then not_found_name = not_found_name:sub(1,-3) end
	
	local f1 = f:update_path("$game_stats$", fname)
	f:file_delete(f1)
end

-- вывод информации об удаленных объектах
function send_bad_objects_info()
	-- есть ненайденный объект
	if not_found_name~="" then
		send_info("Не найдены проблемные объекты: "..not_found_name)
		not_found_name = ""
	end
	
	if #found_name >0 then
		send_info("Удалены проблемные объекты: "..found_name)
		archievements.acv_count_event("acv_neud", 20)
		found_name = ""
	end
end

function send_info(text)
	news_manager.send_tip(text, nil, "nano", 10000)
	log1("! "..text)
--	get_console():execute("load ~~~ "..text)
end

-- проверка допопций
function check_options()
	local console = get_console()

	local value = console:get_float("cam_inert")
	if value > 0.9 then
		console:execute("cam_inert 0.9")
	end
end
