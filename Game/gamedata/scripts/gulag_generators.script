-- -*- mode: lua; encoding: windows-1251 -*-

local t = {}
local gulags = {
	-- Гулаг свободы на Генераторах
	["generators_svoboda"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@generators_svoboda_walker1",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_svoboda_walker2",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_svoboda_kamp3",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_svoboda_kamp4",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "freedom"
		end
	},
	-- Гулаг нейтралов на Генераторах
	["generators_orly"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@generators_orly_zemlyk",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_kamp1",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_walker2",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_walker3",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_walker4",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_kamp5",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
			t = { section = "logic@generators_orly_kamp6",
				prior = 10, state = {0}
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
		end
	},
	-- Гулаг чёрных на Генераторах
	["black_generators"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 10 do
				t = { section = "logic@black_generators_walker"..i,
					prior = 10, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
		end
	},
	--' Плоти на генераторах
	["generators_flesh1"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 4 do
				t = { section = "logic@generators_flesh1",
					prior = 5, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "flesh"
		end
	},
	--' Тушканы на генераторах
	["generators_tushkano"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 6 do
				t = { section = "logic@generators_tushkano", 
					prior = 5, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "tushkano"
		end
	},
	--' Снорки на генераторах
	["generators_snork"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 4 do
				t = { section = "logic@generators_snork", 
					prior = 5, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "snork"
		end
	},
	--' Гигант на генераторах
	["generators_gigant"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@generators_gigant",
				prior = 20, state = {0}
			}
			table.insert(sj, t)
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "pseudo_gigant"
		end
	},
	--' химеры на генераторах
	["generators_chimera"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 2 do
				t = { section = "logic@generators_chimera",
					prior = 20, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "chimera"
		end
	},
	--' 3 кабана на генераторах
	["generators_kaban"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 3 do
				t = { section = "logic@generators_kaban",
					prior = 20, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "boar"
		end
	},
	--' 5 кабанов у бетонки на генераторах
	["gener_kaban_two"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 5 do
				t = { section = "logic@gener_kaban_two",
					prior = 20, state = {0}
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "boar"
		end
	}
}

function load_job(sj, gname, gulag_type, squad, groups)
	local st = gulags[gulag_type]
	if st then
		st.job(sj, gname, gulag_type, squad, groups)
		return true
	end

	return nil
end

function check_state_stub(gulag)
    return 0
end

function load_states(gname, gulag_type)
	local st = gulags[gulag_type]
	if st then
		return st.state or check_state_stub
	end
	return nil
end

function load_ltx(gname, gulag_type)
	local st = gulags[gulag_type]
	if st then
		if st.ltx then
			return st.ltx(gname, gulag_type)
		end
		return false
	end
	return nil
end


function checkStalker(npc_community, gulag_type, npc_rank, se_obj)
	local st = gulags[gulag_type]
	if st then
		if st.check_stalker then
			return st.check_stalker(npc_community, gulag_type, npc_rank, se_obj)
		end
		return false
	end
	return nil
end

function checkMonster( npc_community, gulag_type )
	local st = gulags[gulag_type]
	if st then
		if st.check_monster then
			return st.check_monster(npc_community, gulag_type, npc_rank, se_obj)
		end
		return false
	end
	return nil
end
