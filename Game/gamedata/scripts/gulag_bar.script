-- -*- mode: lua; encoding: windows-1251 -*-
local t = {}
local gulags = {
	--- bar лагерь ---
	["bar_lager"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_lager_esc_kostya",
				online = true,
				predicate = function(obj_info)
								return obj_info.name == "esc_kostya"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_lager_kot",
				online = true,
				predicate = function(obj_info)
								return obj_info.name == "kot"
							end
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:profile_name() == "esc_kostya"
				or se_obj:profile_name() == "kot"
		end
	},
	-- микрогулаг наёмников на ростке у костра
	["rost_naem_koster"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 3 do
				t = { section = "logic@rost_naem_koster_kamp1" }
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "killer"
		end
	},
	--- Свидетель Акилла/Бар ---
	["bar_volna_svidetel"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_volna_svidetel_volna_svidetel" }
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:profile_name() == "volna_svidetel"
		end
	},
	-- КОТ В БАРЕ НА ТЕРРИТОРИИ БАРА	
	["bar_kot"] = {
		state = function(gulag)
			if not has_alife_info("bkot_spawn") then
				return 0 -- оффлайн
			elseif has_alife_info("info_del_lim_teleport") then 
				return 2 -- оффлайн
			else
				return 1 -- в баре
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@on_restr",
				online = false,
				position_threshold = 600
			} 
			table.insert(sj, t)
			t = { section = "logic@kot_in_bar",
				state = {1},
				online = true,
				position_threshold = 600
			} 
			table.insert(sj, t)
			t = { section = "logic@kot_in_of",
				state = {2},
				online = false,
				position_threshold = 600
			} 
			table.insert(sj, t)
		end,
		check_stalker = function (npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:profile_name() == "kot"
		end
	},
	-- Гулаг Иванцов Пличко Барин
	["bar_ivanbarprapor"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_ivanbarprapor_ivancov",
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_dolg_ivancov"
							end	
			}
			table.insert(sj, t)
			t = { section = "logic@bar_ivanbarprapor_plichko",
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_dolg_guard_commander"
							end	
			}
			table.insert(sj, t)
			t = { section = "logic@bar_ivanbarprapor_barin",
				predicate = function(obj_info)
								return obj_info.profile_name == "sim_dolg_veteran_barin"
							end	
			}
			table.insert(sj, t)
		end,
		check_stalker = function (npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:profile_name() == "bar_dolg_ivancov"
				or se_obj:profile_name() == "bar_dolg_guard_commander"
				or se_obj:profile_name() == "sim_dolg_veteran_barin"
		end
	},
    -- ГУЛАГ ЗЕЛЕНЫХ В БАРЕ
	["bar_ohotnik"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_ohotnik_chel1" }
			table.insert(sj, t)
			t = { section = "logic@bar_ohotnik_chel2" }
			table.insert(sj, t)
			t = { section = "logic@bar_ohotnik_zahar_chel3",
				predicate = function(obj_info)
					return obj_info.profile_name == "stalker_green_zahar"
				end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_ohotnik_chel4" }
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "green"
		end
	},
	-- Посетители Долга
	["bar_visitors"] = {
		state = function(gulag)
			-- Проверка боя на арене
			if has_alife_info("bar_arena_start")
				and ( not has_alife_info("bar_arena_actor_victory") )
				and ( not has_alife_info("bar_arena_actor_lose") )
				and ( not has_alife_info("bar_arena_actor_afraid") )
				and ( not has_alife_info("bar_arena_actor_dead") )
			then
				return 2
			end
			
			if level.rain_factor() > 0.07 then
				return 1
			end
			return 0
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 6 do
				t = { section = "logic@bar_visitors_kamp1",
					prior = 10-i, state = {0,1,2},
					squad = squad, group = groups[2]
				}
				table.insert(sj, t)
			end   

			for i = 1, 6 do
				t = { section = "logic@bar_visitors_kamp2",
					prior = 10-i, state = {0,1,2},
					squad = squad, group = groups[3]
				}
				table.insert(sj, t)
			end

			for i = 1, 5 do
				t = { section = "logic@bar_visitors_kamp3",
					prior = 10-i, state = {0,1,2},
					squad = squad, group = groups[4]
				}
				table.insert(sj, t)
			end

			for i = 1, 3 do
				t = { section = "logic@bar_visitors_kamp4",
					prior = 6, state = {0,2},
					squad = squad, group = groups[5]
				}
				table.insert(sj, t)
			end

			t = { section = "logic@bar_visitors_walker",
				prior = 7,
				squad = squad, group = groups[1]
			}
			table.insert(sj, t)
			for i = 1, 4 do
				t = { section = "logic@bar_visitors_walker",
					timeout = math.random(10,20)*60*1000,
					prior = 7,
					squad = squad, group = groups[1]
				}
				table.insert(sj, t)
			end

			-- Бой на арене
			for i = 1, 8 do
				t = { section = "logic@bar_visitors_arena_"..i,
					timeout = 0,
					prior = 7, state = {2},
					squad = squad, group = groups[1]
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
				or npc_community == "nebo"
				or npc_community == "green"
				or npc_community == "dolg"
				or npc_community == "ecolog"
		end
	},
	-- Гулаг ламеров Долга внутри базы Долга
	["bar_dolg_general"] = {
		state = function (gulag)
			for k,v in pairs(gulag.Object) do
				if v ~= true and v:best_enemy() ~= nil then
					gulag.alarm_start = game.get_game_time()
					return 2 -- тревога
				end
			end		
	
			if gulag.alarm_start == nil or
				game.get_game_time():diffSec(gulag.alarm_start) > 300 then
				if level.get_time_hours() >= 6 and level.get_time_hours() <= 22 then
					return 0  -- день
				else
					return 1  -- ночь
				end
			else
				return 2
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic1@bar_dolg_general_guard_left",
				prior = 8, state = {0,1,2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)		    
			t = { section = "logic2@bar_dolg_general_guard_right",
				prior = 8, state = {0,1,2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)		    
			t = { section = "logic3@bar_dolg_general_guard_center",
				prior = 9, state = {0,1,2}, squad = squad, group = groups[0],
				predicate = function(obj_info)
							return obj_info.profile_name == "bar_dolg_guard_commander"
						end
				
			}
			table.insert(sj, t)		

			for i = 1, 5 do
				t = { section = "logic4@bar_dolg_general_kamp",
					prior = 5, state = {0,1}, squad = squad, group = groups[1]
				}
				table.insert(sj, t)
			end

			t = { section = "logic5@bar_dolg_general_patrol1", 
				idle = 5*60*60*1000,
				prior = 6, squad = squad, group = groups[2]
			}
			table.insert(sj, t)
			t = { section = "logic6@bar_dolg_general_patrol2", 
				idle = 5*60*60*1000,
				prior = 6, squad = squad, group = groups[2]
			}
			table.insert(sj, t)

			for i = 6, 10 do
				t = { section = "logic"..i.."@bar_dolg_general_camper",
					prior = 5, state = {2}, squad = squad, group = groups[1]
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
	-- Гулаг ветеранов Долга внутри базы Долга
	["bar_dolg_veterans"] = {
		state = function (gulag)
			for k,v in pairs(gulag.Object) do
				if v ~= true and v:best_enemy() ~= nil then
					gulag.alarm_start = game.get_game_time()
					return 2 -- тревога
				end
			end		
	
			if gulag.alarm_start == nil or
				game.get_game_time():diffSec(gulag.alarm_start) > 300 then
				if level.get_time_hours() >= 6 and level.get_time_hours() <= 22 then
					return 0  -- день
				else
					return 1  -- ночь
				end
			else
				return 2
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic3@bar_dolg_veterans_gates1",
				prior = 7, state = {0,1}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic4@bar_dolg_veterans_gates2",
				prior = 7, state = {0,1}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic1@bar_dolg_veterans_guard_bunker1", 
				prior = 9, state = {0,1,2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic2@bar_dolg_veterans_guard_bunker2",
				prior = 9, state = {0,1,2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic5@bar_dolg_veterans_gates_alarm1",
				prior = 5, state = {2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)	
			t = { section = "logic6@bar_dolg_veterans_gates_alarm2",
				prior = 5, state = {2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
	-- Гулаг в бункере Долга
	["bar_dolg_bunker"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic2@bar_dolg_bunker",
				prior = 10, squad = squad, group = groups[0],
				out_rest = "bar_dolg_bunker_restrictor"
			}
			table.insert(sj, t)		    
			t = { section = "logic3@bar_dolg_bunker",
				prior = 5, squad = squad, group = groups[0],
				out_rest = "bar_dolg_bunker_restrictor"
			}
			table.insert(sj, t)		    
			t = { section = "logic4@bar_dolg_bunker",
				prior = 5, squad = squad, group = groups[0],
				out_rest = "bar_dolg_bunker_restrictor",
			}
			table.insert(sj, t)		    
			t = { section = "logic5@bar_dolg_bunker",
				prior = 4, squad = squad, group = groups[0],
				out_rest = "bar_dolg_bunker_restrictor"
			}
			table.insert(sj, t)		  
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
    -- Гулаг сталкеров на заставе 1
	["bar_zastava"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_dolg_zastava1_cammander_1",
			prior = 9,
			out_rest = "bar_zastava_restrictor",
			predicate = function(obj_info)
							return obj_info.profile_name == "bar_zastava_commander_1"
						end
			}
			table.insert(sj, t)	
			for i = 1,3 do
				t = { section = "logic@bar_dolg_zastava1_walker"..i,
						prior = 8,
						out_rest = "bar_zastava_restrictor"
					}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
    -- Гулаг сталкеров на заставе 2
	["bar_zastava_2"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1,3 do
				t = { section = "logic@bar_dolg_zastava2_walker"..i,
					prior = 9,
					out_rest = "bar_zastava_restrictor_2"  
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
	-- Гулаг нехороших сталкеров ветеранов на Дикой территории
	["bar_evil_veterans"] = {
		state = function (gulag)
			for k,v in pairs(gulag.Object) do
				if v ~= true and v:best_enemy() ~= nil then
					gulag.alarm_start = game.get_game_time()
					return 2 -- тревога
				end
			end		
	
			if gulag.alarm_start == nil or
				game.get_game_time():diffSec(gulag.alarm_start) > 300 then
				if level.get_time_hours() >= 6 and level.get_time_hours() <= 22 then
					return 0  -- день
				else
					return 1  -- ночь
				end
			else
				return 2
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 3 do
				t = { section = "logic@bar_evil_veterans_walker"..i,
					prior = 7, squad = squad, group = groups[0]
				}
				table.insert(sj, t)
				t = { section = "logic@bar_evil_veterans_kamp"..i,
					prior = 7, state = {1}, squad = squad, group = groups[0]
				}
				table.insert(sj, t)
			end
			t = { section = "logic@bar_evil_veterans_camper4",
				prior = 7, state = {0,2}, squad = squad, group = groups[0],
			}
			table.insert(sj, t)
			t = { section = "logic@bar_evil_veterans_camper1",
				prior = 9, state = {0,1,2}, squad = squad, group = groups[0],
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_crazy_veterans_lucky"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_evil_veterans_camper1",
				prior = 1, state = {0,1,2}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic@bar_evil_veterans_kamp4",
				prior = 7, state = {1}, squad = squad, group = groups[0]
			}
			table.insert(sj, t)		
			for i = 1, 3 do
				t = { section = "logic@bar_evil_veterans_alarm"..i,
					prior = 5, state = {2}, squad = squad, group = groups[0]
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	-- Ученные, защищающие инфу от свободы
	["bar_ecolog_crush"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 4 do
				t = { section = "logic@bar_ecolog_crush_sniper_"..i,
					prior = 5, squad = squad, group = groups[0]
				}
				table.insert(sj, t)
			end
			t = { section = "logic@bar_ecolog_professor",
				prior = 10, squad = squad, group = groups[0],
				online = true,
				predicate = function(obj_info)
								return obj_info.story_id == story_ids.bar_ecolog_professor
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_ecolog_professor",
				prior = 2, squad = squad, group = groups[0]
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "ecolog"
		end
	},
	-- Свобода, атакующая ученных с целью отнимания инфы
	["bar_freedom_attack"] = {
		state = function (gulag)
			if has_alife_info("bar_freedom_attack_ecolog")
				and (not has_alife_info("bar_rescue_research_chasing_start"))
				and (not has_alife_info("bar_heli_scene_professor_die"))
			then
				return 1 -- actor enemy
			end
			if has_alife_info("bar_rescue_research_chasing_start")
				and not has_alife_info("bar_heli_scene_professor_die")
			then
				return 2 -- start chasing			
			end
			if has_alife_info("bar_heli_scene_professor_die") then
				return 3 -- relax
			end	 
			return 0
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			--начало сцены {0}
			for i = 1, 4 do
				t = { section = "logic@bar_freedom_attack_sniper_"..i,
					prior = 5,
					squad = squad, group = groups[0],
					position_threshold = 100
				}
				table.insert(sj, t)
			end
			t = { section = "logic@bar_freedom_attack_guard_1",
				prior = 9, state = {0},
				squad = squad, group = groups[0],
				position_threshold = 100, online = true,
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_killer_rpg"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_guard_2",
				prior = 2,
				squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_commander",
				prior = 9, state = {0,1},
				squad = squad, group = groups[0],
				position_threshold = 100,
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_svoboda_attack_commander"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_5",
				prior = 2,
				squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_6",
				prior = 5,
				squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			for i = 1, 4 do
				t = { section = "logic@bar_freedom_offline_walker",
					prior = 9,
					squad = squad, group = groups[0],
					position_threshold = 100,
					predicate = function(obj_info)
									return obj_info.story_id == story_ids["rostok_offline_walker_"..i]
								end		
				}
				table.insert(sj, t)
			end

			-- attack actor	{1}	
			t = { section = "logic@bar_freedom_attack_sniper_7",
				prior = 2, state = {1,2},
				squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			for i = 1, 3 do
				t = { section = "logic@bar_freedom_attack_sniper_c"..i,
					prior = 2, state = {1,2},
					squad = squad, group = groups[0],
					position_threshold = 100
				}
				table.insert(sj, t)
			end
			t = { section = "logic@bar_freedom_attack_sniper_c4",
				prior = 2, state = {1,2},
				squad = squad, group = groups[0],
				position_threshold = 150
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_guard_c1",
				prior = 2, state = {1,2},
				squad = squad, group = groups[0],
				position_threshold = 150
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_guard_c2",
				prior = 5, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 150
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper6_c1",
				prior = 5, state = {1},
				squad = squad, group = groups[0],
				position_threshold = 150
			}
			table.insert(sj, t)
			for i = 7, 10 do
				t = { section = "logic@bar_freedom_attack_camper"..i,
					prior = 5, state = {1},
					squad = squad, group = groups[0],
					position_threshold = 150
				}
				table.insert(sj, t)
			end

			-- погоня за Кругловым	{2}
			for i = 1, 9 do
				t = { section = "logic@bar_freedom_attack_chaser_"..i,
					prior = 5, state = {2},
					squad = squad, group = groups[0],
					position_threshold = 150,
					out_rest = "rostok_chase_restrictor"
				}
				table.insert(sj, t)
			end
			for i = 10, 12 do
				t = { section = "logic@bar_freedom_attack_chaser_"..i,
					prior = 5, state = {2,3},
					squad = squad, group = groups[0],
					position_threshold = 150,
					out_rest = "rostok_chase_restrictor"
				}
				table.insert(sj, t)
			end
			t = { section = "logic@bar_freedom_attack_chaser_13", 
				prior = 2, state = {2},
				squad = squad, group = groups[0],
				position_threshold = 150,
				out_rest = "rostok_chase_restrictor",
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_svoboda_attack_commander"
							end
			}
			table.insert(sj, t)

			-- отдых свободы {3}
			t = { section = "logic@bar_freedom_attack_camper_1_relax",
				prior = 8, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_2_relax",
				prior = 8, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_3_relax",
				prior = 7, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_4_relax",
				prior = 6, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_5_relax",
				prior = 6, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_6_relax",
				prior = 5, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_7_relax",
				prior = 6, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_8_relax",
				prior = 5, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_camper_9_relax",
				prior = 5, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100
			}
			table.insert(sj, t)
			t = { section = "logic@bar_freedom_attack_commander_relax",
				prior = 10, state = {3}, squad = squad, group = groups[0],
				position_threshold = 100,
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_svoboda_attack_commander"
							end
			}
			table.insert(sj, t)		
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "killer"
		end
	},
	-- killers na stroyke
	["bar_freedom_chasers_attack"] = {
		state = function (gulag)
			if has_alife_info("bar_bandits_alive") then
				return 0
			end
			return 1
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 4 do
				t = { section = "logic@bar_freedom_chaser_attack_"..i,
					squad = squad, group = groups[0]
				}
				table.insert(sj, t)
			end
			for i = 1, 4 do
				t = { section = "logic@bar_freedom_chaser_attack_hide_"..i, 
					state = {1},
					squad = squad, group = groups[0],
					position_threshold = 100
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "killer"
		end
	},
	-- Засада боевиков Наемников на стройке
	["bar_killers_ambush"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_svoboda_ambush_sniper_1",
				prior = 4,
				squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_2",
				prior = 4,
				squad = squad, group = groups[0],
				predicate = function(obj_info)
								return obj_info.profile_name == "killer_sniper"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_3",
				prior = 5,
				squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_4",
				prior = 5,
				squad = squad, group = groups[0]
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_5",
				prior = 6,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
								return obj_info.profile_name == "bar_killer_ambush_tiran"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_6",
				prior = 6,
				squad = squad, group = groups[1],
				predicate = function(obj_info)
								return obj_info.profile_name == "killer_sniper"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_svoboda_ambush_sniper_7",
				prior = 7,
				squad = squad, group = groups[1]
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "killer"
		end
	},
	-- ARENA MONSTERS
	["bar_arena_monstr"] = {
		state = function(gulag)
			if has_alife_info("bar_arena_state_1") then
				return 1
			end
			return 0
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@bar_arena_monstr_pseudodog",
				state = {1},
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "pseudodog_arena"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_arena_monstr_pseudodog_none",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "pseudodog_arena"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@bar_arena_monstr_snork",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "snork_arena"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_arena_monstr_snork_none",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "snork_arena"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@bar_arena_monstr_bloodsucker",
				state = {1},
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "bloodsucker_arena"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_arena_monstr_bloodsucker_none",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "bloodsucker_arena"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@bar_arena_monstr_burer",
				state = {1},
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "burer_arena"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_arena_monstr_burer_none",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.section_name == "burer_arena"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@bar_arena_monstr_savage",
				state = {1},
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.community == "arena_enemy"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@bar_arena_monstr_savage_none",
				squad = squad, group = groups[0],
				out_rest = "bar_arena_sr",
				predicate = function(obj_info)
								return obj_info.community == "arena_enemy"
							end
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "arena_enemy"
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			local se_obj_name = se_obj:section_name()
			return se_obj_name == "pseudodog_arena"
				or se_obj_name == "snork_arena"
				or se_obj_name == "bloodsucker_arena"
				or se_obj_name == "burer_arena"
		end
	},
}

function get_gulag(gulag_type)
	return gulags[gulag_type]
end
