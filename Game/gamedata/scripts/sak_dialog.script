-- -*- mode: lua; encoding: windows-1251 -*-
--------------------------------------------------------------------------------------------------------
-- Сяковы диалоги 
-------------------------------------------------------------------------------------------------------
local recipts_info = {
	["info_artmod_dummy_dummy_mosquito_bald"] = {
		art = "af_dummy_dummy",
		phrase = "artmod_53_61_dialog_0001"
	},
	["info_artmod_ameba_slug_mincer"] = {
		art = "af_ameba_slug",
		phrase = "artmod_53_61_dialog_0002"
	},
	["info_amk_recipt_dikoobraz"] = {
		art = "af_dik_1",
		phrase = "artmod_53_61_dialog_0003"
	},
	["info_amk_recipt_fake"] = {
		art = "af_sunlight",
		phrase = "artmod_53_61_dialog_0004"
	},
	["info_amk_recipt_electra_dikoobraz"] = {
		art = "af_dik_2",
		phrase = "artmod_53_61_dialog_0005"
	},
	["info_amk_recipt_giant_small_brother"] = {
		art = "af_kol_4",
		phrase = "artmod_53_61_dialog_0006"
	}
}
function osvedomitel_has_recipts(first_speaker, second_speaker)
	for k, v in pairs(recipts_info) do
		if Actor:dont_has_info(k) then
			return true
		end
	end
	return false
end
function osvedomitel_hasnt_recipts(first_speaker, second_speaker)
	return not osvedomitel_has_recipts(first_speaker, second_speaker)
end
function show_recipts(first_speaker, second_speaker)
	for k, v in pairs(recipts_info) do
		if Actor:dont_has_info(k) then
			local icon = GetIconParams(v.art)
			Actor:give_talk_message(
				game.translate_string(v.phrase),
				"ui\\ui_icon_equipment",
				Frect():set(icon.x, icon.y, icon.w, icon.h),
				"iconed_icon_item"
			)
		end
	end
end


function add_abakan(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan", "in")
end
function add_mp5(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_mp5", "in")
end
function give_10conserva(first_speaker, second_speaker)
	inventory.out_items("conserva",10)
end
function give_5kolbasa(first_speaker, second_speaker)
	inventory.out_items("kolbasa",5)
end
function give_kolbasa(first_speaker, second_speaker)
	inventory.out_items("kolbasa",1)
end
function kolbasa_have()
  	return inventory.search("kolbasa",1) ~= false 
end
function conserva10_have()
  	return inventory.search("conserva",10) ~= false 
end
function kolbasa5_have()
  	return inventory.search("kolbasa",5) ~= false 
end
function give_2conserva(first_speaker, second_speaker)
	inventory.out_items("conserva",2)
end
function give_2kolbasa(first_speaker, second_speaker)
	inventory.out_items("kolbasa",2)
end
function give_2drink(first_speaker, second_speaker)
	shiftCheckDropItem()
	inventory.out_items("energy_drink",2)
end
function give_5drink(first_speaker, second_speaker)
	shiftCheckDropItem()
	inventory.out_items("energy_drink",5)
end
function give_7beer(first_speaker, second_speaker)
	shiftCheckDropItem()
	inventory.out_items("beer_a",7)
end
function give_3drink(first_speaker, second_speaker)
	shiftCheckDropItem()
	inventory.out_items("energy_drink",3)
end
function give_5bread(first_speaker, second_speaker)
	inventory.out_items("bread",5)
end
function give_10bread(first_speaker, second_speaker)
	inventory.out_items("bread",10)
end
function conserva2_have()
  	return inventory.search("conserva",2) ~= false 
end
function kolbasa2_have()
  	return inventory.search("kolbasa",2) ~= false 
end
function drink2_have()
  	return inventory.search("energy_drink",2) ~= false 
end
function drink3_have()
  	return inventory.search("energy_drink",3) ~= false 
end
function drink5_have()
  	return inventory.search("energy_drink",5) ~= false 
end
function beer7_have()
  	return inventory.search("beer_a",7) ~= false 
end
function bread5_have()
  	return inventory.search("bread",5) ~= false 
end
function bread10_have()
  	return inventory.search("bread",10) ~= false 
end
function has_soldiers_bribe(first_speaker, second_speaker)
	return inventory.search("vodka",1) ~= false
end
function can_vodka_start(first_speaker, second_speaker)
	if this.vodka_start_complete() then return false end
	return xr_logic.pstor_retrieve(Actor, "kuzvodka", 0) >= 1
end
function cant_vodka_start(first_speaker, second_speaker)
	return not can_vodka_start(first_speaker, second_speaker)
end
function vodka_start_complete()
	return has_alife_info("esc_bridge_vodka_start")
		or has_alife_info("esc_bridge_vodka_have")
		or has_alife_info("esc_bridge_vodka_done")
end
function give_soldiers_bribe(first_speaker, second_speaker)
	inventory.out_items("vodka",1)
	archievements.acv_count_event("acv_bribe", 20, "Честный налогоплательщик")
end
function give_kuzya_bribe(first_speaker, second_speaker)
	this.give_soldiers_bribe(first_speaker, second_speaker)

	if this.vodka_start_complete() then return end
	local v = xr_logic.pstor_retrieve(Actor, "kuzvodka", 0)
	xr_logic.pstor_store(Actor, "kuzvodka", v+1)
end
function have_krysyk_goods()
  	return inventory.search("af_electra_moonlight",3) ~= false and inventory.search("af_dummy_glassbeads",1) ~= false
end
function give_krysyk_goods()
	inventory.out_items("af_electra_moonlight",3)
	inventory.out_items("af_dummy_glassbeads",1)
end
function give_pda_krysyka()
	inventory.out_items("pda_krysyka",1)
end
function have_pda_krysyka()
  	return inventory.search("pda_krysyka",1) ~= false
end
function give_borov_11()
	inventory.out_items("scaintist_docs",1)
	inventory.out_items("inventory_sakbox_05",1)
end
function have_borov_11()
  	return inventory.search("scaintist_docs",1) ~= false and inventory.search("inventory_sakbox_05",1) ~= false
end
function add_wpn_svd(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_svd", "in")
end
function add_wpn_sig(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_sig_m2", "in")
end
function add_wpn_svu(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_svu", "in")
end
function add_wpn_vintorez(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_vintorez", "in")
end
function add_dolg_scientific_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_scientific_outfit", "in")
end
function add_militaryspec_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "militaryspec_outfit", "in")
end
function add_dolg_black_exoskeleton(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "dolg_black_exoskeleton", "in")
end
function add_4ammo_vog_25s(first_speaker, second_speaker)
	inventory.give_items("ammo_vog-25",4)
end
function add_3ammo_vog_25p(first_speaker, second_speaker)
	inventory.give_items("ammo_vog-25p",3)
end
-- Proper70 исправления обмена.
function add_2ammo_762x54_7h1(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_7h1",2)
end
function add_2ammo_762x54_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_ap",1)
end
function add_1ammo_762x54_7h14(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_7h14",2)
end
-- Следующие 2 функции добавлены
function add_2ammo_762x54_7h14(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_7h14",2)
end
function add_1ammo_762x54_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_ap",1)
end
-- Proper70 end
function add_3ammo_7_62_fmj(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x39_fmj",3)
end
function add_2ammo_762x39_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x39_ap",2)
end
function add_5antirad(first_speaker, second_speaker)
	inventory.give_items("antirad",5)
end
function add_2soporific(first_speaker, second_speaker)
	inventory.give_items("soporific",2)
end
function add_4medkit_scientic(first_speaker, second_speaker)
	inventory.give_items("medkit_scientic",4)
end
function add_3medkit_scientic(first_speaker, second_speaker)
	inventory.give_items("medkit_scientic",3)
end
function add_3medkit_army(first_speaker, second_speaker)
	inventory.give_items("medkit_army",3)
end
function add_2medkit_army(first_speaker, second_speaker)
	inventory.give_items("medkit_army",2)
end
function add_ammo_f1(first_speaker, second_speaker)
	inventory.give_items("grenade_f1",1)
end
function add_ammo_f2(first_speaker, second_speaker)
	inventory.give_items("grenade_f1",2)
end
function add_ammo_rgd1(first_speaker, second_speaker)
	inventory.give_items("grenade_rgd5",1)
end
function add_ammo_9x19_ap(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_9x19_pbp", "in")
end
function add_ammo_762x54r(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54r", "in")
end
function add_ammo_762x54r2(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54r",2)
end
function add_ammo_5_7x28_ss1904(first_speaker, second_speaker)
	inventory.give_items("ammo_5.7x28_ss190",4)
end
function add_military_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "military_outfit", "in")
end
function add_wpn_abakan_m1(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan_m1", "in")
end
function add_wpn_abakan(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_abakan", "in")
end
function add_wpn_pkm(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_pkm", "in")
end
function add_wpn_gauss(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_gauss", "in")
end
function add_wpn_spas12(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_spas12", "in")
end
function add_p90(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_p90", "in")
end
function add_fn2000(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_fn2000", "in")
end
function add_2ammo_12x76_zhekan(first_speaker, second_speaker)
	inventory.give_items("ammo_12x76_zhekan",2)
end
function add_3ammo_12x76_dart(first_speaker, second_speaker)
	inventory.give_items("ammo_12x76_dart",3)
end
function add_5ammo_12x70_buck(first_speaker, second_speaker)
	inventory.give_items("ammo_12x70_buck",5)
end
function add_protection_outfit(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "protection_outfit", "in")
end
function add_ammo_super_gauss(first_speaker, second_speaker)
	inventory.give_items("ammo_super_gauss",3)
end
function add_ammo_gauss(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "ammo_gauss", "in")
end
function add_akkumul_sci(first_speaker, second_speaker)
	inventory.give_items("ekza_akkumul_sci",1)
end
function add_2akkumul_sci(first_speaker, second_speaker)
	inventory.give_items("ekza_akkumul_sci",2)
end
local check_accum_tbl = {
	["ekza_akkumul"] = 0,
	["ekza_akkumul_fre"] = 0,
	["ekza_akkumul_dol"] = 0,
	["ekza_akkumul_mil"] = 0,
	["ekza_akkumul_kil"] = 0,
	["ekza_akkumul_sci"] = 0,
	["ekza_akkumul_mon"] = 0,
	["ekza_akkumul_ban"] = 0
}
function ekza_akkumul4_bad_have(first_speaker, second_speaker)
	local need = 4
	local sec = ""
	Actor:iterate_inventory( function( dummy, item )
		sec = item:section()
		if check_accum_tbl[sec] then
			local cond = item:condition()
			if cond >= 0 and cond <= 0.2 then
				table.add(check_accum_tbl, sec)
				need = need - 1
			end
			if need == 0 then return true end
		end
	end,
	Actor )
	return false
end
function give_4ekza_akkumul_bad(first_speaker, second_speaker)
	for k, v in pairs(check_accum_tbl) do
		if v > 0 then
			inventory.out_by_condition(k, v, 0, 0.2)
			check_accum_tbl[k] = 0
		end
	end
end
function clear_akkumul()
	for k, v in pairs(check_accum_tbl) do
		check_accum_tbl[k] = 0
	end
end
function take_fox_spot()
	sak.add_spot_of_docent(5)
end
function take_shustryi_spot()
	sak.add_spot_of_docent(4)
end
function take_wolf_spot()
	sak.add_spot_of_docent(6)
end
function take_provodnik_spot()
	sak.add_spot_of_docent(92)
end
function take_yrik_spot() 
	sak.add_spot_of_docent(104)
end
function take_bes_spot() 
	sak.add_spot_of_docent(107)
end
function take_krot_spot() 
	sak.add_spot_of_docent(302)
end
function take_krisyk_spot() 
	sak.add_spot_of_docent(9508)
end
function give_docent_5pda(first_speaker, second_speaker)
	inventory.out_items("device_pda_npc",5)
end
function give_2mica(first_speaker, second_speaker)
	inventory.out_items("af_ameba_mica",2)
end
function give_3mica(first_speaker, second_speaker)
	inventory.out_items("af_ameba_mica",3)
end
function docent_5pda_have()
  	return inventory.search("device_pda_npc",5) ~= false
end
function docent_have_have()
	if Actor:has_info("sak_gold_fish_have") or Actor:has_info("sak_find_seif_have") or Actor:has_info("sak_repair_box_have") or Actor:has_info("sak_reward_outfit_have") then
  	return true
	else
	return false
	end 
end
function give_medkit_scientic(first_speaker, second_speaker)
	inventory.out_items("medkit_scientic", 1)
end
function medkit_scientic_have()
	return inventory.search("medkit_scientic",1) ~= false
end
function give_medkit_army(first_speaker, second_speaker)
	inventory.out_items("medkit_army", 1)
end
function medkit_army_have()
	return inventory.search("medkit_army",1) ~= false
end
function give_2medkit(first_speaker, second_speaker)
	inventory.out_items("medkit",2)
end
function medkit2_have()
	return inventory.search("medkit",2) ~= false
end
function medkit_have()
	return inventory.search("medkit",1) ~= false
end
function give_antirad(first_speaker, second_speaker)
	inventory.out_items("antirad", 1)
end
function antirad_have()
	return inventory.search("antirad",1) ~= false
end
function give_fuzz_kolobok(first_speaker, second_speaker)
	inventory.out_items("af_fuzz_kolobok", 1)
end
function fuzz_kolobok_have()
	return inventory.search_af("af_fuzz_kolobok",1) ~= false
end
function give_dummy_3glassbeads(first_speaker, second_speaker)
	inventory.out_items("af_dummy_glassbeads",3)
end
function dummy_3glassbeads_have()
	return inventory.search_af("af_dummy_glassbeads",3) ~= false
end
function give_dummy_pellicle(first_speaker, second_speaker)
	inventory.out_items("af_dummy_pellicle", 1)
end
function dummy_pellicle_have()
	return inventory.search_af("af_dummy_pellicle",1) ~= false
end
function give_dummy_battery(first_speaker, second_speaker)
	inventory.out_items("af_dummy_battery", 1)
end
function dummy_battery_have()
	return inventory.search_af("af_dummy_battery",1) ~= false
end
function give_dummy_dummy(first_speaker, second_speaker)
	inventory.out_items("af_dummy_dummy", 1)
end
function dummy_dummy_have()
	return inventory.search_af("af_dummy_dummy",1) ~= false
end
function give_dummy_spring(first_speaker, second_speaker)
	inventory.out_items("af_dummy_spring", 1)
end
function dummy_spring_have()
	return inventory.search_af("af_dummy_spring",1) ~= false
end
function give_3rusty_sea_urchin(first_speaker, second_speaker)
	inventory.out_items("af_rusty_sea-urchin", 3)
end
function rusty_sea_urchin_3have()
	return inventory.search_af("af_rusty_sea-urchin",3) ~= false
end
function give_rusty_sea_urchin(first_speaker, second_speaker)
	inventory.out_items("af_rusty_sea-urchin", 1)
end
function rusty_sea_urchin_have()
	return inventory.search_af("af_rusty_sea-urchin",1) ~= false
end
function give_rusty_kristall(first_speaker, second_speaker)
	inventory.out_items("af_rusty_kristall", 1)
end
function rusty_kristall_have()
	return inventory.search_af("af_rusty_kristall",1) ~= false
end
function give_rusty_thorn(first_speaker, second_speaker)
	inventory.out_items("af_rusty_thorn", 1)
end
function rusty_thorn_have()
	return inventory.search_af("af_rusty_thorn",1) ~= false
end
function give_ameba_slug(first_speaker, second_speaker)
	inventory.out_items("af_ameba_slug", 1)
end
function ameba_slug_have()
	return inventory.search_af("af_ameba_slug",1) ~= false
end
function give_ameba_slime(first_speaker, second_speaker)
	inventory.out_items("af_ameba_slime", 1)
end
function ameba_slime_have()
	return inventory.search_af("af_ameba_slime",1) ~= false
end
function give_2fireball(first_speaker, second_speaker)
	inventory.out_items("af_fireball",2) 
end
function fireball2_have()
	return inventory.search_af("af_fireball",2) ~= false
end
function give_fireball(first_speaker, second_speaker)
	inventory.out_items("af_fireball", 1)
end
function fireball_have()
	return inventory.search_af("af_fireball",1) ~= false
end
function give_night_star(first_speaker, second_speaker)
	inventory.out_items("af_night_star", 1)
end
function night_star_have()
	return inventory.search_af("af_night_star",1) ~= false
end
function give_electra_sparkler(first_speaker, second_speaker)
	inventory.out_items("af_electra_sparkler", 1)
end
function electra_sparkler_have()
	return inventory.search_af("af_electra_sparkler",1) ~= false
end 
function fox_pay_money(actor, npc)
	treasure_manager.get_treasure_manager():give_treasure("esc_secret_truck_goods")
end
function give_vodka()
	inventory.out_items("vodka", 1)
end
function give_2vodka()
	inventory.out_items("vodka",2)
end
function give_3vodka()
	inventory.out_items("vodka",3)
end
function give_5vodka()
	inventory.out_items("vodka",5)
end
function give_6vodka()
	inventory.out_items("vodka",6)
end
function give_7vodka()
	inventory.out_items("vodka",7)
end
function give_8vodka()
	inventory.out_items("vodka",8)
end
function give_10vodka()
	inventory.out_items("vodka",10)
end
function give_20vodka()
	inventory.out_items("vodka",20)
end
function give_15vodka()
	inventory.out_items("vodka",15)
end
function give_40vodka()
	inventory.out_items("vodka",40)
end
function have_vodka()
	return inventory.search("vodka",1) ~= false
end
function have_2vodka()
	return inventory.search("vodka",2) ~= false
end
function have_3vodka()
	return inventory.search("vodka",3) ~= false
end
function have_5vodka()
	return inventory.search("vodka",5) ~= false
end
function have_6vodka()
	return inventory.search("vodka",6) ~= false
end
function have_7vodka()
	return inventory.search("vodka",7) ~= false
end
function have_8vodka()
	return inventory.search("vodka",8) ~= false
end
function have_10vodka()
	return inventory.search("vodka",10) ~= false
end
function have_15vodka()
	return inventory.search("vodka",15) ~= false
end
function have_20vodka()
	return inventory.search("vodka",20) ~= false
end
function have_40vodka()
	return inventory.search("vodka",40) ~= false
end
function give_drops(first_speaker, second_speaker)
	inventory.out_items("af_drops", 1)
end
function drops_have()
	return inventory.search_af("af_drops",1) ~= false
end
function give_blood(first_speaker, second_speaker)
	inventory.out_items("af_blood", 1)
end
function blood_have()
	return inventory.search_af("af_blood",1) ~= false
end
function give_electra_flash(first_speaker, second_speaker)
	inventory.out_items("af_electra_flash", 1)
end
function electra_flash_have()
	return inventory.search_af("af_electra_flash",1) ~= false
end
function give_mincer_meat(first_speaker, second_speaker)
	inventory.out_items("af_mincer_meat", 1)
end
function mincer_meat_have()
	return inventory.search_af("af_mincer_meat",1) ~= false
end
function give_vyvert(first_speaker, second_speaker)
	inventory.out_items("af_vyvert", 1)
end
function vyvert_have()
	return inventory.search_af("af_vyvert",1) ~= false
end
function give_cristall_flower(first_speaker, second_speaker)
	inventory.out_items("af_cristall_flower", 1)
end
function cristall_flower_have()
	return inventory.search_af("af_cristall_flower",1) ~= false
end
function give_medusa(first_speaker, second_speaker)
	inventory.out_items("af_medusa", 1)
end
function medusa_have()
	return inventory.search_af("af_medusa",1) ~= false
end
function give_10medusa(first_speaker, second_speaker)
	inventory.out_items("af_medusa", 10)
end
function medusa10_have()
	return inventory.search_af("af_medusa",10) ~= false
end
function give_7medusa(first_speaker, second_speaker)
	inventory.out_items("af_medusa", 7)
end
function medusa7_have()
	return inventory.search_af("af_medusa",7) ~= false
end
function give_gravi(first_speaker, second_speaker)
	inventory.out_items("af_gravi", 1)
end
function gravi_have()
	return inventory.search_af("af_gravi",1) ~= false
end
-- Akill begin
function add_5vodka()
	inventory.give_items("vodka",3)
end
function add_6vodka()
	inventory.give_items("energy_drink",5)
end
-- Akill end
function add_pampers()
	inventory.give_items("pampers",1)
end
function add_vodka(first_speaker, second_speaker)
	inventory.give_items("vodka",1)
end
function add_medkit(first_speaker, second_speaker)
	inventory.give_items("medkit",1)
end
function add_5medkit(first_speaker, second_speaker)
	inventory.give_items("medkit",5)
end
function add_10medkit(first_speaker, second_speaker)
	inventory.give_items("medkit",8)
end
function add_saiga(first_speaker, second_speaker)
	inventory.give_items("wpn_saiga12c",1)
end
function add_groza(first_speaker, second_speaker)
	inventory.give_items("wpn_groza",1)
end
function add_val(first_speaker, second_speaker)
	inventory.give_items("wpn_val",1)
end
function add_wpn_ak47(first_speaker, second_speaker)
	inventory.give_items("wpn_ak47",1)
end
function add_toz(first_speaker, second_speaker)
	inventory.give_items("wpn_toz34",1)
end
function add_5ammo_9x39_pab9(first_speaker, second_speaker)
	inventory.give_items("ammo_9x39_pab9",5)
end
function add_4ammo_9x39_sp5(first_speaker, second_speaker)
	inventory.give_items("ammo_9x39_sp5",4)
end
function add_3ammo_9x39_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_9x39_ap",3)
end
function add_5ammo_556x45_ss190(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_ss190",5)
end
function add_3ammo_556x45_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_ap",3)
end
function add_3ammo_556x45_gd(first_speaker, second_speaker)
	inventory.give_items("ammo_5.56x45_gd",3)
end
function add_3ammo_545x39_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_5.45x39_ap",3)
end
function add_5ammo_5_45_fmj(first_speaker, second_speaker)
	inventory.give_items("ammo_5.45x39_fmj",5)
end
function add_ammo_5_45_fmj(first_speaker, second_speaker)
	inventory.give_items("ammo_5.45x39_fmj",1)
end
function add_ammo_5_45_fmj2(first_speaker, second_speaker)
	inventory.give_items("ammo_5.45x39_fmj",2)
end
function add_ammo_7_62_fmj2(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x39_fmj",2)
end
function add_ammo_7_62_ap3(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x39_ap",3)
end
function add_ammo_7_62_ap(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_ap",1)
end
function add_ammo_7_62_ap2(first_speaker, second_speaker)
	inventory.give_items("ammo_7.62x54_ap",2)
end
function add_ammo_rgd2(first_speaker, second_speaker)
	inventory.give_items("grenade_rgd5",2)
end
function add_ammo_rgd3(first_speaker, second_speaker)
	inventory.give_items("grenade_rgd5",3)
end
function add_ammo_rgd5(first_speaker, second_speaker)
	inventory.give_items("grenade_rgd5",5)
end
function add_ammo_12x70_buck3(first_speaker, second_speaker)
	inventory.give_items("ammo_12x70_buck",3)
end
function add_ammo_12x70_buck5(first_speaker, second_speaker)
	inventory.give_items("ammo_12x70_buck",5)
end
function add_3ammo_9x18_pmm(first_speaker, second_speaker)
	inventory.give_items("ammo_9x18_pmm",3)
end
function add_ekza_accumm_ban()
	inventory.give_items("ekza_akkumul_ban",1)
end
function add_wpn_ak74(first_speaker, second_speaker)
	inventory.give_items("wpn_ak74",1)
end
function give_strelok_pda(first_speaker, second_speaker) 
	inventory.out_items("strelok_pda",1) 
end
function strelok_pda_have()
	return inventory.search("strelok_pda",1) ~= false
end
function give_rad_kontainer(first_speaker, second_speaker) 
	inventory.out_items("inventory_sakbox_05",1) 
end
function rad_kontainer_have()
	return inventory.search("inventory_sakbox_05",1) ~= false
end
function scintist_pda_have()
	return inventory.search("scaintist_pda",1) ~= false
end
function give_scintist_pda(first_speaker, second_speaker) 
	inventory.out_items("scaintist_pda",1) 
end
function give_bar_ivancov_playboy(first_speaker, second_speaker) 
	inventory.out_items("playboy10",1) 
end
function bar_ivancov_playboy_have()
	return inventory.search("playboy10",1) ~= false
end
function strelok_pda2_have()
	return inventory.search("af_medusa_green",1) ~= false
end
function give_strelok_pda2(first_speaker, second_speaker) 
	inventory.out_items("af_medusa_green",1) 
end
function give_chimera_kogot(first_speaker, second_speaker) 
	inventory.out_items("mutant_chimera_kogot",7,true) 
end
function chimera_kogot_have()
	return inventory.search("mutant_chimera_kogot",7,true) ~= false
end
function give_five_teil(first_speaker, second_speaker) 
	inventory.out_items("mutant_dog_tail",5,true) 
end
function five_teil_have()
	return inventory.search("mutant_dog_tail",5,true) ~= false
end
function escape_lager_volk_document_have()
	return inventory.search("sak_document2",1) ~= false
end
function give_sescape_lager_volk_document(first_speaker, second_speaker)
	inventory.out_items("sak_document2", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function take_agr_saiga(first_speaker, second_speaker)
	inventory.give_items("wpn_ppsh41_sk2",1)
	inventory.give_items("ammo_7.62x25_ps",1)
	inventory.give_items("ammo_7.62x25_p",2)
end
function give_yan_scientist_teleport_01(first_speaker, second_speaker)
	inventory.give_items("sak_resiver_yantar",1)
end
function mil_volk_resiver_have()
	return inventory.search("sak_resiver",1) ~= false
end
function give_mil_volk_resiver(first_speaker, second_speaker)
	inventory.out_items("sak_resiver", 1)
end
function notebook_have()
	return inventory.search("notebook",1) ~= false
end
function give_notebook(first_speaker, second_speaker)
	inventory.out_items("notebook", 1)
end
function give_doktor_book(first_speaker, second_speaker)
	inventory.out_items("sak_book4", 1)
end
function dummy_battery_red_have()
	return inventory.search_af("af_dummy_battery_red",1) ~= false
end
function give_dummy_battery_red(first_speaker, second_speaker)
	inventory.out_items("af_dummy_battery_red", 1)
end
function dummy_pellicle_red_have()
	return inventory.search_af("af_dummy_pellicle_red",1) ~= false
end
function give_dummy_pellicle_red(first_speaker, second_speaker)
	inventory.out_items("af_dummy_pellicle_red", 1)
end
function simbiont_have()
	return inventory.search_af("af_simbion",1) ~= false
end
function give_simbiont(first_speaker, second_speaker)
	inventory.out_items("af_simbion", 1)
end
function dummy_spring_red_have()
	return inventory.search_af("af_dummy_spring_red",1) ~= false
end
function give_dummy_spring_red(first_speaker, second_speaker)
	inventory.out_items("af_dummy_spring_red", 1)
end
function take_dummy_spring_red(first_speaker, second_speaker)
	inventory.give_items("af_dummy_spring_red",1)
end
function take_soul(first_speaker, second_speaker)
	inventory.give_items("af_soul",1)
end
function diplomat_have()
	return inventory.search("diplomat",1) ~= false
end
function give_diplomat(first_speaker, second_speaker)
	inventory.out_items("diplomat", 1)
end
function take_mica(first_speaker, second_speaker)
	inventory.give_items("af_ameba_mica",1)
end
function computer_have()
	return inventory.search("computer",1) ~= false
end
function give_computer(first_speaker, second_speaker)
	inventory.out_items("computer", 1)
end
function take_moonlight(first_speaker, second_speaker)
	inventory.give_items("af_electra_moonlight",1)
end
function take_kristall(first_speaker, second_speaker)
	inventory.give_items("af_cristall",1)
end
function take_sescape_lager_volk_ak(first_speaker, second_speaker)
	inventory.give_items("wpn_ak74u",1)
end
function esc_petruha_toz_have()
	return inventory.search("wpn_toz34",1) ~= false
end
function give_esc_petruha_toz(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "wpn_toz34", "out")
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function give_yan_kruglov_green_art(first_speaker, second_speaker)
	inventory.out_items("af_blood_green", 1)
end
function take_new_decoder(first_speaker, second_speaker)
	inventory.give_items("detector_elite_sak",1)
end
function take_playboy(first_speaker, second_speaker)
	inventory.give_items("playboy",1)
end
function yan_kruglov_green_art_have()
	return inventory.search("af_blood_green",1) ~= false
end
function give_playboy(first_speaker, second_speaker)
	inventory.out_items("playboy", 1)
end
function give_esc_shustryi_medusa(first_speaker, second_speaker)
	inventory.out_items("af_medusa", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function esc_shustryi_medusa_have()
	return inventory.search_af("af_medusa",1) ~= false
end
function gar_dram_novice_mp5_m1_have()
	return inventory.search("wpn_mp5_m1",1) ~= false
end
function give_gar_dram_novice_mp5_m1_good(first_speaker, second_speaker)
	local npc = (first_speaker:id() == Actor:id()) and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "wpn_mp5_m1", "out")
	npc:set_relation(game_object.friend, Actor)
	linspiro.give_treasure(first_speaker, second_speaker)
end
function give_gar_dram_novice_mp5_m1_bad(first_speaker, second_speaker)
	local npc = (first_speaker:id() == Actor:id()) and second_speaker or first_speaker
	dialogs.relocate_item_section(npc, "wpn_mp5_m1", "out")
end
function gar_dram_novice_burer_hand_have()
	return inventory.search("mutant_burer_hand",1,true) ~= false
end
function give_gar_dram_novice_burer_hand(first_speaker, second_speaker)
	inventory.out_items("mutant_burer_hand", 1, true)
end
function gar_hellcar_outfit_have()
	return inventory.search("stalker_outfit_m3",1) ~= false
end
function give_gar_hellcar_outfit(first_speaker, second_speaker)
	inventory.out_items("stalker_outfit_m3", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
function agr_krot_PDA_have()
	return inventory.search("agroprom_pda",1) ~= false
end
function give_agr_krot_PDA(first_speaker, second_speaker)
	inventory.out_items("agroprom_pda", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_dolg_flesh_eye_have()
	return inventory.search("mutant_flesh_eye",4,true) ~= false
end

function give_gar_dolg_flesh_eye(first_speaker, second_speaker)
	inventory.out_items("mutant_flesh_eye",4,true)
	dialogs.relocate_item_section(first_speaker, "wpn_m1891_30_scope", "in")
	dialogs.relocate_item_section(first_speaker, "ammo_7.62x54_7h14", "in")
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_dolg_krovosos_jaw_have()
	return inventory.search("mutant_krovosos_jaw",3,true) ~= false
end

function give_gar_dolg_krovosos_jaw(first_speaker, second_speaker)
	inventory.out_items("mutant_krovosos_jaw",3,true)
end

function gar_dolg_psevdodog_tail_have()
	return inventory.search("mutant_psevdodog_tail",5,true) ~= false
end

function give_gar_dolg_psevdodog_tail(first_speaker, second_speaker)
	inventory.out_items("mutant_psevdodog_tail",5,true)
	dialogs.relocate_item_section(first_speaker, "af_babka_3", "in")
end

function bar_dolg_base_guard_art_have()
	return inventory.search("af_vyvert_green",1) ~= false
end

function give_bar_dolg_base_guard_art(first_speaker, second_speaker)
	inventory.out_items("af_vyvert_green",1)
	dialogs.relocate_item_section(first_speaker, "af_spirit_4", "in")
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function esc_bridge_vodka_have()
	return inventory.search("vodka",10) ~= false
end

function give_esc_bridge_vodka(first_speaker, second_speaker)
	inventory.out_items("vodka",10)
	local del = xr_logic.pstor_retrieve(Actor, "kuzvodka", 0, true)
--	log("give_esc_bridge_vodka: delete variable 'kuzvodka' %d", del)
end
function give_esc_bridge_ammo(first_speaker, second_speaker)
--	dialogs.relocate_item_section(first_speaker, "ammo_5.45x39_ap", "in")
	inventory.give_items("ammo_5.45x39_ap",3)
end
function esc_fox_medkit_have()
	return inventory.search("medkit",10) ~= false
end
function give_esc_fox_medkit(first_speaker, second_speaker)
	inventory.out_items("medkit",10)
end
----------------------------**********************************43
-- Akill begin
local skryga_flash={
    {position={x=-155.30387084961,y=2.5851620388031,z=-147.30797119141},gv=668,lv=82011},
    {position={x=41.594230651855,y=4.7696099281311,z=-83.579383850098},gv=1100,lv=228080},
    {position={x=-2.8137996196747,y=-4.932149887085,z=191.28129577637},gv=2195,lv=97948}
}
function take_mil_Svoboda_trader_ammo(actor,npc,p1,p2)
    local a = skryga_flash[math.random(table.getn(skryga_flash))]
    local obj = AI:create_no_ai("pda_flash", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
end
function give_mil_Svoboda_trader_ammo()
	inventory.out_items("flash_pda", 1)
	local obj
	for a=1,65535,1 do
	obj=AI:object(a)
	if obj and string.find(obj:name(),"pda_flash") then
	AI:release(obj,true)
	return
	end
	end
end
function mil_Svoboda_trader_ammo_have_all()
	return
		inventory.search("flash_pda",1)
end
function mil_Svoboda_trader_ammo_have()
	if inventory.search("flash_pda",1) then
		Actor:give_info_portion("mil_Svoboda_trader_ammo_have")
		return true
	else
		return false
	end
end
-- Akill end
----------------------------**********************************45
function give_ratcatcher_food(first_speaker, second_speaker)
	inventory.out_items("bread",20)
	inventory.out_items("conserva",20)
	inventory.out_items("kolbasa",20)
	inventory.out_items("vodka",5)
	second_speaker:set_relation(game_object.friend, first_speaker)
end

function give_mil_Svoboda_trader_plan(first_speaker, second_speaker)
	inventory.out_items("sak_plan", 1)
end

function ratcatcher_food_have()
  	return inventory.search("bread",20) ~= false and inventory.search("conserva",20) ~= false and inventory.search("vodka",5) ~= false and inventory.search("kolbasa",20) ~= false
end
function tushkano_have()
  	return inventory.search("mutant_face_tushkano",10,true) ~= false and inventory.search("vodka",10) ~= false
end
function give_tushkano(first_speaker, second_speaker)
	inventory.out_items("mutant_face_tushkano",10,true)
	inventory.out_items("vodka",10)
end
function mil_Svoboda_trader_plan_have()
  	return inventory.search("sak_plan",1) ~= false
end
--------------------**********************************************41
function mil_Svoboda_trader_outfit_have()
	return inventory.search("soldier_outfit",2) ~= false
end

function give_mil_Svoboda_trader_outfit(first_speaker, second_speaker)
inventory.out_items("soldier_outfit", 1)
	
end
-------------------**********************************************42
function take_val_pula_ammo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_01", "in")
end

function give_gar_hellcar_ammo(first_speaker, second_speaker)
	inventory.out_items("inventory_sakbox_01", 1)
end

function val_pula_ammo_have()
  	return inventory.search("inventory_sakbox_01",1) ~= false
end

-------------------**********************************************83
function give_val_pula_boar_leg(first_speaker, second_speaker)
	inventory.out_items("mutant_boar_leg",8)
	inventory.out_items("vodka",8)
	dialogs.relocate_item_section(first_speaker, "af_dummy_pellicle_red", "in")
end

function val_pula_boar_leg_have()
  	return inventory.search("mutant_boar_leg",8) ~= false and inventory.search("vodka",8) ~= false
end

-------------------**********************************************84
function give_ratcatcher_order(first_speaker, second_speaker)
	inventory.out_items("rad_document7",1)
	dialogs.relocate_item_section(first_speaker, "af_dummy_battery_red", "in")
end

function ratcatcher_order_have()
  	return inventory.search("rad_document7",1) ~= false
end
-------------------**********************************************46

function val_escort_PDA_have()
	return inventory.search("und_pda",1) ~= false
end

function give_val_escort_PDA(first_speaker, second_speaker)
	inventory.out_items("und_pda",1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
-------------------**********************************************35

function bar_dolg_petrenko_gaussgan_have()
	return inventory.search("wpn_gungauss",1) ~= false
end

function give_bar_dolg_petrenko_gaussgan(first_speaker, second_speaker)
	inventory.out_items("wpn_gungauss",1)
	second_speaker:set_relation(game_object.friend, first_speaker)
end
-------------------**********************************************55
-- Akill begin
function bar_dolg_petrenko_electra_flash_have(task, info)
     if Actor:has_info("petrenko_foto_embrion1") and 
	Actor:has_info("petrenko_foto_embrion2") then
		return Actor:give_info_portion("bar_dolg_petrenko_electra_flash_have")
     end
		return false
end
-- Akill end
----------------------------**********************************66
function take_bar_dolg_petrenko_exo(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end

function give_yan_scientist_exo(first_speaker, second_speaker)
	inventory.out_items("inventory_sakbox_05", 1)
	inventory.give_items("exo_outfit",2)
--	dialogs.relocate_item_section(first_speaker, "exo_outfit", "in")
--	dialogs.relocate_item_section(first_speaker, "exo_outfit", "in")
end

function give_bar_dolg_petrenko_exo(first_speaker, second_speaker)
	inventory.out_items("exo_outfit",2)--
end

function yan_scientist_exo_have()
  	return inventory.search("inventory_sakbox_05",1) ~= false
end

function bar_dolg_petrenko_exo_have()
  	return inventory.search("exo_outfit",2) ~= false
end
----------------------------**********************************52
function take_sak_repair_box(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_05", "in")
end

function give_esc_trader_sak_repair(first_speaker, second_speaker)
	inventory.out_items("inventory_sakbox_05", 1)
	dialogs.relocate_item_section(first_speaker, "inventory_sakbox_02", "in")
end

function give_sak_repair_box(first_speaker, second_speaker)
	inventory.out_items("inventory_sakbox_02", 1)
	dialogs.relocate_item_section(first_speaker, "strelok_outfit", "in")
end

function esc_trader_repair_box_have()
  	return inventory.search("inventory_sakbox_05",1) ~= false
end

function sak_repair_box_have()
  	return inventory.search("inventory_sakbox_02",1) ~= false
end
-------------------**********************************************63
function sak_find_seif_have()
	return inventory.search("inventory_sakbox_03",1) ~= false
end

function give_sak_find_seif(first_speaker, second_speaker)
	sak.give_seif("inventory_sakbox_03")
end
-------------------**********************************************56
function sak_gold_fish_have()
	return inventory.search_af("af_gold_fish",1) ~= false
end

function give_sak_gold_fish(first_speaker, second_speaker)
	inventory.out_items("af_gold_fish", 1)
end
-------------------**********************************************65
-- Akill begin
function take_sak_reward_outfit(actor,npc,p1,p2)
	local sak_flash={
		{position={x=113.71061706543,y=-4.2031671047211,z=15.797422409058},gv=1239,lv=33617},
		{position={x=131.71946716309,y=-4.577322435379,z=21.592748641968},gv=1238,lv=36238},
		{position={x=226.57833862305,y=-4.6954984664917,z=132.79847717285},gv=1198,lv=57240},
		{position={x=112.56023406982,y=0.65228396654129,z=73.371795654297},gv=1225,lv=33195},
		{position={x=154.7790222168,y=0.98368340730667,z=70.509704589844},gv=1180,lv=41037}
	}
    local a = sak_flash[math.random(table.getn(sak_flash))]
    local obj = AI:create_no_ai("disk_flash", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
end
function give_sak_reward_outfit()
	inventory.out_items("flash_disk", 1)
	local obj
	for a=1,65535,1 do
	obj=AI:object(a)
	if obj and string.find(obj:name(),"disk_flash") then
	AI:release(obj,true)
	return
	end
	end
end
function sak_reward_outfit_have_all()
	return
		inventory.search("flash_disk",1)
end
function sak_reward_outfit_have()
	if inventory.search("flash_disk",1) then
		Actor:give_info_portion("sak_reward_outfit_have")
		return true
	else
		return false
	end
end
-- Akill end
function sak_have_start()
	if Actor:has_info("sak_gold_fish_start") or Actor:has_info("sak_find_seif_start") or Actor:has_info("sak_repair_box_start") or Actor:has_info("sak_reward_outfit_start") then
  	return true
	else
	return false
	end 
end
function sak_have_have()
	if Actor:has_info("sak_gold_fish_have") or Actor:has_info("sak_find_seif_have") or Actor:has_info("sak_repair_box_have") or Actor:has_info("sak_reward_outfit_have") then
  	return true
	else
	return false
	end 
end
function yan_scientist_books_have()
	return inventory.search("sak_book1",1) ~= false and inventory.search("sak_book2",1) ~= false and inventory.search("sak_book3",1) ~= false
end
function give_yan_scientist_books(first_speaker, second_speaker)
	inventory.out_items("sak_book1",1)
	inventory.out_items("sak_book2",1)
	inventory.out_items("sak_book3",1)
end
function yan_kruglov_decoder_have()
	return inventory.search("decoder1",1) ~= false
end
function give_yan_kruglov_decoder(first_speaker, second_speaker)
	inventory.out_items("decoder1",1)
end
-- Akill begin
function take_yan_kruglov_art(actor,npc,p1,p2)
	local kruglov_flash={
		{position={x=-140.48341369629,y=-28.670255661011,z=-351.92028808594},gv=19,lv=111255},
		{position={x=179.60064697266,y=-6.1568055152893,z=-13.855489730835},gv=2835,lv=633171},
		{position={x=-362.158203125,y=-12.973848342896,z=393.68969726563},gv=1848,lv=3385}
	}
    local a = kruglov_flash[math.random(table.getn(kruglov_flash))]
    local obj = AI:create_no_ai("notebook_flash", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
end
function give_yan_kruglov_art()
	inventory.out_items("flash_notebook", 1)
	local obj
	for a=1,65535,1 do
	obj=AI:object(a)
	if obj and string.find(obj:name(),"notebook_flash") then
	AI:release(obj,true)
	return
	end
	end
end
function yan_kruglov_art_have_all()
	return
		inventory.search("flash_notebook",1)
end
function yan_kruglov_art_have()
	if inventory.search("flash_notebook",1) then
		Actor:give_info_portion("yan_kruglov_art_have")
		return true
	else
		return false
	end
end
function take_bar_ivancov_rg6(actor,npc,p1,p2)
	local ivancov_flash={
		{position={x=-179.88851928711,y=4.7785663604736,z=-276.82165527344},gv=3364,lv=50992},
		{position={x=-164.2699432373,y=2.7191691398621,z=-279.33911132813},gv=3372,lv=61216},
		{position={x=-26.867282867432,y=-4.113676071167,z=-18.920783996582},gv=1593,lv=281961},
		{position={x=-17.256162643433,y=-6.3255214691162,z=-28.58948135376},gv=1593,lv=288143},
		{position={x=30.762537002563,y=-11.717179298401,z=-273.17190551758},gv=1480,lv=54304}
	}
    local a = ivancov_flash[math.random(table.getn(ivancov_flash))]
    local obj = AI:create_no_ai("computer_flash", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
end
function give_bar_ivancov_rg6(first_speaker, second_speaker)
	inventory.out_items("flash_computer", 1)
	second_speaker:set_relation(game_object.friend, first_speaker)
	local obj
	for a=1,65535,1 do
	obj=AI:object(a)
	if obj and string.find(obj:name(),"computer_flash") then
	AI:release(obj,true)
	return
	end
	end
end
function bar_ivancov_rg6_have_all()
	return
		inventory.search("flash_computer",1)
end
function bar_ivancov_rg6_have()
	if inventory.search("flash_computer",1) then
		Actor:give_info_portion("bar_ivancov_rg6_have")
		return true
	else
		return false
	end
end
-- Akill end
function take_blockpost_case(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "quest_case_01", "in")
end
function give_blockpost_case(first_speaker, second_speaker)
	inventory.out_items("quest_case_01", 1)
end
function blockpost_case_have()
  	return inventory.search("quest_case_01",1) ~= false
end
-- Akill begin
function esc_find_groza_have_all()
	return inventory.search("wpn_val",1,true)
		and inventory.search("wpn_addon_kobra",1)
		and inventory.search("af_fosfor",10)
end
function esc_find_groza_have()
	if esc_find_groza_have_all() then
		Actor:give_info_portion("esc_find_groza_have")
		return true
	else
		return false
	end
end
function give_find_groza(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "wpn_val", "out")
	second_speaker:set_relation(game_object.friend, first_speaker)
	inventory.out_items("wpn_addon_kobra",1)
	inventory.out_items("af_fosfor",10)
end
-- Akill end
function give_find_af_dummy_glassbeads(first_speaker, second_speaker)
	inventory.out_items("af_babka_3", 1)
end
function yan_scientist_find_af_dummy_glassbeads_have()
  	return inventory.search_af("af_babka_3",1) ~= false
end
function give_find_dinamit(first_speaker, second_speaker)
	inventory.out_items("dynamite", 1)	
end
function mil_lukash_find_dinamit_have()
  	return inventory.search("dynamite",1) ~= false
end
function give_find_case(first_speaker, second_speaker)
	inventory.out_items("quest_case_06", 1)	
end
function yan_scientist_find_case_have()
  	return inventory.search("quest_case_06",1) ~= false
end
function give_find_2case(first_speaker, second_speaker)
	inventory.out_items("quest_case_05", 1)	
end
function bar_dolg_leader_find_case_have()
  	return inventory.search("quest_case_05",1) ~= false
end
local armor_profit_margin = 5
function sak_repair_precond(trader, actor)
	local item_in_slot_6 = Actor:item_in_slot(inventory_slots.OUTFIT)
	if item_in_slot_6 ~= nil and 1 > item_in_slot_6:condition() + 0.01 then 
		 return true
	else return false
	end	 
end
function sak_check_money_s6(trader, actor)
	local item_in_slot = Actor:item_in_slot(inventory_slots.OUTFIT)
	if item_in_slot ~= nil then 
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		if item_repair_cost > 0 and Actor:money() >= item_repair_cost and 1 > item_in_slot:condition() then
			return true
		end 
	end
	return false
end
function sak_repiar_armor_s6(trader, actor)
	local item_in_slot = Actor:item_in_slot(inventory_slots.OUTFIT)
	if item_in_slot ~= nil then
		local item_repair_cost = math.floor( (1-item_in_slot:condition()) * item_in_slot:cost() * armor_profit_margin )
		amk_mod.repair_armor(1)
		dialogs.relocate_money(actor, item_repair_cost, 1)
	end	
end
function repair_costs(first_speaker, second_speaker)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
	
	local item_name_and_price = ""
	local item_repair_cost = 0
	if Actor ~= nil then 
		local item_in_slot_6 = Actor:item_in_slot(inventory_slots.OUTFIT)
		if item_in_slot_6 ~= nil then
			item_repair_cost = math.floor( (1-item_in_slot_6:condition()) * item_in_slot_6:cost() * armor_profit_margin )
			if item_repair_cost > 0 then
				item_name_and_price = game.translate_string("list_trader_repair_2").." %c[255,238,155,23]"..item_repair_cost.." рублей%c[default]"
				Actor:give_talk_message(item_name_and_price, task_texture, task_rect, "iconed_trade_info")
			end
		end
	end
end

function actor_has_money_30000()
  return Actor:money()>=30000
end

function actor_has_money_40000()
  return Actor:money()>=50000
end

function actor_has_money_100000()
  return Actor:money()>=100000
end
function actor_has_money_50000()
  return Actor:money()>=50000
end
function actor_has_money_75000()
  return Actor:money()>=75000
end
function actor_has_money_150000()
  return Actor:money()>=150000
end
function actor_has_money_400000()
  return Actor:money()>=400000
end
function give_money_100000(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,100000,1)
end

function give_money_150000(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,150000,1)
end

function give_money_400000(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,400000,1)
end

function give_money_30000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,30000,1)
end

function give_money_50000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,50000,1)
end

function give_money_75000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,75000,1)
end

function give_money_40000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,50000,1)
end

function relocate_money(victim, num, type)
	if Actor and victim then
		if type == "in" then
			Actor:give_money(num)
			game_stats.money_quest_update (num) 
		elseif type == 1 then
			Actor:give_money(-num)
			game_stats.money_quest_update (-num) 
		end
		news_manager.relocate_money(Actor, type, num)
	end
end

function soul_have()
	return inventory.search_af("af_soul",1) ~= false
end
function soul3_have()
	return inventory.search_af("af_soul",3) ~= false
end
function kristall_have()
	return inventory.search_af("af_cristall",1) ~= false
end
function kristall2_have()
	return inventory.search_af("af_cristall",2) ~= false
end
function moonlight_have()
	return inventory.search_af("af_electra_moonlight",1) ~= false
end
function mica2_have()
	return inventory.search_af("af_ameba_mica",2) ~= false
end
function mica3_have()
	return inventory.search_af("af_ameba_mica",3) ~= false
end
function mica_have()
	return inventory.search_af("af_ameba_mica",1) ~= false
end
function actor_2500_have()
  return Actor:money()>=2500
end
function actor_9000_have()
  return Actor:money()>=9000
end
function actor_20000_have()
  return Actor:money()>=20000
end
function actor_5000_have()
  return Actor:money()>=5000
end
function actor_15000_have()
  return Actor:money()>=15000
end
function actor_10000_have()
  return Actor:money()>=10000
end
function actor_30000_have()
  return Actor:money()>=30000
end
function give_soul(first_speaker, second_speaker)
	inventory.out_items("af_soul", 1)
end
function give_3soul(first_speaker, second_speaker)
	inventory.out_items("af_soul", 3)
end
function give_kristall(first_speaker, second_speaker)
	inventory.out_items("af_cristall", 1)
end
function give_2kristall(first_speaker, second_speaker)
	inventory.out_items("af_cristall", 2)
end
function give_moonlight(first_speaker, second_speaker)
	inventory.out_items("af_electra_moonlight", 1)
end
function give_mica(first_speaker, second_speaker)
	inventory.out_items("af_ameba_mica", 1)
end
function give_2500_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,2500,1)
end
function give_10000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,10000,1)
end
function give_15000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,15000,1)
end
function give_5000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,5000,1)
end
function give_20000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,20000,1)
end
function give_9000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,9000,1)
end
function give_30000_money(t1,t2) 
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  relocate_money(npc,30000,1)
end

-- Лимит диалогов. Сидор 3 раза
function trade_sidor_not_enough()
	return not dialogs.dialog_is_enough("trade_sidor_enough",3)
end
function trade_sidor_enough()
	return dialogs.dialog_is_enough("trade_sidor_enough",3)
end
function trade_sidor_count()
	return dialogs.dialog_count("trade_sidor_enough",3)
end

-- Лимит диалогов. Бармен 5 раз
function trade_barman_not_enough()
	return not dialogs.dialog_is_enough("trade_barman_enough",5)
end
function trade_barman_enough()
	return dialogs.dialog_is_enough("trade_barman_enough",5)
end
function trade_barman_count()
	return dialogs.dialog_count("trade_barman_enough",5)
end

-- Лимит диалогов. Петренко 4 раза
function trade_petrenko_not_enough()
	return not dialogs.dialog_is_enough("trade_petrenko_enough",4)
end
function trade_petrenko_enough()
	return dialogs.dialog_is_enough("trade_petrenko_enough",4)
end
function trade_petrenko_count()
	return dialogs.dialog_count("trade_petrenko_enough",4)
end

-- Лимит диалогов. Сахаров 5 раз
function trade_sakharov_not_enough()
	return not dialogs.dialog_is_enough("trade_sakharov_enough",5)
end
function trade_sakharov_enough()
	return dialogs.dialog_is_enough("trade_sakharov_enough",5)
end
function trade_sakharov_count()
	return dialogs.dialog_count("trade_sakharov_enough",5)
end

-- Лимит диалогов. Сяк 5 раз
function trade_sak_not_enough()
	return not dialogs.dialog_is_enough("trade_sak_enough",5)
end
function trade_sak_enough()
	return dialogs.dialog_is_enough("trade_sak_enough",5)
end
function trade_sak_count()
	return dialogs.dialog_count("trade_sak_enough",5)
end

-- Лимит диалогов. Доктор 4 раза
function trade_doktor_not_enough()
	return not dialogs.dialog_is_enough("trade_doktor_enough",4)
end
function trade_doktor_enough()
	return dialogs.dialog_is_enough("trade_doktor_enough",4)
end
function trade_doktor_count()
	return dialogs.dialog_count("trade_doktor_enough",4)
end

-- Лимит диалогов. Скряга 3 раза
function trade_skraga_not_enough()
	return not dialogs.dialog_is_enough("trade_skraga_enough",3)
end
function trade_skraga_enough()
	return dialogs.dialog_is_enough("trade_skraga_enough",3)
end
function trade_skraga_count()
	return dialogs.dialog_count("trade_skraga_enough",3)
end

-- Лимит диалогов. Жила 3 раза
function trade_jlob_not_enough()
	return not dialogs.dialog_is_enough("trade_jlob_enough",3)
end
function trade_jlob_enough()
	return dialogs.dialog_is_enough("trade_jlob_enough",3)
end
function trade_jlob_count()
	return dialogs.dialog_count("trade_jlob_enough",3)
end

-- Лимит диалогов. Кузнецов 4 раза
function trade_kuznezov_not_enough()
	return not dialogs.dialog_is_enough("trade_kuznezov_enough",4)
end
function trade_kuznezov_enough()
	return dialogs.dialog_is_enough("trade_kuznezov_enough",4)
end
function trade_kuznezov_count()
	return dialogs.dialog_count("trade_kuznezov_enough",4)
end

-- Лимит диалогов. Шерстюк 3 раза
function trade_sherstyk_not_enough()
	return not dialogs.dialog_is_enough("trade_sherstyk_enough",3)
end
function trade_sherstyk_enough()
	return dialogs.dialog_is_enough("trade_sherstyk_enough",3)
end
function trade_sherstyk_count()
	return dialogs.dialog_count("trade_sherstyk_enough",3)
end

-- Лимит диалогов. Макс 4 раза
function trade_maks_not_enough()
	return not dialogs.dialog_is_enough("trade_maks_enough",4)
end
function trade_maks_enough()
	return dialogs.dialog_is_enough("trade_maks_enough",4)
end
function trade_maks_count()
	return dialogs.dialog_count("trade_maks_enough",4)
end

-- Лимит диалогов. Дэн 5 раз
function trade_dan_not_enough()
	return not dialogs.dialog_is_enough("trade_dan_enough",5)
end
function trade_dan_enough()
	return dialogs.dialog_is_enough("trade_dan_enough",5)
end
function trade_dan_count()
	return dialogs.dialog_count("trade_dan_enough",5)
end
