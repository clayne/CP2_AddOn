-- -*- mode: lua; encoding: windows-1251 -*-
---------------------------------------------------------------------
-- Привет от Сяка 
---------------------------------------------------------------------

local math_random = math.random
local math_atan2 = math.atan2
local math_sin = math.sin
local math_cos = math.cos
local string_find = string.find
local string_format = string.format
local string_gsub = string.gsub

function add_new_escape_100()
level_changers.create_allspawn_lc("lc_agroprom_to_escape","info_way100a")
end
function add_new_agroprom_101()
level_changers.create_allspawn_lc("lc_escape_to_agroprom","info_way101a")
end
function add_new_yantar_102()
level_changers.create_allspawn_lc("lc_agroprom_to_yantar","info_way102a")
end
function add_new_agroprom_103()
level_changers.create_allspawn_lc("lc_yantar_to_agroprom","info_way103a")
end
function add_new_mil_104()
level_changers.create_allspawn_lc("lc_rostok_to_military","info_way104a")
end
function add_new_rostok_105()
level_changers.create_allspawn_lc("lc_military_to_rostok","info_way105a")
end
function add_new_radar_106()
level_changers.create_allspawn_lc("lc_yantar_to_radar","info_way106a")
end
function add_new_darkvalley_107()
level_changers.create_allspawn_lc("lc_radar_to_darkvalley","info_way107a")
end
function add_new_yantar_108()
level_changers.create_allspawn_lc("lc_radar_to_yantar","info_way108a")
end
function add_new_radar_109()
level_changers.create_allspawn_lc("lc_darkvalley_to_radar","info_way109a")
end
function add_new_mil_110()
level_changers.create_allspawn_lc("lc_darkvalley_to_military","info_way110a")
end
function add_new_darkvalley_111()
level_changers.create_allspawn_lc("lc_military_to_darkvalley","info_way111a")
end
function add_new_military_01()
level_changers.create_allspawn_lc("lc_radar_to_military","info_way112a")
end
function add_new_military()
level_changers.create_allspawn_lc("lc_bar_to_military","info_way113a")
end
--' болото-старая деревня
function add_new_rostok()
level_changers.create_allspawn_lc("lc_marsh_to_lost_village","info_way114a")
end
function add_new_to_garbage()
level_changers.create_allspawn_lc("lc_peshera_to_garbage","info_way_arhara_peshera_cvalka")
end
function add_new_to_agro()
level_changers.create_allspawn_lc("lc_peshera_to_agroprom","info_way_arhara_peshera_agro")
end
--' открывается сразу 2 перехода
function add_new_to_peshera1()
level_changers.create_allspawn_lc("lc_garbage_to_peshera","info_way_arhara_cvalka_peshera")
level_changers.create_allspawn_lc("lc_agroprom_to_peshera","info_way_arhara_agro_peshera")
end
--' кордон-болота
function add_new_to_peshera2()
level_changers.create_allspawn_lc("lc_escape_to_marsh","info_way_arhara_kordon_boloto")
end
function add_new_to_les()
level_changers.create_allspawn_lc("lc_darkvalley_to_puzir","info_way_arhara_td_les")
end
function add_new_to_peshera3()
level_changers.create_allspawn_lc("lc_labirint_to_peshera","info_way_arhara_labirint_peshera")
end
function add_new_to_labirint()
level_changers.create_allspawn_lc("lc_peshera_to_labirint","info_way_arhara_peshera_labirint")
end
function add_new_labirint_to_yantar()
level_changers.create_allspawn_lc("lc_labirint_to_yantar","info_way_arhara_labirint_yantar")
end
function add_new_labirint_to_earth()
level_changers.create_allspawn_lc("lc_labirint_to_aver","info_way_arhara_labirint_earth")
end
function add_new_yantar_to_labirint()
level_changers.create_allspawn_lc("lc_yantar_to_labirint","info_way_arhara_yantar_labirint")
end
function add_new_atp_to_pripyat()
level_changers.create_allspawn_lc("lc_atp_to_pripyat","info_way_arhara_atp_pripyat")
end
function add_new_atp_to_military()
level_changers.create_allspawn_lc("lc_atp_to_military","info_way_arhara_atp_military")
end
function add_new_atp_to_kordon()
level_changers.create_allspawn_lc("lc_atp_to_escape","info_way_arhara_atp_kordon")
end
function add_new_atp_to_svalka()
level_changers.create_allspawn_lc("lc_atp_to_garbage","info_way_arhara_atp_svalka")
end
--' Припять-Старая Деревня
function add_new_military_to_earth()
level_changers.create_allspawn_lc("lc_pripyat_to_lost_village","info_way_arhara_pripyt_village")
end
--' открывается сразу 2 перехода
function add_new_td_to_earth()
level_changers.create_allspawn_lc("lc_darkvalley_to_aver","info_way_arhara_td_earth")
level_changers.create_allspawn_lc("lc_aver_to_darkvalley","info_way_arhara_td_earth")
level_changers.create_allspawn_lc("lc_military_to_aver","info_way_arhara_military_earth")
level_changers.create_allspawn_lc("lc_aver_to_military","info_way_arhara_military_earth")
end
function add_new_svalka_to_earth()
level_changers.create_allspawn_lc("lc_garbage_to_aver","info_way_arhara_svalka_earth")
level_changers.create_allspawn_lc("lc_aver_to_svalka","info_way_arhara_svalka_earth")
end
function add_new_earth_to_labirint()
level_changers.create_allspawn_lc("lc_aver_to_labirint","info_way_arhara_earth_labirint")
end
--' открывается сразу 2 перехода
function add_new_radar_to_warlab()
level_changers.create_allspawn_lc("lc_radar_to_warlab","info_way_arhara_radar_warlab")
level_changers.create_allspawn_lc("lc_warlab_to_brainlab","info_way_arhara_warlab_brainlab")
end
--' х18-Варлаб
function add_new_warlab_to_brainlab()
level_changers.create_allspawn_lc("lc_x18_to_warlab","info_way_arhara_x18_warlab")
end
function add_new_warlab_to_skladu()
level_changers.create_allspawn_lc("lc_warlab_to_military","info_way_arhara_warlab_skladu")
end
function add_new_radar_na_red_forest()
level_changers.create_allspawn_lc("lc_military_to_red_forest","info_way_arhara_radar_forest")
end
function add_new_chaes2_to_atp()
level_changers.create_allspawn_lc("lc_aes2_to_atp","info_way_arhara_chaes2_atp")
end
function add_new_village_to_limansk()
level_changers.create_allspawn_lc("lc_lost_village_to_limansk","info_way_arhara_village_limansk")
end
function add_new_village_to_hospital()
level_changers.create_allspawn_lc("lc_lost_village_to_hospital","info_way_arhara_village_hospital")
end
function add_new_chaes_to_generator()
level_changers.create_allspawn_lc("lc_aes_to_generators","info_way_arhara_chaes_generator")
end
function add_new_hospital_to_agroprom()
level_changers.create_allspawn_lc("lc_hospital_to_agroprom","info_way_arhara_hospital_agroprom")
end
function add_new_agroprom_to_marsh1()
level_changers.create_allspawn_lc("lc_agroprom_to_marsh","info_way_arhara_agroprom_marsh1")
end
function add_new_bar_to_atp()
level_changers.create_allspawn_lc("lc_bar_to_atp","info_way_arhara_bar_atp")
end
function add_new_gener_to_pripyat()
level_changers.create_allspawn_lc("lc_generators_to_pripyat","info_way_arhara_gener_pripyat")
end
function add_new_chaes2_to_chaes()
level_changers.create_allspawn_lc("lc_aes2_to_aes","info_way_arhara_chaes2_chaes")
level_changers.create_allspawn_lc("lc_aes_to_aes2", "perehod_chaes2_na_chaes")
end
function add_new_gener_to_hospital()
level_changers.create_allspawn_lc("lc_generators_to_hospital","info_way_arhara_gener_hospital")
end
function add_new_warlab_to_generators()
level_changers.create_allspawn_lc("lc_warlab_to_generators","info_way_arhara_warlab_generators")
end
function add_new_limansk_to_generators()
level_changers.create_allspawn_lc("lc_limansk_to_generators","info_way_arhara_limansk_generators")
end
function add_new_forest_to_warlab()
level_changers.create_allspawn_lc("lc_red_forest_to_warlab","info_way_arhara_forest_warlab")
end
--' переходы МГ
function add_new_dcity()
level_changers.create_allspawn_lc("lc_dead_city_to_limansk","info_way_arhara_dcity_limansk")
level_changers.create_allspawn_lc("lc_dead_city_to_atp","info_way_arhara_dead_city_atp")
level_changers.create_allspawn_lc("lc_dead_city_to_rostok","info_way_arhara_dcity_rostok")
level_changers.create_allspawn_lc("lc_atp_to_dead_city","info_way_arhara_atp_dead_city")
end
function add_new_dcity_to_zaton()
level_changers.create_allspawn_lc("lc_dead_city_to_zaton","info_way_arhara_dcity_zaton")
end
function add_new_lima_to_dead_city()
level_changers.create_allspawn_lc("lc_limansk_to_dead_city","info_way_arhara_lima_dcity")
end

function add_new_military_false()
	local obj = AI:story_object(story_ids.mil_secret_0012)
	level.map_add_object_spot(obj.id, "level_changer1","На ЧАЭС")
	Actor:give_info_portion("info_way_false")
	level_changers.show_lc_info("Армейские Склады", "ЧАЭС")
end

function out_new_lc(levch,info)
  if not Actor:has_info(info) then
    local objt = AI:story_object(levch)
    if objt then
      AI:release(objt, true)
    end
  end
end
function add_new_item_in(item,sidlh)
local nps = sidlh.id
amk.spawn_item_in_inv(item,nps) 
end

function add_new_lcitem()
	amk.spawn_item("sak_document",vector():set(350,-51.74,-24.45),2031,93051,true) -- документ под трупом ученого в рж лесу
	amk.spawn_item("rad_document6",vector():set(621.95,-42.64,187.38),1910,224619,true) -- дело в кунге у монолитовцув
	amk.spawn_item("amk_zapiska",vector():set(-132.93,11.04,-203.2),629,105467,true) --записка на третьем этаже Агропрома
	amk.spawn_item("sak_document2",vector():set(-80,-1.30,153),163,187916,true) -- документ  под жд насыпью Кордона
	amk.spawn_item("garbage_pda",vector():set(-226,-7.37,-132.36),252,208345,true) -- ПДА в лагере бандитов на свалке
	amk.spawn_item("rad_document6",vector():set(-28.4,-0.26,-173.55),676,211656,true) -- дело в вагончике Агропрома
	amk.spawn_item("rad_pda",vector():set(530.7,-49.41,-241.61),2061,180657,true) -- ПДА в вагончике на Радаре
	amk.spawn_item("rad_document6",vector():set(-139.6,-25.03,-355.6),19,116593,true) -- дело на кордоне
	amk.spawn_item("sak_book4",vector():set(-3.77,-4.25,191.19),2195,97948,true) --книга доктора
	amk.spawn_item("playboy3",vector():set(-212.99,-22.51,-126.06),59,40605,true) 
	amk.spawn_item("playboy2",vector():set(112.87,-1.94,1.6),117,413895,true)
	amk.spawn_item("playboy1",vector():set(138.57,-3.5,22.0),1237,37466,true)
	amk.spawn_item("playboy4",vector():set(-156.23,1.44,-162.05),669,82783,true)
	amk.spawn_item("playboy5",vector():set(-19.52,-3.22,-19.91),1593,287481,true)
	amk.spawn_item("playboy6",vector():set(-52.11,-10.52,35.31),1608,257284,true)
	amk.spawn_item("playboy7",vector():set(41.4,5.45,-84.15),1100,226116,true)
	amk.spawn_item("playboy8",vector():set(-135.57,1.29,-523.72),832,22097,true)
	amk.spawn_item("playboy9",vector():set(-6.19,-4.21,201.42),2195,94368,true)
	amk.spawn_item("playboy10",vector():set(306.45,-38.06,-23.05),1930,69058,true)
	amk.spawn_item("playboy11",vector():set(30.92,-2.46,-41.34),1997,20510,true)
	amk.spawn_item("playboy12",vector():set(139.89819335938,-6.5692377090454,-72.478149414063),2830,577165,true)
	amk.spawn_item("playboy13",vector():set(292.20834350586,13.639252662659,-155.84591674805),3531,325954,true)
--	amk.spawn_item("m_inventory_seif",vector():set(306.47,-39.39,-26.22),1930,69058)
	for a=1000,20000,1 do
		local obj=AI:object(a)
		if obj and ( (string_find(obj:name(),"af_") and not string_find(obj:name(),"esc_af_")  and not string_find(obj:name(),"pri_af_" ) and not string_find(obj:name(),"af_dumm")) ) then	-- or string_find(obj:name(),"esc_wpn")) then
			AI:release(obj,true)
		end
	end
end
function add_ak47()
amk.spawn_item("wpn_ak47",vector():set(108.5,7.74,-9.07),987,304788)
end
function add_doktor_book()
amk.spawn_item("sak_book4",vector():set(-3.49,-4.26,191.34),2195,96166,true)
end
function add_notebook()
amk.spawn_item("notebook",vector():set(23.87,-5.65,-18.38),1140,6287,true) 
end
-- Akill begin Изменены к-ты спавна дипломата + монстры
function add_diplomat()
amk.spawn_item("diplomat",vector():set(-100.60708618164,22.614040374756,-24.21527671814),1529,505,true)
akill.x16_mutant_spawn()
end
-- Akill end
function add_computer()
amk.spawn_item("computer",vector():set(-114.96,-2.23,8.18),2248,8511,true) 
end
function add_new_103item()
amk.spawn_item("quest_case_06",vector():set(-196.5,2.48,92.88),678,40284,true) --кейс в кунге дезертира
end
function add_sak_plan()
amk.spawn_item("sak_plan",vector():set(-213.13,2.96,92.58),535,22245,true) -- мешок плана в кунге дезертира 
end
function add_krot_pda()
amk.spawn_item("agroprom_pda",vector():set(254.866424,-0.201872,79.064804),498,428654,true) --ПДА в ЖД тоннеле Агропрома
end
function add_und_pda()
amk.spawn_item("und_pda",vector():set(-45.12,-4.01,-30.08),718,4466,true) --ПДА в подземелье Агропрома
end
function add_seif()
amk.spawn_item("inventory_sakbox_03",vector():set(15.52,-12.43,8.59),1156,5132,true) --Сейф в подземелье X-18
end
function give_seif(obj)
amk.remove_item_from_inventory_by_name(obj,Actor)
amk.spawn_item("m_inventory_seif",vector():set(34.37,-3.37,-37.29),1997,21736,true)  --передача сейфа
end
-- Akill begin Изменены к-ты спавна декодера + монстры
function add_decoder()
amk.spawn_item("decoder1",vector():set(-60.656967163086,19.434055328369,-16.232734680176),1530,1661,true) --декодер в  X-16 возле главного пульта
akill.x16_mutant_spawn()
end
-- Akill end
function add_gauss()
amk.spawn_item("wpn_gungauss",vector():set(-126.11,0.91,-533.55),836,31356,true) --Гаусс-пистолет  в ТД
end
--function add_medusa_green()
--amk.spawn_item("af_medusa_green",vector():set(260.59,-9.82,-135),404,373051) --Изумрудная медуза на свалке
--end
function add_medusa_green()
amk.spawn_item("af_medusa_green",vector():set(5.3799324035645,-0.00055783987045288,222.37449645996),2883,192846,true)
end
function add_pellicle_red()
amk.spawn_item("af_dummy_pellicle_red",vector():set(-239.99,4.85,99.93),1362,13956,true) --Изумрудная медуза на Ростке
end
--function add_vyvert_green()
--amk.spawn_item("af_vyvert_green",vector():set(115.13,4.83,-409.26),942,311330) --Изумрудный выверт в ТД
--end
function add_blood_green()
	amk.spawn_item("af_blood_green",vector():set(55.34,1.27,40.89),1511,68094,true) --Изумрудная кровь на Янтаре 
	AI:create("yan_zombied_respawn_1",vector():set(75.406539916992,0.34422329068184,23.229085922241),79415,1512)
	AI:create("yan_zombied_respawn_2",vector():set(41.926971435547,0.037857890129089,20.751808166504),60400,1445)
	AI:create("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	AI:create("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	AI:create("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	AI:create("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	AI:create("spider",vector():set(106.78483581543,-8.8652667999268,-212.50025939941),96215,1472)
	AI:create("m_poltergeist_dd",vector():set(58.236850738525,-0.84842598438263,-20.68497467041),69709,1508)
	AI:create("electro_polter",vector():set(56.451206207275,0.046565324068069,-60.764457702637),68827,1516)
	AI:create("polter_xray",vector():set(27.053871154785,0.084938794374466,-9.735237121582),52620,1507)
	AI:create("controller_flame",vector():set(90.896003723145,0.028825730085373,12.075715065002),87194,1513)
	AI:create("m_controller_act",vector():set(15.076522827148,0.030788093805313,19.65348815918),46805,1445)
	artefact_hunter.add_art_info("af_blood_green")
end
function add_battery_red()
amk.spawn_item("af_dummy_battery_red",vector():set(668.9,-45.79,-39.93),1896,227187,true) --Рубиновая батарейка на Радаре 
end
function add_order()
	local obj = AI:story_object(story_ids.agr_sak_inventory_box)
	AI:create("rad_document7",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	amk.convert_npc[obj.id] = 1
end

function add_two_corpses()
	local obj = amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.84,5.18,-360.68),938,386349)
	local tbl = {}
	tbl.story_id = 48800
	tbl.health = 0
	tbl.upd = { health = 0 }
	netpk:modify( obj,tbl )					

	AI:create("scaintist_docs",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)

	obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(187.66,5.03,-375.97),938,386327)
	tbl.story_id = 48801
	netpk:modify( obj,tbl )

	amk.spawn_item("inventory_sakbox_05",vector():set(176.83,8.37,-375.96),938,377568)
end
function add_scaintist_body()
	local obj=amk.spawn_item("yan_ecolog_respawn_2",vector():set(-46.53,-2.2,-98.36),2258,53082)
	local tbl = {}
	tbl.story_id = 48802
	tbl.health = 0
	tbl.upd = { health = 0 }
	netpk:modify( obj,tbl )
	AI:create("scaintist_pda",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_agroprom_box()
	for a=1000,10000,1 do
	local obj=AI:object(a)
		if (obj and obj.name and obj:name() == "agr_quest_case_02") then
		AI:release(obj, true)
		--dbglog("keis: "..a) ~5665
		end
	end	
	--amk.spawn_item("quest_case_02",vector():set(18.76,-2.23,-219.12),436,259029)
	dialogs.relocate_item_section(Actor, "quest_case_02", "in")
end
-- Akill begin
function add_kontainer()
--	amk.spawn_item("inventory_sakbox_05",vector():set(378,-52,-179.20),2097,101537)
	AI:create_no_ai("inventory_sakbox_05",vector():set(467.15960693359,-48.180206298828,-294.86013793945),155265,2063)
	AI:create("chimera_black",vector():set(486.33248901367,-48.54475402832,-236.83911132813),160400,2058)
	AI:create("zombie_beee",vector():set(544.77508544922,-50.461318969727,-251.75929260254),187962,2114)
	AI:create("zombie_blow",vector():set(545.21411132813,-57.409252166748,-226.63201904297),188356,1873)
	AI:create("zombie_hell",vector():set(568.07763671875,-60.318313598633,-221.79908752441),199631,1873)
	AI:create("bear",vector():set(514.51159667969,-50.558048248291,-283.08618164063),172856,2060)
	AI:create("chimera_weak",vector():set(478.98034667969,-54.138397216797,-254.24066162109),157244,2111)
	AI:create("controller_senator",vector():set(543.19293212891,-53.148582458496,-239.98249816895),187241,2114)
	AI:create("controller_babka",vector():set(563.63739013672,-62.943653106689,-199.03614807129),197039,1884)
end
function agroprom_wpm()
	local obj = AI:story_object(story_ids.agr_sak_inventory_box)
	AI:create("wpn_vintorez_m1",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	AI:create("zasada_tonnel_agro_2",vector():set(-120.86868286133,14.998485565186,-192.318359375),118958,642)
	AI:create("agro_elite_rpg",vector():set(-170.82591247559,5.3163747787476,-182.25466918945),66088,667)
	AI:create("zasada_tonnel_agro_1",vector():set(-121.89569091797,4.9972257614136,-198.87106323242),118189,617)
	AI:create("soldier_mines_regular",vector():set(-196.39508056641,7.3849902153015,-223.58135986328),39867,555)
	AI:create("soldier_mines_veteran",vector():set(-175.36352539063,7.3837895393372,-154.81077575684),61033,560)
	AI:create("soldier_mines_regular",vector():set(-106.75975036621,7.3841366767883,-136.29498291016),132868,696)
	AI:create("soldier_mines_veteran",vector():set(-108.10691833496,7.3828616142273,-207.12539672852),132051,552)
end
function add_books()
amk.spawn_item("sak_book1",vector():set(28.11,-12.07,38.93),1161,6530) 
amk.spawn_item("sak_book2",vector():set(-120.27,21.56,-32.65),1529,165) 
amk.spawn_item("sak_book3",vector():set(0.77,-19.45,24.89),2768,6203) 
end
function add_new_111item()
	AI:create("soldier_mines_veteran",vector():set(69.474830627441,0.55580735206604,25.300632476807),305190,671)
	AI:create("soldier_mines_regular",vector():set(63.35139465332,-0.20042996108532,-0.63388842344284),299977,462)
	AI:create("soldier_mines_veteran",vector():set(9.7593650817871,0.97461330890656,37.45044708252),250081,490)
	local obj = AI:create_no_ai("dynamite",vector():set(54.160469055176,0.78570091724396,23.48705291748),292636,461)
	level.map_add_object_spot_ser(obj.id, "crlc_big", "Возможное местоположение динамита")
end
function dynamite_metka_delete()
	local obj
	for a=1,65534,1 do
	obj=AI:object(a)
	if obj and string.find(obj:name(),"dynamite") then
	level.map_remove_object_spot(obj.id,"crlc_big")
	break
	end
	end
end
function add_new_109item()
	AI:create_no_ai("quest_case_05",vector():set(124.79997253418,2.2573802471161,-263.01544189453),321655,955)
end
-- Akill end
function info_received(text)
	if (not text) or type(text)~="string" then return end
	amk.send_tip(text,"Новый путь!",0,10,"nano")
	if Actor:is_talking() then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_locations", "ui_iconsTotal_locations")
		local news_text = "%c[gray2]Новый путь!\\n%c[white]"..text
		Actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	end
end
--function add_resiver()
--amk.spawn_item("sak_resiver",vector():set(-185.57,-3.58,94.89),338,39411) 
--end
function add_drug()
--amk.spawn_item("dogfrend",vector():set(-6.71,0.41,247.19),258,170000) 
amk.spawn_item("dogfrend",vector():set(80.702026367188,0.60556876659393,163.72595214844),364,249786) 
end
--function add_strelok_pda()
--amk.spawn_item("strelok_pda",vector():set(42.95,61.56,-26.25),2417,6406) 
--end
function info_strelok_pda()
  amk.send_tip("","Сталкер! Остановись!",0,10,"gen_info")
end
function info_artmod()
--  amk.send_tip("","Новый артмод!",0,10,"gen_info")
end
function info_doktor()
  amk.send_tip("","Болотный доктор жив!",0,10,"gen_info")
end
function info_teleport()
  amk.send_tip("","Телепорт готов.",0,10,"gen_info")
end

function make_kill_task_failed(actor,npc,p1,p2) 
  local nid=npc:id()
  if nid==Actor:id() then
    nid=actor:id()
  end
  local targets=task_manager.amk_kill_targets()
  for n,v in pairs(targets) do
    if v.id==nid then
      task_manager.make_task_failed(v.task_id)
    end
  end  
end

function agr_ratcatcher__id()
for a=5000,6000,1 do
		local obj=AI:object(a)
		if (obj and obj.name and obj:name() == "agr_ratcatcher") then
		--dbglog("Entered: "..obj:name().." id "..a.." sid "..obj.m_story_id) -- id~5564
		amk.save_variable("agr_ratcatcher_id", a) 
		end
	end
end

-- список неписей, которых можно воскресить живым сердцем. 
-- ключ - story_id непися
-- _umer = true - у непися есть поршень с приставкой "_umer"
-- info  = дополнительные поршни, которые выдаются при смерти
-- script = функция, которая воскрешает непися при скриптовом спавне
-- при добавлении непися в эту таблицу в info_arhara_way нужно добавить поршень "nu"..story_id, а также в алспауне прописать spawn_story_id, равное story_id
local nepis = {
	-- Кордон
	[story_ids.Escape_tutorial_wounded]		= {_umer = true},		-- Шустрый
	[story_ids.Escape_stalker_from_raid]	= {_umer = true},		-- Лис
	[story_ids.Escape_novice_lager_volk]	= {_umer = true},		-- Волк
	[story_ids.Escape_tolik]				= {_umer = true},		-- Толик
	[story_ids.Escape_bridge_stalkers]		= {_umer = true},		-- Петруха
	[story_ids.esc_lager_leader]			= {_umer = true, info = {"esc_fanat_die"}},		-- Фанат
	[story_ids.esc_kuznetsov]				= {_umer = true},		-- Кузнецов
	[story_ids.escape_provodnik]			= {_umer = true},		-- Проводник
	-- Пещера
	[story_ids.peshera_xabaruch]			= {},					-- Хабарыч
	[story_ids.peshera_stahanov]			= {},					-- Стаханов
	[story_ids.peshera_plennyi]				= {},					-- Фима Уголь
	-- Свалка
	[story_ids.gar_hellcar]					= {_umer = true, info = {"gar_hellcar_death", "sar2_death_14"}},	-- Бес
	[story_ids.gar_dolg_blokpost_commander]	= {_umer = true},		-- Прапор
	[story_ids.amk_artem_kulinar]			= {info = {"death_artem"}},		-- Кулинар
	[story_ids.amk_vitek_voron]				= {info = {"death_voron"}},		-- Ворон
	[story_ids.Garbage_Seriy]				= {info = {"garbage_meetstalker_die", "sar2_death_10"}},	-- Серый
	[story_ids.gar_dm_novice]				= {_umer = true, info = {"gar_dm_novice_dead"}},			-- Юрик
	-- Агропром
	[story_ids.agr_krot]					= {_umer = true, info = {"agr_krot_dead", "sar2_death_19"}},	-- Крот
	[story_ids.agr_ratcatcher]				= {_umer = true, info = {"sar2_death_11"}},		-- Дезертир
	[story_ids.Sherstuk]					= {info = {"sherstuk_enemy"}},				-- Шерстюк
	[story_ids.chuk]						= {info = {"chuk_dead"}},					-- Чук
	[story_ids.gek]							= {info = {"gek_dead"}},					-- Гек
	-- Забытый Лес
	[story_ids.prigorshnya_zl]				= {script = "buusty_dialog.prygorshnya_resurrect"},				-- Пригоршня
	[story_ids.himik_trup]					= {trup = true, script = "buusty_dialog.himik_resurrect"},	-- Химик труп
	[story_ids.himik_zl]					= {script = "buusty_dialog.himik_resurrect"},					-- Химик живой
	-- Темная Долина
	[story_ids.val_escort_captive]			= {_umer = true},		-- Макс Любер
	[story_ids.val_sacrifice_victim]		= {info = {"val_sacrifice_victim_dead"}},	-- пленный долговец в сценке у ямы
	[story_ids.val_prisoner]				= {info = {"val_prisoner_dead"}},		-- пленный долговец в камере в подвале
	[story_ids.val_escort_nap1]				= {_umer = true},		-- Пуля
	[story_ids.val_sos_stalker]				= {info = {"val_sos_dead", "val_sos_got_medkit"}},	-- Мессер
	[story_ids.val_borov]					= {info = {"val_borov_dead"}},	-- Боров
	[story_ids.val_bandit_trader]			= {},					-- Жила
	-- Бар
	[story_ids.bar_dolg_captain_ivancov]	= {_umer = true, info = {"sar2_death_41"}},		-- Иванцов
	[story_ids.bar_dolg_polkovnik_petrenko]	= {_umer = true, info = {"sar2_death_42"}},		-- Петренко
	[story_ids.bar_dolg_general_voronin]	= {_umer = true, info = {"sar2_death_43", "bar_voronin_dead"}},	-- Воронин
	[story_ids.bar_dolg_guard_commander]	= {_umer = true},		-- Пличко
	[story_ids.bar_bar_guard]				= {},					-- Гарик
	[story_ids.bar_bar_osvedomitel]			= {},					-- Осведомитель
	[story_ids.bar_hunter]					= {},					-- Охотник
	[story_ids.bar_drunk_dolg]				= {},					-- Бром (которому ружье принести нужно)
	[story_ids.bar_lisiy]					= {},					-- Лысый
	[story_ids.bar_barin]					= {_umer = true},		-- Барин
	[story_ids.bar_arena_manager]			= {},					-- Арни
	[story_ids.rostok_stalker]				= {},					-- Фримен
	[story_ids.bar_zastava_commander]		= {},					-- Киценко (командир южного блокпоста)
	[story_ids.stalker_green_zahar]			= {},					-- Захар
	-- Дикая Территория
	[story_ids.bar_ecolog_professor]		= {info = {"bar_heli_scene_professor_die", "sar2_death_13"}},	-- Круглов на ДТ
	-- Янтарь
	[story_ids.yan_ecolog_help]				= {info = {"yan_scientist_die"}},	-- Круглов на Янтаре
	[story_ids.yantar_chernomor]			= {info = {"chernomor_umer"}},	-- Черномор вылеченный
	-- Армейские Склады
	[story_ids.Mil_Master_Max]				= {_umer = true},		-- Макс
	[story_ids.Mil_Lukash]					= {_umer = true},		-- Лукаш
	[story_ids.Mil_Cook]					= {_umer = true},		-- Повар
	[story_ids.Mil_Miser]					= {_umer = true},		-- Скряга
--	[story_ids.military_vitamin]			= {},					-- Витамин
	[story_ids.mil_Svoboda_engineer]		= {},					-- Шуруп
	[story_ids.mil_Svoboda_zoneguard]		= {},					-- Альфа 2012 (охранник на входе на базу Свободы)
	[story_ids.Mil_Kap]						= {},					-- Кэп (командир Барьера)
	-- ЧАЭС2
	[story_ids.tm_brother_2chaes]			= {_umer = true, script = "kostya_dialog.tm_brother_2chaes_spawn"},	-- Брат Тени Монолита
	-- Болота
	[story_ids.dyak]						= {info = {"dyak_dead"}},		-- Дьяк
	[story_ids.kalmyak]						= {info = {"kalmyak_dead"}},	-- Калмык
	-- ВП
	[story_ids.akill_npc]					= {info = {"akill_npc_dead"}, script = "akill.akill_npc_spawn"},	-- Акилл
	-- Варлаб
	[story_ids.warlab_solvador2]			= {},					-- Сольвадор
	[story_ids.warlab_sekret_ekolog1]		= {_umer = true}, 		-- Лентяй
	-- НЗ
	[story_ids.land_lazaret_starik]			= {},					-- Старик
	[story_ids.otshelnik]					= {},					-- Отшельник
	-- Генераторы
	[story_ids.zemlyk]						= {_umer = true},		-- Земляк
	[story_ids.andersen]					= {}					-- Андерсен
}
function deadman_to_life(art)
	local obj
	local add_health = Actor.health/2
	local actor_pos = Actor:position()
	local lname = level.name()
	for sid, v in pairs(nepis) do
		obj = AI:story_object(sid)
		if obj and (not obj:alive())
			and object_level_name(obj) == lname
			and obj.position:distance_to(actor_pos) < 2.3
		then

			-- снимаем нужные поршни
			if not v.trup then
				Actor:disable_info_portion("nu"..tostring(sid))
			end
			if v._umer then
				local name = protected_items.get_obj_name(obj)
				Actor:disable_info_portion(name.."_umer")
			end
			if v.info then
				for b = 1, #v.info do 
					Actor:disable_info_portion(v.info[b])
				end
			end

			--  воскрешаем
			level.start_stop_menu(level.main_input_receiver(), true)
			amk_mod.af_flash(art)

			local se_npc
			if v.script then
				se_npc = loadstring("return "..v.script.."()")()
			else
				se_npc = AI:create(AI:spawn_id(sid))
			end
			if se_npc then
				AI:teleport_object(
					"",
					obj.position,
					obj.m_level_vertex_id,
					obj.m_game_vertex_id,
					se_npc.id
				)
				Actor.health = -add_health
				this.set_on_spawn(se_npc, obj, add_health, true)
			end
			return
		end
	end

	-- не сработало, тогда оживим любого ближайшего мёртвого непися
	local trup
	for i, o in pairs(db.creatures) do
		if o and not o:alive() then
			if o:position():distance_to(actor_pos) < 2 then
				trup = o
				break
			end
		end
	end

	if not trup then return end

	local se_npc = AI:object(trup:id())
	if not ( se_npc and GGraph:valid_vertex_id(se_npc.m_game_vertex_id) ) then return end

	level.start_stop_menu(level.main_input_receiver(), true)
	amk_mod.af_flash(art)

	local new_npc
	if is_story_object(trup) and AI:spawn_id(se_npc.m_story_id) ~= 46144 then
		local spawn_id = AI:spawn_id(se_npc.m_story_id)
		log("story_id [%s]: spawn_id found: %s", se_npc.m_story_id, spawn_id)
		new_npc = AI:create(spawn_id)
		AI:teleport_object(
			"",
			se_npc.position,
			se_npc.m_level_vertex_id,
			se_npc.m_game_vertex_id,
			new_npc.id
		)
	else
		log("npc [%s]: spawn_id not found, create section: %s", se_npc:name(), se_npc:section_name())
		new_npc = AI:create(
			se_npc:section_name(),
			se_npc.position,
			se_npc.m_level_vertex_id,
			se_npc.m_game_vertex_id
		)
	end

	Actor.health = -add_health
	this.set_on_spawn(new_npc, se_npc, add_health, false)
end

function convert_npc(npc_id, data)
	local se_npc = AI:object(npc_id)
	if se_npc then
		-- уважуха актёру
		if relation_registry.get_goodwill(npc_id, Actor:id()) < 2500 then
			relation_registry.set_goodwill(npc_id, Actor:id(), 2500)
		end
		netpk:modify(se_npc, data, netpk.fConvert)
	end
end

function set_on_spawn(new_npc, old_npc, add_health, is_questman)
	local data = netpk:get(old_npc)

	local data_new			= {}
	data_new.upd			= {}
	data_new.visual_name	= data.visual_name
	data_new.money			= data.money
	data_new.rank			= data.rank
	data_new.reputation		= data.reputation
	data_new.health			= add_health
	data_new.upd.health		= add_health

	if not is_questman then
		data_new.custom_data		= data.custom_data
		data_new.story_id			= data.story_id
		data_new.spawn_story_id		= data.spawn_story_id
		data_new.community_index	= data.community_index
		data_new.specific_character	= data.specific_character
		data_new.character_profile	= data.character_profile
		data_new.character_name		= data.character_name
		data_new.upd.start_dialog	= data.upd.start_dialog
	end

	start_small_timer(1000, this.convert_npc, new_npc.id, data_new)
	news_manager.send_tip(
		"%c[gray2]ЛОКАЛЬНАЯ СЕТЬ:\\n%c[green]Обнаружен новый сталкер: "..data.character_name..
		". Добавлен в базу данных сети.", 0, "questman_death", 10000
	)

	local seBox = AI:create(
		"inventory_box",
		old_npc.position,
		old_npc.m_level_vertex_id,
		old_npc.m_game_vertex_id
	)

	level.client_spawn_manager():add(seBox.id, 0,
		function(trup_id, boxid, box)
			local se_trup = AI:object(trup_id)
			if se_trup then		-- переносим вещи трупа во временный ящик
				local trup = level.object_by_id(trup_id)
				if trup then
					trup:iterate_inventory(function(dummy, item)
						if item:section() ~= "bolt" then	-- движковый болт пусть удаляется
							trup:transfer_item(item, box)
						end
					end,
					trup)
				end
				AI:release(se_trup, true)
			end
		end,
	old_npc.id)

	start_small_timer(1500, this.transfer_back, new_npc.id, seBox.id)
end

function transfer_back(npcID, boxID)
	local npc = level.object_by_id(npcID)
	local box = level.object_by_id(boxID)
	if not (npc and box) then
		start_small_timer(300, this.transfer_back, npcID, boxID)
		return
	end
	-- очищаем инвентарь непися
	local seItem
	local keep_items = { bolt = true, device_pda = true, device_torch = true }
	npc:iterate_inventory(function(dummy, item)
		if keep_items[item:section()] == nil then
			npc:drop_item(item)
			seItem = AI:object(item:id())
		--	log("found item %s", item:name())
			if seItem then
				AI:release(seItem, true)
			--	log("release")
			end
		end
	end,
	npc)

	-- если при оживлении у нпс были вещи, то возвращаем их
	local n = box:inv_box_count()
	if n > 0 then
		local item
		for i = 0, n-1 do
			item = box:object_from_inv_box(i)
		--	log("return to npc: %s", item:name())
			box:transfer_item(item, npc)
		end
	end

	local se_box = AI:object(boxID)
	if se_box then AI:release(se_box, true) end
end

function nepis_umer()
	local obj
	for sid, v in pairs(nepis) do
		obj = AI:story_object(sid)
		if obj and not obj:alive() then
			if v._umer then
				local name = protected_items.get_obj_name(obj)
				Actor:give_info_portion(name.."_umer")
			end
			
			local nu = "nu"..tostring(sid)
			if ( not v.trup ) and ( not has_alife_info(nu) ) then
				Actor:give_info_portion(nu)
				archievements.send_umer_info(obj)
			end
		end
	end
end

-- проверка для уборщика по списку воскрешаемых ЖС
function can_be_resurrected(obj)
	return nepis[obj.m_story_id] ~= nil
end

-- проверка что все квестовики живы
function all_questmen_alive()
	local obj
	for sid, v in pairs(nepis) do
		if not v.trup then
			obj = AI:story_object(sid)
			if obj and not obj:alive() then
	--			get_console():execute("load ~#I#:"..string.format("Мёртвый квестовик: "..sid))
				return false
			end
		end
	end
	return true
end


function af_zone_off(af)
	local anom=amk_anoms.get_nearest_anomaly(Actor)
	local sid=AI:object(anom)
	level.add_pp_effector("teleport.ppe", 1524, false)
	amk.remove_item(af)
	AI:release(sid,true)
end
function inv_item_cond(item,val)
	local obj=Actor:object(item)
	if obj~=nil then
		obj:set_condition(val)
	end
end

local points = {
	kordon = {
		lname = "l01_escape",
		p = {
			{position={x=-244.69,y=-14.27,z=-16.33},gv=67,lv=12579}, 
			{position={x=107.54,y=-7.14,z=1.09},gv=119,lv=408816}, 
			{position={x=71.48,y=1.92,z=158.79},gv=96,lv=362726}, 
			{position={x=33.69,y=5.02,z=407.89},gv=246,lv=565356}, 
			{position={x=220.57,y=7.62,z=100.55},gv=152,lv=511605} 
		}
	},
	yantar = {
		lname = "l08_yantar",
		p = {
			{position={x=165.06,y=-8.19,z=-103.95},gv=1442,lv=131181}, 
			{position={x=92.58,y=0.02,z=-39.23},gv=1515,lv=87813},
			{position={x=34.48,y=0.04,z=18.19},gv=1445,lv=56341},
			{position={x=24.61,y=0.02,z=-62.60},gv=1505,lv=51069}, 
			{position={x=-60.17,y=-10.21,z=-202.66},gv=1447,lv=17529}
		}
	},
	pripat = {
		lname = "l11_pripyat",
		p = {
			{position={x=49.78,y=-3.6,z=120.99},gv=2166,lv=161768}, 
			{position={x=191.20,y=-2.0,z=219.52},gv=2219,lv=260280}, 
			{position={x=164.51,y=-3.89,z=80.83},gv=2145,lv=250751}, 
			{position={x=-97.65,y=-2.4,z=71.81},gv=2140,lv=18233}, 
			{position={x=116.64,y=-0.61,z=216.98},gv=2163,lv=226288}
		}
	},
	military = {
		lname = "l07_military",
		p = {
			{position={x=81.65,y=-12.57,z=60.67},gv=1558,lv=379105}, 
			{position={x=-35.96,y=-21.29,z=375.80},gv=1821,lv=272475}, 
			{position={x=-264.86,y=-22.6,z=275.85},gv=1797,lv=72698},
			{position={x=-340.59,y=-13.62,z=388.84},gv=1847,lv=12469}
		}
	},
	stancia = {
		lname = "l12_stancia",
		p = {
			{position={x=374.82,y=0,z=33.345},gv=2384,lv=161393}
		}
	}
}

local out_points = {
	kordon_sak	= { position = { x = -210,   y = -20.53, z = -145.78 }, gv = 61,   lv = 43273  },
	kordon		= { position = { x = 301.11, y = 13.31,  z = 276.43  }, gv = 246,  lv = 565356 },
	yantar		= { position = { x = -60.78, y = -13.02, z = -253.92 }, gv = 1454, lv = 17204  },
	pripat		= { position = { x = 52.17,  y = -3.5,   z = 120.94  }, gv = 2166, lv = 164012 },
	military	= { position = { x = -94.71, y = -20.55, z = 229.54  }, gv = 1734, lv=220072   },
	sarcofag	= { position = { x = 23.58,  y = 56,     z = 25.68   }, gv = 2417, lv=5160     }
}
function get_kordon_military() get_teleport("kordon","military",1,9121) end
function get_kordon_yantar() get_teleport("kordon","yantar",1,9121) end
function get_kordon_pripyat() get_teleport("kordon","pripat",1,9121) end
function get_pripyat_military() get_teleport("pripat","military",1,9122) end
function get_pripyat_yantar() get_teleport("pripat","yantar",1,9122) end
function get_pripyat_kordon() get_teleport("pripat","kordon",1,9122) end
function get_military_kordon() get_teleport("military","kordon",1,9123) end
function get_military_pripyat() get_teleport("military","pripat",1,9123) end
function get_military_yantar() get_teleport("military","yantar",1,9123) end
function get_yantar_military() get_teleport("yantar","military",1,9124) end
function get_yantar_kordon() get_teleport("yantar","kordon",1,9124) end
function get_yantar_pripyat() get_teleport("yantar","pripat",1,9124) end
function get_kordon_militaryr() get_teleport("kordon","military",0,9121) end
function get_kordon_yantarr() get_teleport("kordon","yantar",0,9121) end
function get_kordon_pripyatr() get_teleport("kordon","pripat",0,9121) end
function get_pripyat_militaryr() get_teleport("pripat","military",0,9122) end
function get_pripyat_yantarr() get_teleport("pripat","yantar",0,9122) end
function get_pripyat_kordonr() get_teleport("pripat","kordon",0,9122) end
function get_military_kordonr() get_teleport("military","kordon",0,9123) end
function get_military_pripyatr() get_teleport("military","pripat",0,9123) end
function get_military_yantarr() get_teleport("military","yantar",0,9123) end
function get_yantar_militaryr() get_teleport("yantar","military",0,9124) end
function get_yantar_kordonr() get_teleport("yantar","kordon",0,9124) end
function get_yantar_pripyatr() get_teleport("yantar","pripat",0,9124) end
function get_sarcofag_stancia() get_teleport("sarcofag","stancia",1,9125) end

function get_teleport(pos_out,pos_in,made,sidlc)
	local a = out_points[ pos_out ]

	local tmp = points[ pos_in ]
	local name_level = tmp.lname
	local b = ( made == 0 and  table.random( tmp.p ) ) or tmp.p[ 1 ]

	local obj1 = AI:create("level_changer",vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
	local obj_tp = AI:create("zone_teleport",vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
	local obj_tport = obj_tp.id
	amk.save_variable("sak_teleport", obj_tport)  
	if obj1 then
		local t = {}
		t.object_flags = bit_not(193)
		t.story_id = sidlc
		t.shapes = {{
			shtype = 0,
			center = vector():set(0,0,0),
			radius = 0.5
		}}
		t.restrictor_type = 3
		t.dest_level_name = name_level
		t.dest_position = vector():set(b.position.x,b.position.y,b.position.z)
		t.dest_game_vertex_id = b.gv
		t.dest_level_vertex_id = b.lv
		t.dest_graph_point = "start_actor_99"
		t.silent_mode = 1
		netpk:modify(obj1, t)
	end

	info_teleport()
end

function out_teleport()
	local sid={9121,9122,9123,9124,9125}
	local lev={"l01_escape","l11_pripyat","l07_military","l08_yantar","l12u_sarcofag"}
	for a=1,#sid,1 do
		local obj = AI:story_object( sid[a] )
		if obj and level.name() ~= lev[a] then
			local objt = amk.load_variable("sak_teleport", 0)
			AI:release(obj, true)
			if objt ~= 0 then
                del_obj_by_id(objt)
            end
			amk.del_variable("sak_teleport")
		end
	end
end

function switch_mil_matugalnik()
	local obj=AI:object("mil_physic_destroyable_object_0046")
	if obj then
		local params = {}
		params.custom_data="[logic]\ncfg = scripts\\mil\\matugalnik.ltx"
		netpk:modify(obj, params, netpk.fState)
	end
end
function add_3repair_item_outfit()
	inventory.give_items("repair_item_outfit",3)
end
function add_3repair_item_weapon()
	inventory.give_items("repair_item_weapon",3)
end
function add_repair_item_outfit()
	inventory.give_items("repair_item_outfit",1)
end
function add_repair_item_weapon()
	inventory.give_items("repair_item_weapon",1)
end
function add_medkit(first_speaker, second_speaker)
     dialogs.relocate_item_section(second_speaker, "medkit", "in")
     dialogs.relocate_item_section(second_speaker, "snotvornoe_tele", "in")
end 
function set_community(actor, npc)
	relation_registry.set_community_goodwill("bandit", Actor:id(), 500)
	-- поссорим актёра с конвоем Макса Любера
	local obj = AI:object("val_escort_guard2")
	if obj and obj:alive() then
		relation_registry.set_goodwill(obj.id, Actor:id(), -1000)
	end
	obj = AI:object("val_escort_guard1")
	if obj and obj:alive() then
		relation_registry.set_goodwill(obj.id, Actor:id(), -1000)
	end
	-- Помирим Макса Любера и Пулю с Монголом
	obj = AI:object("val_escort_bandit_halfdead")
	if obj and obj:alive() then
		local npc1 = AI:object("val_escort_nap1")
		local npc2 = AI:object("val_escort_captive")
		if npc1 and npc1:alive() and npc2 and npc2:alive() then
			relation_registry.set_goodwill(obj.id, npc1.id, 1500)
			relation_registry.set_goodwill(npc1.id, obj.id, 1500)
			relation_registry.set_goodwill(obj.id, npc2.id, 1500)
			relation_registry.set_goodwill(npc2.id, obj.id, 1500)
		end
	end
end
function bandits_enemy(actor, npc)
	if xr_conditions.killed_by_actor(actor, npc) then
		amk.send_tip("%c[red_sms]Ах ты сука! Братва, мочи козла!!!", nil, 1, 20)
	end
	relation_registry.set_community_goodwill("bandit", 0, -1500)
end
function drink_vodka()
	Actor:eat(Actor:object("vodka"))
end
function take_trasure(first_speaker, second_speaker)
	local npc = (first_speaker:id() == Actor:id()) and second_speaker or first_speaker
	treasure_manager.get_treasure_manager():process_treasure(npc)
end
function have_trasure(first_speaker, second_speaker)
	local tres
	if game_options.AmkTrs == 2 then 
	  tres = 80
	else 
      tres = 50
	end
	local ran=math_random(100)
	if ran > tres then Actor:give_info_portion("have_sak_treasure")
	else Actor:give_info_portion("havent_sak_treasure")
	end
end
function zombie_checkup()
	archievements.acv_count_event("acv_fzom", 100, "Друг зомби")

	if math_random() < 0.7 or inventory.on_belt("af_serpantin") then
		return
	end

	local a=math_random()
	local h = hit()
	h.draftsman = Actor
	h.direction = vector():set(0,0,0)
	h:bone("bip01_spine")
	h.type = hit.telepatic
	h.power = 0.3+a/2
	h.impulse = 1.0
	Actor:hit(h)
	h.type = hit.strike
	Actor:hit(h)
	h.type = hit.radiation
	Actor:hit(h)
	level.add_pp_effector("alcohol.ppe", 100, false)
	local rnd=table.random( {1,2,3,6,7,8} )
	local snd_obj = xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_]]..tostring(rnd))
	snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
end
function add_spot_of_docent(a)
--[[
	local old_spot=amk.load_variable("spot_of_nps", 0)
	if old_spot~=0 then
		local obj_old = AI:story_object(old_spot)
		if obj_old then
			amk.remove_spot_from_map(obj_old.id,'blue_location')
		end
	end
	local obj = AI:story_object(a)
	if obj and IAmAStalker[obj:clsid()] then
		amk.add_spot_on_map(obj.id,'blue_location',obj:name().."_sak")
		old_spot=a
		amk.save_variable("spot_of_nps", old_spot)
	end
]]
	local obj = AI:story_object(a)
	if obj and IAmAStalker[obj:clsid()]
		and level.map_has_object_spot(obj.id, 'blue_location')==0
	then
		level.map_add_object_spot_ser(obj.id, 'blue_location', obj:name()..'_sak')
	end
end

function check_actor_community(lname, sname)
	if lname == "l04_darkvalley" then
		local obj = AI:story_object(story_ids.val_borov)
		if obj and IAmAStalker[obj:clsid()] and obj:alive() then
			if has_alife_info("val_bandit_talk") then
				relation_registry.set_community_goodwill("bandit", 0, 500)
			end
		elseif relation_registry.community_goodwill("bandit", 0) > 0 then
			relation_registry.set_community_goodwill("bandit", 0, -2000)
		end
	elseif sname == "l04_darkvalley"
		and relation_registry.community_goodwill("bandit", 0) > 0
	then
		relation_registry.set_community_goodwill("bandit", 0, -2000)
	end

	if has_alife_info("snp_almaz3")
		and ( not has_alife_info("snp_almaz_done") )
		and lname ~= "av_peshera"
		and Actor:character_community() == "monolith"
	then
		Actor:set_character_community("actor", 0, 0)
	end
end

function check_radio()
	local info = {"bar_random", "bar_smile", "bar_rock", "bar_rockn", "bar_modern", "bar_retro"}
	local res = false
	for i, v in ipairs(info) do
		if has_alife_info(v) then
			res = true
			break
		end
	end
	if not res then
		Actor:give_info_portion("bar_random")
	end
end

function add_tail()
	local lname = level.name()
	if lname=="l05_bar" then
		check_radio()

	elseif lname=="zaton" then
		check_radio()

	elseif lname=="l01_escape" then
		Actor:give_info_portion("sidor_music")
		if Actor:has_info("prizrak_finalzver_start")
			and not Actor:has_info("info_spawn_zver")
		then
			Actor:give_info_portion("info_spawn_zver")
		end

	elseif lname=="l07_military" then
		if Actor:has_info("francuz_start") then
			Actor:give_info_portion("francuz_spawn")
		end

	elseif lname=="l10u_bunker" then
		if Actor:has_info("ucen_talk_need")
			and not Actor:has_info("ucen_talk_spawn")
		then
			Actor:give_info_portion("ucen_talk_spawn")
		end

	elseif lname=="l10_radar" and not has_alife_info("bar_deactivate_radar_done") then
		xr_s.subscribe("update", amk_mod.check_radar_off)

	elseif lname == "marsh" then
		xr_s.subscribe("update", marsh_radiation.update, { timeout = 500 } )
		if Actor:has_info("brat_luis_start") then
			Actor:give_info_portion("brat_luis_spawn")
		end

	elseif lname=="l03u_agr_underground" then
		if Actor:has_info("yakut_false_start")
			and not Actor:has_info("yakut_false_have")
		then
			Actor:give_info_portion("yakut_false_have")
		end

	elseif lname=="l03_agroprom" then
		if Actor:has_info("yakut_false_have")
			and not Actor:has_info("yakut_false_done")
		then
			Actor:give_info_portion("yakut_false_done")
		end
		if Actor:has_info("kot_agro_mono_start") 
			and not has_alife_info("kot_agro_mono_spawn")
		then
			Actor:give_info_portion("kot_agro_mono_spawn")
		end

	elseif lname=="l06_rostok" then
		if Actor:has_info("zahar_naemnik_start")
			and not Actor:has_info("zahar_naemnik_begin")
		then
			Actor:give_info_portion("zahar_naemnik_begin")
		end

	elseif lname=="l11_pripyat" then
		if has_alife_info("kot_find_rabi_scromnyi")
			and not has_alife_info("kot_find_rabi_spawn_rabi")
		then
			Actor:give_info_portion("kot_find_rabi_spawn_rabi")
		end

	elseif lname == "red_forest" then
		if not has_alife_info("actor_in_forest") then
			Actor:give_info_portion("actor_in_forest")
		end

	elseif lname == "av_peshera" then
		if not has_alife_info("spawn_teleport_exit") then 
			AI:create("m_teleport_exit",vector():set(102.761,31.20,410.701),168848,2985)
			Actor:give_info_portion("spawn_teleport_exit")
		end

	elseif lname == "hospital" then
		if (not has_alife_info("spawn_teleport_hospital"))
			and has_alife_info("pri_helicopters_start")
		then 
			AI:create("m_teleport_hospital",vector():set(-74.66,23.69,562.013),7350,3075)
			Actor:give_info_portion("spawn_teleport_hospital")
		end	
	end
	
	if lname~="l03_agroprom"
		and Actor:has_info("ratcatcher_order_done")
		and not Actor:has_info("ratcatcher_out")
	then
		Actor:give_info_portion("ratcatcher_out")
	end

	if lname~="l05_bar"
		and Actor:has_info("info_way_false")
		and not Actor:has_info("informer_out")
	then
		Actor:give_info_portion("informer_out")
	end

	if lname~="marsh" 
		and has_alife_info("kot_need_next_done")
		and not has_alife_info("bkot_spawn")
	then
		Actor:give_info_portion("bkot_spawn")
	end
end

function off_testobj()
	-- переделано на поршни - при выбросе снимаем все поршни, при спавне артов на локе выдаем
	Actor:disable_info_portion("testsak_l01_escape")
	Actor:disable_info_portion("testsak_l02_garbage")
	Actor:disable_info_portion("testsak_l03_agroprom")
	Actor:disable_info_portion("testsak_l04_darkvalley")
	Actor:disable_info_portion("testsak_l05_bar")
	Actor:disable_info_portion("testsak_l06_rostok")
	Actor:disable_info_portion("testsak_l07_military")
	Actor:disable_info_portion("testsak_l08_yantar")
	Actor:disable_info_portion("testsak_l10_radar")
	Actor:disable_info_portion("testsak_l11_pripyat")
	Actor:disable_info_portion("testsak_l12_stancia")
	Actor:disable_info_portion("testsak_atp_for_test22")
	Actor:disable_info_portion("testsak_puzir")
	Actor:disable_info_portion("testsak_aver")
	Actor:disable_info_portion("testsak_marsh")
	Actor:disable_info_portion("testsak_limansk")
	Actor:disable_info_portion("testsak_dead_city")
	Actor:disable_info_portion("testsak_generators")
	Actor:disable_info_portion("testsak_hospital")
	Actor:disable_info_portion("testsak_lost_village")
	Actor:disable_info_portion("testsak_red_forest")
	Actor:disable_info_portion("testsak_zaton")
	Actor:disable_info_portion("testsak_jupiter")
	Actor:disable_info_portion("testsak_pripyat")

--[[ старый код
	local obj
	for a=1,65534,1 do
	obj=AI:object(a)
		if obj and string_find(obj:name(),"testsak_") then
		AI:release(obj,true)
		end
	end
]]
end
function add_borov_treasure()
	treasure_manager.get_treasure_manager():give_treasure("mil_borov_secret")
end
function add_krysyk_treasure()
	treasure_manager.get_treasure_manager():give_treasure("agr_krysyk_secret")
end
function add_krysyk_pda()
	treasure_manager.get_treasure_manager():give_treasure("val_krysyk_secret")
end
-- Продолжение Крысюк - Жила:
function krysyk_enemy(first_speaker, second_speaker)
	local npc = first_speaker:id() == Actor:id() and second_speaker or first_speaker
	start_small_timer(400, function ()
		npc:set_relation(game_object.enemy, Actor)
	end)
	Actor:give_info_portion("bandit_krisyk_finish")
	Actor:give_info_portion("bandit_krisyk_enemy")
end
function krysyk_umer()
	if has_alife_info("bandit_krisyk_finish") then 
		Actor:give_info_portion("bandit_krisyk_finish2")
	else
		Actor:give_info_portion("bandit_krisyk_umer2")
	end
end
--
function dbglog(fmt,...)
  local msg = string_format(fmt, ...)
  local msg_no_ws = string_gsub(msg, "%s", "___")
  get_console():execute("dbg:" .. msg_no_ws)
end
-----------------------------------------------------------------------------------------------------------