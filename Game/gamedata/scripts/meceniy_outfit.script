-- -*- mode: lua; encoding: windows-1251 -*-
--\\*"НаноЭкзоСкелет "Скат-15М""..С Системой Жизненной Поддержки (СЖП) и С возможностью апгрейда..Меченый(Стрелок)..

local outfits = {
	["exo_mil_exoskeleton_add"]		= { "health", "bleeding" },
	["exo_mil_exoskeleton_addr"]	= { "health", "bleeding", "radiation" },
	["exo_mil_exoskeleton_addrs"]	= { "health", "bleeding", "radiation", "psy", "power" }
}
	
local system_data = {
	["health"] = {
		info = "skat_health_on",
		check = function()
			return Actor.health > 0.5
		end,
		drugs ={ "medkit", "medkit_army", "medkit_scientic", "suvorotka" },
		sms_warning = "st_meceniy_health_sms_warning",
		sms_ok = "st_meceniy_health_sms_ok",
		sms_fail = "st_meceniy_health_sms_fail"
	},
	["bleeding"] = {
		info = "skat_health_on",
		check = function()
			return Actor:get_bleeding() <= 0.5
		end,
		drugs ={ "bandage", "suvorotka" },
		sms_warning = "st_meceniy_bleeding_sms_warning",
		sms_ok = "st_meceniy_bleeding_sms_ok",
		sms_fail = "st_meceniy_bleeding_sms_fail"
	},
	["radiation"] = {
		info = "skat_rad_on",
		check = function()
			return arc_radiation.RAD_DOSE < arc_radiation.DOSE_HARMFUL
		end,
		drugs = { "antirad", "medkit_scientic", "suvorotka" },
		sms_warning = "st_meceniy_radiation_sms_warning",
		sms_ok = "st_meceniy_radiation_sms_ok",
		sms_fail = "st_meceniy_radiation_sms_fail"
	},
	["psy"] = {
		info = "skat_psy_on",
		check = function()
			return Actor.psy_health >= 0.4
		end,
		drugs ={ "antizombie" },
		sms_warning = "st_meceniy_psy_sms_warning",
		sms_ok = "st_meceniy_psy_sms_ok",
		sms_fail = "st_meceniy_psy_sms_fail"
	},
	["power"] = {
		info = "skat_power_on",
		check = function()
			return Actor.power > 0.35
		end,
		drugs ={ "energy_drink" },
		sms_warning = "st_meceniy_power_sms_warning",
		sms_ok = "st_meceniy_power_sms_ok",
		sms_fail = "st_meceniy_power_sms_fail"
	}
}

function on_actor_update()
	local sect = actor_outfit and actor_outfit:section() or ""
	
	amk_mod.check_armor(sect)
	
	if not ( outfits[ sect ]
		and Actor:alive() )
	then
		return
	end

	for i, v in ipairs( outfits[ sect ] ) do
		system_outfit( system_data[ v ] )
	end
end

function on_sub_actor_update()
	update_spawn()
end

function update_spawn()
	AI:create_no_ai("doc_1",vector():set(-198.597,4.488,168.971),25633,1363)
	AI:create_no_ai("art_acumm",vector():set(-33.133,3.548,-64.111),198,1960)
	AI:create_no_ai("doc_8",vector():set(-33.133,3.548,-64.111),198,1960)
	AI:create_no_ai("doc_10",vector():set(-89.387,-2.457,-25.271),19105,2875)
	AI:create_no_ai("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
	AI:create_no_ai("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
end

function change_exo_cond(t, id, exo)
	exo:set_condition(t.cond)
	start_small_timer(1000, function(obj, val)
		if val > 0 then
			obj:binded_object():charge(val, 1, true)
		else
			obj:binded_object():discharge()
		end
	end,
	exo, t.chrg)
end

function doc_use(outfit, doc)
	local cond = outfit:condition()
	local chrg = outfit:get_charge_level()
	del_obj_by_id( outfit:id() )
	local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_add")
	level.client_spawn_manager():add(obj.id, -1, change_exo_cond, {cond = cond, chrg = chrg})
	ui_inv_add.show_inv_msg("st_skat_upgrade_0", nil, 2000)
	for i=1,2 do
		AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
	end
	del_obj_by_id( doc:id() )
end

function update_spawn_2()
	AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
end

function doc_use_2(outfit, doc)
	local cond = outfit:condition()
	local chrg = outfit:get_charge_level()
	del_obj_by_id( outfit:id() )
	local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_addr")
	level.client_spawn_manager():add(obj.id, -1, change_exo_cond, {cond = cond, chrg = chrg})
	ui_inv_add.show_inv_msg("st_skat_upgrade_1", nil, 2000)
	del_obj_by_id( doc:id() )
end


function doc_use_3(outfit, doc)
	local cond = outfit:condition()
	local chrg = outfit:get_charge_level()
	local accum_sect = outfit:binded_object():get_current_accumm()
	del_obj_by_id( outfit:id() )
	local obj = amk.spawn_item_in_inv("exo_mil_exoskeleton_addrs")
	level.client_spawn_manager():add(obj.id, -1, change_exo_cond, {cond = cond, chrg = 0})
	ui_inv_add.show_inv_msg("st_skat_upgrade_2", nil, 2000)
	del_obj_by_id( doc:id() )
	
	local accum = AI:create(accum_sect, vector():set(0,0,0), 0, 0, 0)
	netpk:modify(accum, {condition = chrg}, netpk.fState)
	level.client_spawn_manager():add(accum.id, -1,
		function(condition, id, cobj)
			cobj:set_condition(condition)
		end,
	chrg)
end

function spawner()
	AI:create("art_acumm",vector():set(-89.387,-2.457,-25.271),19105,2875)
end

function system_outfit( t )
	if not has_alife_info( t.info ) then return end

	if t.check() or t.need_treat then
		t.f = nil
		t.f_end = nil
		return 
	end

	if not t.f then
		news_manager.send_tip(
			"%c[gray2]"..game.translate_string("st_meceniy_outfit_system")..
			"\\n%c[red_sms]"..game.translate_string(t.sms_warning),
			nil, "nano", 5000
		)
		t.f = true
	end

	if not t.f_end then
		t.need_treat = true
		for i,v in ipairs( t.drugs ) do
			if Actor:object( v ) then
				shiftCheckDropItem()
				Actor:eat( Actor:object( v ) )
				t.need_treat = nil
				xr_s.subscribe( "update", function( delta, tt )
					if not tt.check() then
						tt.f_end = nil
					end
				end,
				{ timeout = 600, userobj = t, once = true } )
				break
			end
		end

		if t.need_treat then
			if not t.reg then
				t.check_take_drugs = function( item, tt )
					if table.find( tt.drugs, item:section() ) then
						tt.need_treat = nil
					end
				end
				xr_s.subscribe( "item_take", t.check_take_drugs, { userobj = t } )
				t.reg = true
			end
			do_heal( false, t.sms_fail )
		else
			if t.reg then
				xr_s.unsubscribe( "item_take", t.check_take_drugs )
				t.check_take_drugs = nil
				t.reg = nil
			end
			do_heal( true, t.sms_ok )
		end
		t.f_end = true
	end
end


function exo_in_section(item)
	local itm = item:section()
	if itm == "exo_mil_exoskeleton_addr" then
		AI:create(itm, Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id(), Actor:id())
		del_obj_by_id(item:id())
	end
end

function dbglog(fmt,...)    
	local msg = string.format(fmt, ...)    
	local msg_no_ws = string.gsub(msg, "%s", "_" )    
	get_console():execute("dbg:" .. msg_no_ws)
end

function do_heal(a,str)
	if a then
		play_snd([[meceniy\outfit\est_med]])
	else
		play_snd([[meceniy\outfit\net_med]])
	end
	news_manager.send_tip(
		"%c[gray2]"..game.translate_string("st_meceniy_outfit_system")..
		"\\n%c[red_sms]"..game.translate_string(str),
		nil, "nano", 5000
	)
end

function play_snd(snd)
	local snd_obj = xr_sound.get_safe_sound_object(snd)
	snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
end
