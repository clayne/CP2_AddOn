-- -*- mode: lua; encoding: windows-1251 -*-
local function gar_seryi_killed()
	return has_alife_info("garbage_meetstalker_die") and
	       has_alife_info("gar_seryi_drug_die") and
	       has_alife_info("gar_seryi_drug2_die")
end

local t = {}
local gulags = {
	--- svalka лагерь ---	
	["svalka_lager"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@svalka_lager_esc_kostya",
				online = true
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:profile_name() == "esc_kostya"
		end
	},
	-- ГУЛАГ НАЕМНИКОВ НА СВАЛКЕ
	["killer_garbage_lager"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 8 do
				t = { section = "logic@killer_garbage_lager_man"..i,
					prior = 5
				}
				table.insert(sj, t)
			end
			for i = 1, 2 do
				t = { section = "logic@killer_garbage_lager_kamp",
					prior = 2
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function (npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "killer"
		end
	},
	-- ГУЛАГ МИНИ-БАРА НА СВАЛКЕ
	["amk_mini_bar"] = {
		state = function(gulag)
			if Actor ~= nil then
				if ( level.get_time_hours() >= 5 and level.get_time_hours() <= 22 ) then
					return 0  
				else
					return 1  
				end
			else
				return gulag.state
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@amk_mini_bar_kulinar",
				prior = 25, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor",
				predicate = function(obj_info)
								return obj_info.profile_name == "amk_artem_kulinar"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_voron",
				prior = 25, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor",
				predicate = function(obj_info)
								return obj_info.profile_name == "amk_vitek_voron"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker1",
				prior = 5, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker2",
				prior = 15, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker3",
				prior = 15, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker4",
				prior = 5, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker5",
				prior = 15, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker6",
				prior = 5, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker7",
				prior = 5, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker8",
				prior = 10, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker9",
				prior = 20, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker10",
				prior = 20, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			t = { section = "logic@amk_mini_bar_stalker11",
				prior = 20, state = {0, 1},
				out_rest = "amk_mini_bar_restrictor"
			}
			table.insert(sj, t)
			for i = 1, 3 do
				t = { section = "logic@amk_mini_bar_stalker1_kamp",
					prior = 10, state = {0, 1},
					out_rest = "amk_mini_bar_restrictor"
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
		end
	},
	--' Hellcar's_group
	["gar_hellcar_group"] = {
		state = function(gulag)
			if Actor ~= nil then
				if has_alife_info("gar_alarm") then
					if has_alife_info("gar_bandits_killed") then
						return 1
					else
						return 2
					end
				else
					return 0
				end
			else
				return gulag.state
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_hellcar_group_hellcar",
				prior = 10,
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_hellcar"			           
							end
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_walker1",
				prior = 8,
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_walker2",
				prior = 6,
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_walker3",
				prior = 16,
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_dram_novice"			           
							end
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_rest1",
				prior = 5, state = {1},
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_rest2",
				prior = 5, state = {1},
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_rest3",
				prior = 15, state = {1},
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_dram_novice"			           
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_hellcar_group_rest4",
				prior = 15, state = {1},
				out_rest = "gar_graveyard_car",
				position_threshold = 100,
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_hellcar"			           
							end
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_camper1",
				prior = 5, state = {2},
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_camper2",
				prior = 5, state = {2}, 
				out_rest = "gar_graveyard_car"
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_camper3",
				prior = 15, state = {2},
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_dram_novice"			           
							end
			}
			table.insert(sj, t)		
			t = { section = "logic@gar_hellcar_group_camper4",
				prior = 10, state = {2},
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_hellcar"			           
							end
			}
			table.insert(sj, t)		
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
		end
	},
	--' Bandits_on_agroprom_exit
	["gar_bandit_agr"] = {
		state = function(gulag)
			if Actor ~= nil then
				if gulag.state == 1 then
					if has_alife_info("gar_counter_fire") then
						return 3
					end
				end
				
				if gulag.state == 3 then
					if xr_gulag.getGulagPopulation("gar_hellcar_group") > 0 then
						return 3 -- в бою
					end	
				end
				
				if xr_gulag.getGulagPopulation("gar_hellcar_group") == 0 and has_alife_info("gar_bandits_raid")then
						return 2 -- в кемпе
					elseif has_alife_info("gar_bandits_raid") and not has_alife_info("gar_counter_fire") then
						return 1  -- идут
					else
						return 0  -- ждут
				end
			else
				return gulag.state
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 5 do
				t = { section = "logic@gar_bandit_agr_camper"..i,
					prior = 8, state = {0,1,2,3},
					out_rest = "gar_bandits_camp_rest"
				}
				table.insert(sj, t)
			end
			for i = 1, 5 do
				t = { section = "logic@gar_bandit_agr_wait"..i,
					prior = 5,
					online = true
				}
				table.insert(sj, t)
			end	
			t = { section = "logic@gar_bandit_agr_wait6",
				prior = 10,
				online = true,
				predicate = function(obj_info) 
					return obj_info.profile_name == "gar_bandit_leader"			           
				end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_wait7",
				prior = 3,
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_wait8",
				prior = 3,
				online = true
			}
			table.insert(sj, t)
			for i = 1, 5 do
				t = { section = "logic@gar_bandit_agr_kamp"..i,
					prior = 5, state = {2}
				}
				table.insert(sj, t)
			end	
			t = { section = "logic@gar_bandit_agr_kamp6",
				prior = 10, state = {2},
				predicate = function(obj_info) 
					return obj_info.profile_name == "gar_bandit_leader"			           
				end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_kamp7",
				prior = 3, state = {2}
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_kamp8",
				prior = 3, state = {2}
			}
			table.insert(sj, t)

			t = { section = "logic@gar_bandit_agr_leader_raid",
				prior = 11, state = {1},
				online = true,
				predicate = function(obj_info) 
					return obj_info.profile_name == "gar_bandit_leader"			           
				end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower1",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower1",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower2",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower2",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower1",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_follower2",
				prior = 8, state = {1},
				online = true
			}
			table.insert(sj, t)

			t = { section = "logic@gar_bandit_agr_leader_raid2",
				prior = 10, state = {1},
				online = true
			}
			table.insert(sj, t)
			t = { section = "logic@gar_bandit_agr_restrictor_raid",
				prior = 5, state = {3},
				online = true,
				out_rest = "gar_graveyard_car",
				predicate = function(obj_info) 
					return obj_info.profile_name == "gar_bandit_leader"			           
				end
			}
			table.insert(sj, t)
			for i = 1, 7 do
				t = { section = "logic@gar_bandit_agr_restrictor_raid",
					prior = 5, state = {3},
					online = true,
					out_rest = "gar_graveyard_car",
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	--' Dolg_blokpost
	["gar_dolg_blokpost"] = {
		state = function(gulag)
			if has_alife_info("gar_test_info2") then
				return 1 -- кабаны атакуют
			else
				return 0 -- спокойное состояние
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 3 do
				t = { section = "logic@gar_dolg_blokpost_camper"..i,
					prior = 5, state = {0,1}
				}
				table.insert(sj, t)
			end
			t = { section = "logic@gar_dolg_blokpost_zoneguard1",
				prior = 10, state = {0,1},
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_dolg_blokpost_commander"			           
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_dolg_blokpost_zoneguard2",
				prior = 7, state = {0,1}
			}
			table.insert(sj, t)
			t = { section = "logic@gar_dolg_blokpost_zoneguard3",
				prior = 7, state = {0,1}
			}
			table.insert(sj, t)
			for i = 1, 5 do
				t = { section = "logic@gar_dolg_blokpost_kamp"..i,
					prior = 3
				}
				table.insert(sj, t)
			end
			t = { section = "logic@gar_dolg_blokpost_patrol",
				prior = 5, state = {0,1}
			}
			table.insert(sj, t)
			for i = 1, 5 do
				t = { section = "logic@gar_dolg_blokpost_alarm"..i,
					prior = 9, state = {1}
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dolg"
		end
	},
	--' Boars nest 2
	["gar_boars_nest2"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 8 do
				t = { section = "logic@gar_boars2_nest" }
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "boar"
		end
	},
	--' Boars nest (to Dolg)
	["gar_boars_nest"] = {
		state = function(gulag)
			if has_alife_info("gar_test_info2") and not has_alife_info("gar_test_info1") then
				return 1
			elseif has_alife_info("gar_test_info1") then
				return 2 -- attack				
			else
				return 0
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 13 do
				t = { section = "logic@gar_boars_nest",
					online = false
				}
				table.insert(sj, t)
			end
			for i = 1, 13 do
				t = { section = "logic@gar_boars_nest",
					state = {1},
					online = true
				}
				table.insert(sj, t)
			end
			for i = 1, 13 do
				t = { section = "logic@gar_boars_nest_rush",
					state = {2},
					online = true,
					position_threshold = 300,
					out_rest = "gar_boars_rush"
				}
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "boar"
		end
	},
	--' Flesh nest
	["gar_nest_flesh"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 7 do
				t = { section = "logic@gar_nest_flesh" }
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "flesh"
		end
	},
	--' Dogs nest
	["gar_dogs_nest"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 16 do
				t = { section = "logic@gar_dogs_nest" }
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dog"
		end
	},
	--' Dogs nest2
	["gar_dogs_nest2"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 12 do
				t = { section = "logic@gar_dogs_nest2" }
				table.insert(sj, t)
			end
		end,
		check_monster = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "dog"
		end
	},
	--' Bandits_attack_seryi
	["gar_seryi_bandits"] = {
		state = function(gulag)
			if Actor ~= nil then
				if gulag.state == 0 then
					if gar_seryi_killed() then
						return 3
					end

					if has_alife_info("gar_seryi_actor_enter") then
						return 1
					else
						return 0
					end
				elseif gulag.state == 1 then
					if gar_seryi_killed() then
						return 3
					end

					if has_alife_info("gar_seryi_ceitnot") then
						return 2
					else
						return 1
					end
				elseif gulag.state == 2 then
					if gar_seryi_killed() then
						return 3
					else
						return 2
					end
				else
					return 3
				end
			else
				return gulag.state
			end
		end,
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_seryi_bandits_camper20",
				prior = 5,
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper40",
				prior = 5,
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper60",
				prior = 5, state = {0,1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			
			t = { section = "logic@gar_seryi_bandits_camper11",
				prior = 10, state = {0,1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper21",
				prior = 5, state = {1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper31",
				prior = 5, state = {0,1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper41",
				prior = 5, state = {1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)
			t = { section = "logic@gar_seryi_bandits_camper51",
				prior = 5, state = {0,1},
				out_rest = "gar_seryi_factory"
			}
			table.insert(sj, t)

		
			t = { section = "logic@gar_seryi_bandits_walker1",
				prior = 5, state = {2},
				out_rest = "gar_seryi_battle_restrictor"
			}
			table.insert(sj, t)
			for i = 1, 5 do
				t = { section = "logic@gar_seryi_bandits_walker2",
					prior = 5, state = {2},
					out_rest = "gar_seryi_battle_restrictor"
				}
				table.insert(sj, t)
			end
		
			for i = 1, 6 do
				t = { section = "logic@gar_seryi_bandits_kamp"..i,
					prior = 5, state = {3}
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	--' Bandits post
	["gar_bandit_post"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_bandit_post_sniper",
				prior = 3,
				out_rest = "gar_bandits_lager2"
			}
			table.insert(sj, t)
			for i = 2, 7 do
				t = { section = "logic@gar_bandit_post_walker"..i,
					prior = 5,
					out_rest = "gar_bandits_lager2"
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	--' Bandits stroyka
	["gar_bandit_stroyka"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 5 do
				t = { section = "logic@gar_bandit_stroyka_"..i,
					out_rest = "gar_stroyka_restrictor"
				}
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	--' Dram moment
	["gar_dram"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_dram_bandit_1",
				out_rest = "gar_bandits_restrictor",
				predicate = function(obj_info) 
								return obj_info.story_id == story_ids.gar_dm_bandit1
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_dram_bandit_2",
				out_rest = "gar_bandits_restrictor",
				predicate = function(obj_info) 
								return obj_info.story_id == story_ids.gar_dm_bandit2
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_dram_bandit_3",
				out_rest = "gar_bandits_restrictor",
				predicate = function(obj_info) 
								return obj_info.story_id == story_ids.gar_dm_bandit3			           
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_dram_novice",
				predicate = function(obj_info) 
								return obj_info.story_id == story_ids.gar_dm_novice			           
							end
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			local sid = se_obj.m_story_id
			return sid == story_ids.gar_dm_bandit1
				or sid == story_ids.gar_dm_bandit2
				or sid == story_ids.gar_dm_bandit3
				or sid == story_ids.gar_dm_novice
		end
	},
	-- Серый и Ко в ангаре
	["gar_angar"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_angar_seryi",
				prior = 10,
				out_rest = "gar_seryi_battle_restrictor",
				predicate = function(obj_info) 
								return obj_info.profile_name == "gar_seriy"			           
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_angar_wounded",
				prior = 10,
				out_rest = "gar_seryi_battle_restrictor",
				predicate = function(obj_info) 
								return obj_info.story_id == story_ids.gar_seryi_drug_wounded
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_angar_drug1",
				prior = 3,
				out_rest = "gar_seryi_battle_restrictor"
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "stalker"
		end
	},
	["gar_bandit_ambush"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			for i = 1, 3 do
				t = { section = "logic@gar_bandit_ambush_"..i }
				table.insert(sj, t)
			end
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return npc_community == "bandit"
		end
	},
	["gar_psevdowounded"] = {
		job = function(sj, gname, gulag_type, squad, groups)
			t = { section = "logic@gar_psevdowounded_2",
				out_rest = "gar_sniper_in_restrictor",
				predicate = function(obj_info) 
								return obj_info.name == "gar_sniper_bandit"           
							end
			}
			table.insert(sj, t)
			t = { section = "logic@gar_psevdowounded_1",
				predicate = function(obj_info) 
								return obj_info.name == "gar_wounded_bandit"
							end
			}
			table.insert(sj, t)
		end,
		check_stalker = function(npc_community, gulag_type, npc_rank, se_obj)
			return se_obj:name() == "gar_wounded_bandit"
				or se_obj:name() == "gar_sniper_bandit"
		end
	}
}

function get_gulag(gulag_type)
	return gulags[gulag_type]
end
