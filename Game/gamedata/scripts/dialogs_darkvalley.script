-------------------------------------------------------------------------
--	created:	2005/02/28
--	created:	28:2:2005   16:08
--	filename: 	x:\gamedata\scripts\dialogs_darkvalley.script
--	file path:	x:\gamedata\scripts
--	file base:	dialogs_darkvalley
--	file ext:	script
--	author:		Andrey Fidrya aka Zmey
--  updated by: Oleg Kreptul (Haron)
--	
--	purpose:	dialog support for Dark Valley
-------------------------------------------------------------------------

-- function printf() end

function val_rob_actor_has_money(actor, npc)
	return actor:money() >= 800
end

function val_rob_actor_reloc_money(actor, npc)
	dialogs.relocate_money(npc, 800, "out")
end

function val_escort_reward(npc, actor)
    dialogs.relocate_money(npc, 1300, "in")
    dialogs.relocate_item_section(npc, "wpn_addon_scope", "in")
end

function has_good_art(fs, ss)
	local item
	for i = 0, Actor:ruck_count()-1 do
		item = Actor:item_in_ruck(i)
		if isArtefact(item)
			and sys_ini:r_u32_ex(item:section(), "art_level", 0) >= 3
			and item:cost() >= 4000
		then
			return true
		end
	end
	return false
end
function dont_has_good_art(fs, ss)
	return not has_good_art(fs, ss)
end
function val_sacrifice_finish(fs, ss)
	local arts = {}
	for i = 0, Actor:ruck_count()-1 do
		local item = Actor:item_in_ruck(i)
		if isArtefact(item)
			and sys_ini:r_u32_ex(item:section(), "art_level", 0) >= 3
			and item:cost() >= 4000
		then
			table.insert(arts, item)
			break
		end
	end

	if #arts == 0 then return end

	local npc = (fs:id() == 0) and ss or fs
	local art = table.random(arts)
	Actor:transfer_item(item, npc)
	news_manager.relocate_item("out", item:section())

	naxac.level_community_relation_by_sid(story_ids.val_sacrifice_victim, "l04_darkvalley", "bandit", 1500)

	start_real_timer("run", 7, "dialogs_darkvalley.val_sacrifice_finish1()")
end
function val_sacrifice_finish1()
	Actor:give_info_portion("val_sacrifice_finish")
end

function val_sacrifice_fail(fs, ss)
	local npc = level_object_by_sid(story_ids.val_sacrifice_victim)
	if npc then
		AI:create("medkit", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
		xr_wounded.unlock_medkit(npc)
	end
	naxac.level_community_relation_by_sid(story_ids.val_sacrifice_victim, "l04_darkvalley", "bandit", -1000)
end

function val_prisoner_ransom_start(fs, ss)
	start_game_timer("run", 1, 0, 0, "dialogs_darkvalley.val_prisoner_ransom_fail()")
end

function val_prisoner_ransom_money(fs, ss)
	return Actor:money() >= 100000
end

function val_prisoner_ransom_done(fs, ss)
	local npc = (fs:id() == 0) and ss or fs
	dialogs.relocate_money(npc, 100000, "out")
	dialogs.relocate_money(npc, 2000, "in")

	remove_timer_by_parameter("run", "dialogs_darkvalley.val_prisoner_ransom_fail()")

	naxac.level_community_relation_by_sid(story_ids.val_prisoner, "l04_darkvalley", "bandit", 1500)
end

function val_prisoner_ransom_fail()
	if Actor:has_info("val_prisoner_ransom_done") then
		return
	end
	Actor:give_info_portion("val_prisoner_ransom_fail_1")
end

function sacrifice_victim_alive()
	local npc = AI:story_object(story_ids.val_sacrifice_victim)
	return npc and npc:alive()
		and Actor:has_info("val_sacrifice_finish")
end
function escort_captive_alive()
	local npc = AI:story_object(story_ids.val_escort_captive)
	return npc and npc:alive()
		and darkvalley_tasks.escort_task_done()
end
function dolg_both_alive(fs, ss)
	return sacrifice_victim_alive()
		and escort_captive_alive()
end
function dolg_some_one_alive(fs, ss)
	local b1 = sacrifice_victim_alive()
	local b2 = escort_captive_alive()
	return (b1 and not b2) or (b2 and not b1)
end
function dolg_no_one_alive(fs, ss)
	return ( not sacrifice_victim_alive() )
		and ( not escort_captive_alive() )
end

function voronin_ransom_money(fs, ss)
	start_real_timer("run", 50, "dialogs_darkvalley.voronin_ransom_money_1()")
end
function voronin_ransom_money_1()
	dialogs.relocate_money(true, 100000, "in")
	news_manager.send_tip("voronin_ransom_sms_1", 3, "voronin", 10000)
	news_manager.send_tip("voronin_ransom_sms_2", 17, "meceniy", 10000)
end
function voronin_ransom_sms()
	news_manager.send_tip("voronin_ransom_sms_3", 5, "meceniy", 10000)
	news_manager.send_tip("voronin_ransom_sms_4", 19, "voronin", 10000)
end

function voronin_treasure(fs, ss)
	treasure_manager.give_random_treasure(true)
end
