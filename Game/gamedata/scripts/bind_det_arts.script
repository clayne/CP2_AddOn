-- -*- mode: lua; encoding: windows-1251 -*-
--//----------------------------------------
--//Автор: Singapur22 переписано Proper70
--//Дата выхода: 10.01.2010
--//-----------------------------------------
local db_arts = {}
local level_object = level.object_by_id

-- В эту таблицу вписывать только секции, которые не начинаются с af_
local list_arts = {
	["5.45x39_izomorf"] = true,
	["5.45x39_izomorf_1"] = true,
	["7.62x54_izomorf"] = true,
	["amk_af_night_star"] = true,
	["ammo_zhekan_izomorf"] = true,
	["art_acumm"] = true,
	["artifact_electro_crystal_thorn"] = true,
	["gold_art"] = true,
	["izom_globus"] = true,
	["izomorf_kompas"] = true,
	["izomorf_kristal"] = true,
	["izomorf_plastilin"] = true,
	["kaktus_izomorf"] = true,
	["kolba_fiol_poln"] = true,
	["kolba_krasn_poln"] = true,
	["kolba_orand_poln"] = true,
	["kolba_pustay"] = true,
	["kolba_siniy_poln"] = true,
	["kostya_af_gold_fish"] = true,
	["linza_fotik"] = true,
	["osnova_fotik"] = true,
	["preplastilin"] = true,
	["psevdokristall"] = true,
	["pushka_fotik"] = true,
	["rukzak_izomorf"] = true,
	["wa2000_izomorf"] = true
}
local forbiddens = {
	["af_invul"] = true,
	["af_fosfor"] = true
}

local detector_sound = sound_object("ambient\\da_beep")
local need_del_spot = nil

function is_detected_art(section)
	return list_arts[section] or ( section:find("^af_") and not forbiddens[section] )
end

function add_artefact(obj_id, obj_sect)
	-- log("add_artefact %s[%s]", obj_sect, obj_id)
	if is_detected_art( obj_sect )
		and db_arts[obj_id] == nil
	then
		db_arts[obj_id] = {spot = false, tim_beep = 0}
	end
end
function del_artefact(obj_id)
	db_arts[obj_id] = nil
end

function update()
	if inventory.on_belt("det_artefact_super") then
		this.det_super()
		need_del_spot = true
	elseif inventory.on_belt("detektor_amorf") then
		this.det_izomorf()
		need_del_spot = true
	elseif inventory.on_belt("det_artefact_indy") then
		this.det_indy()
		need_del_spot = true
	elseif need_del_spot then
		this.iteration_del_spot()
		need_del_spot = nil
	end
end

local function fix_art_pos(art)
	if art:name() ~= art:section()..art:id() then return end
	local lv_pos = level.vertex_position( art:level_vertex_id() )
	if art:position():distance_to(lv_pos) > 1 then
		local art_id = art:id()
		AI:teleport_object(
			"",
			lv_pos:add( vector():set(0, 2, 0) ),
			art:level_vertex_id(),
			art:game_vertex_id(),
			art_id
		)
		AI:object( art_id ):use_ai_locations(false)
	end
end

function det_indy()
    local obj, dist
	local time_g = time_global()
	local actor_pos = Actor:position()
    for k,v in pairs(db_arts) do
	    obj = level_object(k)
		if obj then
		    if not obj:parent() then
				if not v.fixed then
					fix_art_pos(obj)
					v.fixed = true
				end
				dist = actor_pos:distance_to_sqr( obj:position() )
				if dist <= 40*40 and dist < time_g - v.tim_beep  then
					if not detector_sound:playing() then
						v.tim_beep = time_g
						detector_sound:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
					end
				else
					this.del_spot(k, v)
				end
			else
			    this.del_spot(k, v)
			end
		end
	end
end

function det_izomorf()
    local obj, dist
	local time_g = time_global()
	local actor_pos = Actor:position()
    for k,v in pairs(db_arts) do
	    obj = level_object(k)
		if obj then
		    if not obj:parent() then
				if not v.fixed then
					fix_art_pos(obj)
					v.fixed = true
				end
				dist = actor_pos:distance_to_sqr(obj:position())
				if dist < 60*60 then
					if not v.spot then
						level.map_add_object_spot(k, "artefact_location", get_inv_name(obj:section()))
						v.spot = true
					end
					if v.tim_beep < time_g and not detector_sound:playing() then
						v.tim_beep = time_g + 2500
						detector_sound:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
					end
				else
					this.del_spot(k, v)
				end
			else
			    this.del_spot(k, v)
			end
		end
	end
end

function det_super()
    local sobj, dist, art
	local actor_pos = Actor:position()
	local time_g = time_global()
    for k,v in pairs(db_arts) do
	    sobj = AI:object(k)
		if sobj then
			if sobj.parent_id == 65535 then
				if not v.spot then
					level.map_add_object_spot(k, "artefact_location", get_inv_name(sobj:section_name()))
					v.spot = true
				end
				art = level_object(k)
				if art then
					if (not v.fixed) then
						fix_art_pos(art)
						v.fixed = true
					end
					dist = actor_pos:distance_to_sqr( art:position() )
					if dist < 60*60 then
						if v.tim_beep < time_g and not detector_sound:playing() then
							v.tim_beep = time_g + 2500
							detector_sound:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
						end
					end
				end
			else
				this.del_spot(k, v)
			end
		end
	end
end

function iteration_del_spot()
	local sobj
    for k,v in pairs(db_arts) do
		if v.spot then
	    	sobj = AI:object(k)
			if sobj then
				this.del_spot(k, v)
			end
		end
	end
end

function del_spot(k, v)
    if v.spot then
		level.map_remove_object_spot(k, "artefact_location")
		db_arts[k].spot = false
	end
end
